{
  "terrainOptions": [
    {
      "id": "Asphalt Road",
      "name": "Asphalt Road",
      "maskTilesUrl": "/assets/map/tilesets/asphalt_road/29_asphalt_road_mask.png",
      "borderTilesUrl": "/assets/map/tilesets/asphalt_road/29_asphalt_road_border.png",
      "fillUrl": "/assets/map/tilesets/asphalt_road/29_asphalt_road_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/asphalt_road/29_asphalt_road_preview.png"
    },
    {
      "id": "Concrete Blastball Field",
      "name": "Blastball Court",
      "maskTilesUrl": "/assets/map/tilesets/concrete_blastball_field/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/concrete_blastball_field/border.png",
      "fillUrl": "/assets/map/tilesets/concrete_blastball_field/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/concrete_blastball_field/preview.png"
    },
    {
      "id": "Boardwalk",
      "name": "Boardwalk",
      "maskTilesUrl": "/assets/map/tilesets/boardwalk/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/boardwalk/border.png",
      "fillUrl": "/assets/map/tilesets/boardwalk/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/boardwalk/preview.png"
    },
    {
      "id": "Castle Tile Green",
      "name": "Castle Tile (Green)",
      "maskTilesUrl": "/assets/map/tilesets/castle_tile/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/castle_tile/green_border.png",
      "fillUrl": "/assets/map/tilesets/castle_tile/green_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/castle_tile/green_preview.png"
    },
    {
      "id": "Castle Tile Purple",
      "name": "Castle Tile (Purple)",
      "maskTilesUrl": "/assets/map/tilesets/castle_tile/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/castle_tile/purple_border.png",
      "fillUrl": "/assets/map/tilesets/castle_tile/purple_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/castle_tile/purple_preview.png"
    },
    {
      "id": "Castle Tile Red",
      "name": "Castle Tile (Red)",
      "maskTilesUrl": "/assets/map/tilesets/castle_tile/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/castle_tile/red_border.png",
      "fillUrl": "/assets/map/tilesets/castle_tile/red_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/castle_tile/red_preview.png"
    },
    {
      "id": "Cinema",
      "name": "Cinema Carpet",
      "maskTilesUrl": "/assets/map/tilesets/cinema/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/cinema/border.png",
      "fillUrl": "/assets/map/tilesets/cinema/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/cinema/preview.png"
    },
    {
      "id": "Concrete",
      "name": "Concrete",
      "maskTilesUrl": "/assets/map/tilesets/concrete/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/concrete/border.png",
      "fillUrl": "/assets/map/tilesets/concrete/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/concrete/preview.png"
    },
    {
      "id": "Cracked Wood",
      "name": "Cracked Oak",
      "maskTilesUrl": "/assets/map/tilesets/cracked_wood/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/cracked_wood/border.png",
      "fillUrl": "/assets/map/tilesets/cracked_wood/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/cracked_wood/preview.png"
    },
    {
      "id": "Dark Scraps",
      "name": "Dark Scraps",
      "maskTilesUrl": "/assets/map/tilesets/scraps/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/scraps/dark_border.png",
      "fillUrl": "/assets/map/tilesets/scraps/dark_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/scraps/dark_preview.png"
    },
    {
      "id": "Dirt",
      "name": "Dirt",
      "maskTilesUrl": "/assets/map/tilesets/dirt/27_dirt_mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dirt/27_dirt_border.png",
      "fillUrl": "/assets/map/tilesets/dirt/27_dirt_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/dirt/27_dirt_preview.png"
    },
    {
      "id": "Disco",
      "name": "Disco",
      "maskTilesUrl": "/assets/map/tilesets/disco/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/disco/border.png",
      "fillUrl": "/assets/map/tilesets/disco/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/disco/preview.png"
    },
    {
      "id": "Dry Grass",
      "name": "Dry Grass",
      "maskTilesUrl": "/assets/map/tilesets/grass/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/grass/26_grass_dry_border.png",
      "fillUrl": "/assets/map/tilesets/grass/26_grass_dry_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/grass/26_grass_dry_preview.png"
    },
    {
      "id": "Dungeon Blue",
      "name": "Dungeon (Blue)",
      "maskTilesUrl": "/assets/map/tilesets/dungeon/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dungeon/border_blue.png",
      "fillUrl": "/assets/map/tilesets/dungeon/fill_blue.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/dungeon/preview_blue.png"
    },
    {
      "id": "Dungeon Gray",
      "name": "Dungeon (Gray)",
      "maskTilesUrl": "/assets/map/tilesets/dungeon/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dungeon/border_gray.png",
      "fillUrl": "/assets/map/tilesets/dungeon/fill_gray.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/dungeon/preview_gray.png"
    },
    {
      "id": "Dungeon Green",
      "name": "Dungeon (Green)",
      "maskTilesUrl": "/assets/map/tilesets/dungeon/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dungeon/border_green.png",
      "fillUrl": "/assets/map/tilesets/dungeon/fill_green.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/dungeon/preview_green.png"
    },
    {
      "id": "Dungeon Purple",
      "name": "Dungeon (Purple)",
      "maskTilesUrl": "/assets/map/tilesets/dungeon/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dungeon/border_purple.png",
      "fillUrl": "/assets/map/tilesets/dungeon/fill_purple.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/dungeon/preview_purple.png"
    },
    {
      "id": "Dynamic Copper",
      "name": "Dynamic Copper",
      "maskTilesUrl": "/assets/map/tilesets/dynamic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dynamic/copper/border.png",
      "fillUrl": "/assets/map/tilesets/dynamic/copper/fill.png",
      "previewUrl": "/assets/map/tilesets/dynamic/copper/preview.png",
      "health": 50
    },
    {
      "id": "Dynamic Diamond",
      "name": "Dynamic Diamond",
      "maskTilesUrl": "/assets/map/tilesets/dynamic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dynamic/diamond/border.png",
      "fillUrl": "/assets/map/tilesets/dynamic/diamond/fill.png",
      "previewUrl": "/assets/map/tilesets/dynamic/diamond/preview.png",
      "health": 1500
    },
    {
      "id": "Dynamic Dirt",
      "name": "Dynamic Dirt",
      "maskTilesUrl": "/assets/map/tilesets/dynamic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dynamic/dirt/border.png",
      "fillUrl": "/assets/map/tilesets/dynamic/dirt/fill.png",
      "previewUrl": "/assets/map/tilesets/dynamic/dirt/preview.png",
      "health": 2
    },
    {
      "id": "Dynamic Gold",
      "name": "Dynamic Gold",
      "maskTilesUrl": "/assets/map/tilesets/dynamic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dynamic/gold/border.png",
      "fillUrl": "/assets/map/tilesets/dynamic/gold/fill.png",
      "previewUrl": "/assets/map/tilesets/dynamic/gold/preview.png",
      "health": 250
    },
    {
      "id": "Dynamic Ruby",
      "name": "Dynamic Ruby",
      "maskTilesUrl": "/assets/map/tilesets/dynamic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dynamic/ruby/border.png",
      "fillUrl": "/assets/map/tilesets/dynamic/ruby/fill.png",
      "previewUrl": "/assets/map/tilesets/dynamic/ruby/preview.png",
      "health": 500
    },
    {
      "id": "Dynamic Sand",
      "name": "Dynamic Sand",
      "maskTilesUrl": "/assets/map/tilesets/dynamic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dynamic/sand/border.png",
      "fillUrl": "/assets/map/tilesets/dynamic/sand/fill.png",
      "previewUrl": "/assets/map/tilesets/dynamic/sand/preview.png",
      "health": 5
    },
    {
      "id": "Dynamic Silver",
      "name": "Dynamic Silver",
      "maskTilesUrl": "/assets/map/tilesets/dynamic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dynamic/silver/border.png",
      "fillUrl": "/assets/map/tilesets/dynamic/silver/fill.png",
      "previewUrl": "/assets/map/tilesets/dynamic/silver/preview.png",
      "health": 100
    },
    {
      "id": "Dynamic Stone",
      "name": "Dynamic Stone",
      "maskTilesUrl": "/assets/map/tilesets/dynamic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/dynamic/stone/border.png",
      "fillUrl": "/assets/map/tilesets/dynamic/stone/fill.png",
      "previewUrl": "/assets/map/tilesets/dynamic/stone/preview.png",
      "health": 10
    },
    {
      "id": "Exposed Boardwalk",
      "name": "Exposed Boardwalk",
      "maskTilesUrl": "/assets/map/tilesets/exposed_boardwalk/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/exposed_boardwalk/border.png",
      "fillUrl": "/assets/map/tilesets/exposed_boardwalk/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/exposed_boardwalk/preview.png"
    },
    {
      "id": "Frozen Lake",
      "name": "Frozen Lake",
      "maskTilesUrl": "/assets/map/tilesets/snow/32_frozen_lake_mask.png",
      "borderTilesUrl": "/assets/map/tilesets/snow/32_frozen_lake_border.png",
      "fillUrl": "/assets/map/tilesets/snow/32_frozen_lake_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/snow/32_frozen_lake_preview.png"
    },
    {
      "id": "Grass",
      "name": "Grass",
      "maskTilesUrl": "/assets/map/tilesets/grass/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/grass/10_grass_border.png",
      "fillUrl": "/assets/map/tilesets/grass/10_grass_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/grass/10_grass_preview.png"
    },
    {
      "id": "Gym Floor",
      "name": "Gym Floor",
      "maskTilesUrl": "/assets/map/tilesets/gym/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/gym/border.png",
      "fillUrl": "/assets/map/tilesets/gym/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/gym/preview.png"
    },
    {
      "id": "Sci-Fi Lab Floor Blue",
      "name": "Lab Floor (Blue)",
      "maskTilesUrl": "/assets/map/tilesets/scifi_lab_floor/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/scifi_lab_floor/border_blue.png",
      "fillUrl": "/assets/map/tilesets/scifi_lab_floor/fill_blue.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/scifi_lab_floor/preview_blue.png"
    },
    {
      "id": "Sci-Fi Lab Floor Green",
      "name": "Lab Floor (Green)",
      "maskTilesUrl": "/assets/map/tilesets/scifi_lab_floor/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/scifi_lab_floor/border_green.png",
      "fillUrl": "/assets/map/tilesets/scifi_lab_floor/fill_green.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/scifi_lab_floor/preview_green.png"
    },
    {
      "id": "Sci-Fi Lab Floor Red",
      "name": "Lab Floor (Magenta)",
      "maskTilesUrl": "/assets/map/tilesets/scifi_lab_floor/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/scifi_lab_floor/border_red.png",
      "fillUrl": "/assets/map/tilesets/scifi_lab_floor/fill_red.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/scifi_lab_floor/preview_red.png"
    },
    {
      "id": "Sci-Fi Lab Floor White",
      "name": "Lab Floor (White)",
      "maskTilesUrl": "/assets/map/tilesets/scifi_lab_floor/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/scifi_lab_floor/border_white.png",
      "fillUrl": "/assets/map/tilesets/scifi_lab_floor/fill_white.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/scifi_lab_floor/preview_white.png"
    },
    {
      "id": "Light Scraps",
      "name": "Light Scraps",
      "maskTilesUrl": "/assets/map/tilesets/scraps/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/scraps/light_border.png",
      "fillUrl": "/assets/map/tilesets/scraps/light_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/scraps/light_preview.png"
    },
    {
      "id": "Marble Stone Dark",
      "name": "Marble Stone (Dark)",
      "maskTilesUrl": "/assets/map/tilesets/marble/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/marble/08_marble_dark_border.png",
      "fillUrl": "/assets/map/tilesets/marble/08_marble_dark_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/marble/08_marble_dark_preview.png"
    },
    {
      "id": "Marble Stone",
      "name": "Marble Stone (Light)",
      "maskTilesUrl": "/assets/map/tilesets/marble/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/marble/07_marble_border.png",
      "fillUrl": "/assets/map/tilesets/marble/07_marble_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/marble/07_marble_preview.png"
    },
    {
      "id": "Metallic Dark",
      "name": "Metallic (Dark)",
      "maskTilesUrl": "/assets/map/tilesets/metallic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/metallic/border_dark.png",
      "fillUrl": "/assets/map/tilesets/metallic/fill_dark.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/metallic/preview_dark.png"
    },
    {
      "id": "Metallic Light",
      "name": "Metallic (Light)",
      "maskTilesUrl": "/assets/map/tilesets/metallic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/metallic/border_light.png",
      "fillUrl": "/assets/map/tilesets/metallic/fill_light.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/metallic/preview_light.png"
    },
    {
      "id": "Plastic Blue",
      "name": "Plastic (Blue)",
      "maskTilesUrl": "/assets/map/tilesets/plastic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/plastic/blue_border.png",
      "fillUrl": "/assets/map/tilesets/plastic/blue_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/plastic/blue_preview.png"
    },
    {
      "id": "Plastic Green",
      "name": "Plastic (Green)",
      "maskTilesUrl": "/assets/map/tilesets/plastic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/plastic/green_border.png",
      "fillUrl": "/assets/map/tilesets/plastic/green_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/plastic/green_preview.png"
    },
    {
      "id": "Plastic Purple",
      "name": "Plastic (Purple)",
      "maskTilesUrl": "/assets/map/tilesets/plastic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/plastic/purple_border.png",
      "fillUrl": "/assets/map/tilesets/plastic/purple_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/plastic/purple_preview.png"
    },
    {
      "id": "Plastic Red",
      "name": "Plastic (Red)",
      "maskTilesUrl": "/assets/map/tilesets/plastic/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/plastic/red_border.png",
      "fillUrl": "/assets/map/tilesets/plastic/red_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/plastic/red_preview.png"
    },
    {
      "id": "Purple Grass",
      "name": "Purple Grass",
      "maskTilesUrl": "/assets/map/tilesets/grass/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/grass/14_grass_purple_border.png",
      "fillUrl": "/assets/map/tilesets/grass/14_grass_purple_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/grass/14_grass_purple_preview.png"
    },
    {
      "id": "Purple Sand",
      "name": "Purple Sand",
      "maskTilesUrl": "/assets/map/tilesets/purple_sand/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/purple_sand/border.png",
      "fillUrl": "/assets/map/tilesets/purple_sand/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/purple_sand/preview.png"
    },
    {
      "id": "Sand",
      "name": "Sand",
      "maskTilesUrl": "/assets/map/tilesets/sand/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/sand/border.png",
      "fillUrl": "/assets/map/tilesets/sand/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/sand/preview.png"
    },
    {
      "id": "Snow",
      "name": "Snow",
      "maskTilesUrl": "/assets/map/tilesets/snow/30_snow_mask.png",
      "borderTilesUrl": "/assets/map/tilesets/snow/30_snow_border.png",
      "fillUrl": "/assets/map/tilesets/snow/30_snow_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/snow/30_snow_preview.png"
    },
    {
      "id": "Snowy Grass",
      "name": "Snowy Grass",
      "maskTilesUrl": "/assets/map/tilesets/snow/31_snowy_grass_mask.png",
      "borderTilesUrl": "/assets/map/tilesets/snow/31_snowy_grass_border.png",
      "fillUrl": "/assets/map/tilesets/snow/31_snowy_grass_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/snow/31_snowy_grass_preview.png"
    },
    {
      "id": "Space",
      "name": "Space",
      "maskTilesUrl": "/assets/map/tilesets/space/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/space/border.png",
      "fillUrl": "/assets/map/tilesets/space/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/space/preview.png"
    },
    {
      "id": "Space (Moving)",
      "name": "Space (Moving)",
      "maskTilesUrl": "/assets/map/tilesets/space/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/space/border.png",
      "fillUrl": "/assets/map/tilesets/space/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/space/preview.png"
    },
    {
      "id": "Space Rock",
      "name": "Space Rock",
      "maskTilesUrl": "/assets/map/tilesets/space_rock/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/space_rock/border.png",
      "fillUrl": "/assets/map/tilesets/space_rock/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/space_rock/preview.png"
    },
    {
      "id": "Spaceship Catwalk B",
      "name": "Spaceship Catwalk (Grills)",
      "maskTilesUrl": "/assets/map/tilesets/spaceship_catwalk/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/spaceship_catwalk/border.png",
      "fillUrl": "/assets/map/tilesets/spaceship_catwalk/fill_b.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/spaceship_catwalk/preview_b.png"
    },
    {
      "id": "Spaceship Catwalk A",
      "name": "Spaceship Catwalk (Lined)",
      "maskTilesUrl": "/assets/map/tilesets/spaceship_catwalk/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/spaceship_catwalk/border.png",
      "fillUrl": "/assets/map/tilesets/spaceship_catwalk/fill_a.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/spaceship_catwalk/preview_a.png"
    },
    {
      "id": "Spaceship Corridor Gray",
      "name": "Spaceship Corridor",
      "maskTilesUrl": "/assets/map/tilesets/spaceship_corridor/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/spaceship_corridor/border.png",
      "fillUrl": "/assets/map/tilesets/spaceship_corridor/fill_gray.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/spaceship_corridor/preview_gray.png"
    },
    {
      "id": "Spaceship Corridor White",
      "name": "Spaceship Corridor (White)",
      "maskTilesUrl": "/assets/map/tilesets/spaceship_corridor/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/spaceship_corridor/border.png",
      "fillUrl": "/assets/map/tilesets/spaceship_corridor/fill_white.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/spaceship_corridor/preview_white.png"
    },
    {
      "id": "Spaceship Wall",
      "name": "Spaceship Interior",
      "maskTilesUrl": "/assets/map/tilesets/spaceship_wall/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/spaceship_wall/border.png",
      "fillUrl": "/assets/map/tilesets/spaceship_wall/fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/spaceship_wall/preview.png"
    },
    {
      "id": "Speckled Gray",
      "name": "Speckled Gray",
      "maskTilesUrl": "/assets/map/tilesets/speckled_gray/28_speckled_gray_mask.png",
      "borderTilesUrl": "/assets/map/tilesets/speckled_gray/28_speckled_gray_border.png",
      "fillUrl": "/assets/map/tilesets/speckled_gray/28_speckled_gray_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/speckled_gray/28_speckled_gray_preview.png"
    },
    {
      "id": "Stone Brown",
      "name": "Stone (Brown)",
      "maskTilesUrl": "/assets/map/tilesets/stone/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/stone/brown_border.png",
      "fillUrl": "/assets/map/tilesets/stone/brown_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/stone/brown_preview.png"
    },
    {
      "id": "Stone Dark",
      "name": "Stone (Dark)",
      "maskTilesUrl": "/assets/map/tilesets/stone/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/stone/dark_border.png",
      "fillUrl": "/assets/map/tilesets/stone/dark_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/stone/dark_preview.png"
    },
    {
      "id": "Stone Light",
      "name": "Stone (Light)",
      "maskTilesUrl": "/assets/map/tilesets/stone/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/stone/light_border.png",
      "fillUrl": "/assets/map/tilesets/stone/light_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/stone/light_preview.png"
    },
    {
      "id": "Stone Pavement Dry Grass",
      "name": "Stone Pavement (Dry Grass)",
      "maskTilesUrl": "/assets/map/tilesets/stone_pavement/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/stone_pavement/border.png",
      "fillUrl": "/assets/map/tilesets/stone_pavement/fill_dry_grass.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/stone_pavement/preview_dry_grass.png"
    },
    {
      "id": "Stone Pavement Grass",
      "name": "Stone Pavement (Grass)",
      "maskTilesUrl": "/assets/map/tilesets/stone_pavement/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/stone_pavement/border.png",
      "fillUrl": "/assets/map/tilesets/stone_pavement/fill_grass.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/stone_pavement/preview_grass.png"
    },
    {
      "id": "Stone Pavement Purple Grass",
      "name": "Stone Pavement (Purple Grass)",
      "maskTilesUrl": "/assets/map/tilesets/stone_pavement/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/stone_pavement/border.png",
      "fillUrl": "/assets/map/tilesets/stone_pavement/fill_purple_grass.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/stone_pavement/preview_purple_grass.png"
    },
    {
      "id": "Water",
      "name": "Water",
      "maskTilesUrl": "/assets/map/tilesets/water/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/water/01_water_border.png",
      "fillUrl": "/assets/map/tilesets/water/01_water_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/water/01_water_preview.png"
    },
    {
      "id": "Water Dark",
      "name": "Water (Dark Blue)",
      "maskTilesUrl": "/assets/map/tilesets/water/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/water/02_water_dark_border.png",
      "fillUrl": "/assets/map/tilesets/water/02_water_dark_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/water/02_water_dark_preview.png"
    },
    {
      "id": "Water Space",
      "name": "Water (Gray)",
      "maskTilesUrl": "/assets/map/tilesets/water/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/water/04_water_space_border.png",
      "fillUrl": "/assets/map/tilesets/water/04_water_space_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/water/04_water_space_preview.png"
    },
    {
      "id": "Water Berry",
      "name": "Water (Pink)",
      "maskTilesUrl": "/assets/map/tilesets/water/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/water/06_water_berry_border.png",
      "fillUrl": "/assets/map/tilesets/water/06_water_berry_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/water/06_water_berry_preview.png"
    },
    {
      "id": "Water Purple",
      "name": "Water (Purple)",
      "maskTilesUrl": "/assets/map/tilesets/water/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/water/03_water_purple_border.png",
      "fillUrl": "/assets/map/tilesets/water/03_water_purple_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/water/03_water_purple_preview.png"
    },
    {
      "id": "Water Space Milky",
      "name": "Water (White)",
      "maskTilesUrl": "/assets/map/tilesets/water/mask.png",
      "borderTilesUrl": "/assets/map/tilesets/water/05_water_space_milky_border.png",
      "fillUrl": "/assets/map/tilesets/water/05_water_space_milky_fill.png",
      "blockedMapStyles": ["platformer"],
      "previewUrl": "/assets/map/tilesets/water/05_water_space_milky_preview.png"
    }
  ],
  "propsOptions": [
    {
      "id": "3D Printer",
      "name": "3D Printer",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/science_lab/3D_printer.png",
      "rectColliders": [{ "x": 0, "y": -7, "w": 67, "h": 30, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 2, "r1": 46, "r2": 20 }]
    },
    {
      "id": "science_lab/3D_printer_infected",
      "name": "3D Printer (Infected)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/science_lab/3D_printer_infected.png",
      "rectColliders": [{ "x": 0, "y": -7, "w": 67, "h": 30, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 2, "r1": 46, "r2": 20 }]
    },
    {
      "id": "plants/alien/alien_plant_3",
      "name": "Alien Plant",
      "scaleMultip": 0.2,
      "originX": 0.52,
      "originY": 0.87,
      "imageUrl": "props/plants/alien/alien_plant_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -1, "y": -3, "r1": 18, "r2": 10 }]
    },
    {
      "id": "plants/alien/alien_plant_1",
      "name": "Alien Plant",
      "scaleMultip": 0.2,
      "originX": 0.52,
      "originY": 0.98,
      "imageUrl": "props/plants/alien/alien_plant_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -1, "y": -3, "r1": 21, "r2": 11 }]
    },
    {
      "id": "plants/alien/alien_plant_2",
      "name": "Alien Plant",
      "scaleMultip": 0.2,
      "originX": 0.52,
      "originY": 0.98,
      "imageUrl": "props/plants/alien/alien_plant_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -1, "y": -3, "r1": 21, "r2": 11 }]
    },
    {
      "id": "medieval/blacksmith/anvil",
      "name": "Anvil",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.81,
      "imageUrl": "props/medieval/blacksmith/anvil.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 11, "y": -9, "r1": 28, "r2": 20, "angle": 0 }
      ],
      "shadows": [{ "x": 10, "y": 1, "r1": 34, "r2": 17 }]
    },
    {
      "id": "Arcade Machine Off",
      "name": "Arcade Machine (Off)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/arcade_machine/arcade_machine_off.png",
      "rectColliders": [{ "x": 1, "y": -105, "w": 136, "h": 225, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 8, "r1": 90, "r2": 30 }]
    },
    {
      "id": "Arcade Machine On",
      "name": "Arcade Machine (On)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/arcade_machine/arcade_machine_on.png",
      "rectColliders": [{ "x": 1, "y": -105, "w": 136, "h": 225, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 8, "r1": 90, "r2": 30 }]
    },
    {
      "id": "flags/blastball/flag_1_blue",
      "name": "Arena Flag (Blue)",
      "scaleMultip": 0.15,
      "originX": 0.2,
      "originY": 0.93,
      "imageUrl": "props/flags/blastball/flag_1_blue.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -1, "y": -2, "r1": 19, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": -1, "y": 4, "r1": 32, "r2": 18 }]
    },
    {
      "id": "flags/blastball/flag_2_blue",
      "name": "Arena Flag (Blue)",
      "scaleMultip": 0.15,
      "originX": 0.2,
      "originY": 0.93,
      "imageUrl": "props/flags/blastball/flag_2_blue.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -3, "r1": 18, "r2": 16, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 4, "r1": 32, "r2": 18 }]
    },
    {
      "id": "flags/blastball/flag_1_purple",
      "name": "Arena Flag (Purple)",
      "scaleMultip": 0.15,
      "originX": 0.2,
      "originY": 0.93,
      "imageUrl": "props/flags/blastball/flag_1_purple.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -1, "y": -2, "r1": 19, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": -1, "y": 4, "r1": 32, "r2": 18 }]
    },
    {
      "id": "flags/blastball/flag_2_purple",
      "name": "Arena Flag (Purple)",
      "scaleMultip": 0.15,
      "originX": 0.2,
      "originY": 0.93,
      "imageUrl": "props/flags/blastball/flag_2_purple.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -3, "r1": 18, "r2": 16, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 4, "r1": 32, "r2": 18 }]
    },
    {
      "id": "flags/blastball/flag_1_red",
      "name": "Arena Flag (Red)",
      "scaleMultip": 0.15,
      "originX": 0.2,
      "originY": 0.93,
      "imageUrl": "props/flags/blastball/flag_1_red.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -1, "y": -2, "r1": 19, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": -1, "y": 4, "r1": 32, "r2": 18 }]
    },
    {
      "id": "flags/blastball/flag_2_red",
      "name": "Arena Flag (Red)",
      "scaleMultip": 0.15,
      "originX": 0.2,
      "originY": 0.93,
      "imageUrl": "props/flags/blastball/flag_2_red.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -3, "r1": 18, "r2": 16, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 4, "r1": 32, "r2": 18 }]
    },
    {
      "id": "medieval/armor_display",
      "name": "Armor Display",
      "scaleMultip": 0.14,
      "originX": 0.53,
      "originY": 0.86,
      "imageUrl": "props/medieval/armor_display.png",
      "rectColliders": [{ "x": 0, "y": 11, "w": 93, "h": 24, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 13, "r1": 65, "r2": 25 }]
    },
    {
      "id": "medieval/armor_display_empty",
      "name": "Armor Display (Empty)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/armor_display_empty.png",
      "rectColliders": [{ "x": 0, "y": 11, "w": 93, "h": 24, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 13, "r1": 65, "r2": 25 }]
    },
    {
      "id": "Arrow (Thin)",
      "name": "Arrow (Thin)",
      "scaleMultip": 0.3,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/arrows/arrow_thin.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "mining/adventure_backpack_green",
      "name": "Backpack (Green)",
      "scaleMultip": 0.11,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/adventure_backpack_green.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -15, "r1": 29, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": -3, "y": -15, "r1": 38, "r2": 23 }]
    },
    {
      "id": "mining/adventure_backpack_red",
      "name": "Backpack (Red)",
      "scaleMultip": 0.11,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/adventure_backpack_red.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        {
          "x": 0,
          "y": -20.624999999999996,
          "r1": 39.87499999999999,
          "r2": 20.624999999999996,
          "angle": 0
        }
      ],
      "shadows": [{ "x": -3, "y": -15, "r1": 38, "r2": 23 }]
    },
    {
      "id": "Barn Closed",
      "name": "Barn (Closed)",
      "scaleMultip": 0.6,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/farm/barn_closed.png",
      "rectColliders": [
        { "x": 0, "y": -150, "w": 1040, "h": 280, "angle": 0 },
        { "x": -495, "y": -595, "w": 100, "h": 700, "angle": 0 },
        { "x": 495, "y": -595, "w": 100, "h": 700, "angle": 0 },
        { "x": -259, "y": -1040, "w": 65, "h": 600, "angle": 66 },
        { "x": 259, "y": -1040, "w": 65, "h": 600, "angle": 294 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -145, "r1": 643, "r2": 293 }]
    },
    {
      "id": "medieval/barrel",
      "name": "Barrel",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.69,
      "imageUrl": "props/medieval/barrel.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 4, "r1": 52, "r2": 37, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 22, "r1": 62, "r2": 31 }]
    },
    {
      "id": "medieval/barrel2",
      "name": "Barrel",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.69,
      "imageUrl": "props/medieval/barrel2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 4, "r1": 52, "r2": 37, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 22, "r1": 62, "r2": 31 }]
    },
    {
      "id": "medieval/empty_barrel2",
      "name": "Barrel (Empty)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.69,
      "imageUrl": "props/medieval/empty_barrel2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 4, "r1": 52, "r2": 37, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 22, "r1": 62, "r2": 31 }]
    },
    {
      "id": "medieval/empty_barrel",
      "name": "Barrel (Empty)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.69,
      "imageUrl": "props/medieval/empty_barrel.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 4, "r1": 52, "r2": 37, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 22, "r1": 62, "r2": 31 }]
    },
    {
      "id": "medieval/water_barrel",
      "name": "Barrel (Water)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.69,
      "imageUrl": "props/medieval/water_barrel.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 4, "r1": 52, "r2": 37, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 22, "r1": 62, "r2": 31 }]
    },
    {
      "id": "medieval/water_barrel2",
      "name": "Barrel (Water)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.69,
      "imageUrl": "props/medieval/water_barrel2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 4, "r1": 52, "r2": 37, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 22, "r1": 62, "r2": 31 }]
    },
    {
      "id": "Barrier Horizontal",
      "name": "Barrier (Horizontal)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.6,
      "imageUrl": "props/barriers/barrier_horizontal.png",
      "rectColliders": [{ "x": 0, "y": 5, "w": 190, "h": 80, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 12, "r1": 111, "r2": 65 }]
    },
    {
      "id": "Barrier Vertical",
      "name": "Barrier (Vertical)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.4,
      "imageUrl": "props/barriers/barrier_vertical.png",
      "rectColliders": [{ "x": 0, "y": 50, "w": 90, "h": 155, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 63, "r1": 65, "r2": 89 }]
    },
    {
      "id": "medieval/kitchen/bowl_apples",
      "name": "Basket Of Apples",
      "scaleMultip": 0.13,
      "originX": 0.5,
      "originY": 0.86,
      "imageUrl": "props/medieval/kitchen/bowl_apples.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -2, "r1": 22, "r2": 8, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -1, "r1": 35, "r2": 16 }]
    },
    {
      "id": "Basketball",
      "name": "Basketball",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/basketball/basketball.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -30, "r": 30 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -1, "r1": 38, "r2": 9 }]
    },
    {
      "id": "Basketball Hoop",
      "name": "Basketball Hoop",
      "scaleMultip": 0.36,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/basketball/basketball_hoop.png",
      "rectColliders": [{ "x": -50, "y": -14, "w": 132, "h": 68, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -52, "y": -13, "r1": 93, "r2": 48 }]
    },
    {
      "id": "BikeRack",
      "name": "Bicycle Rack",
      "scaleMultip": 0.6,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/park/bike_rack.png",
      "rectColliders": [{ "x": 0, "y": -25, "w": 225, "h": 50, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -2, "r1": 125, "r2": 19 }]
    },
    {
      "id": "Briefcase-black",
      "name": "Black Briefcase",
      "scaleMultip": 0.11,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/briefcases/black_briefcase.png",
      "rectColliders": [{ "x": 0, "y": -3, "w": 61, "h": 25, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 9, "r1": 38, "r2": 10 }]
    },
    {
      "id": "Blackboard 4x3",
      "name": "Blackboard (Tall)",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/blackboards/blackboard_4x3.png",
      "rectColliders": [{ "x": 0, "y": -90, "w": 338, "h": 205, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Blackboard 16x9",
      "name": "Blackboard (Wide)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/blackboards/blackboard_16x9.png",
      "rectColliders": [{ "x": 0, "y": -70, "w": 354, "h": 160, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Blackboard Leg",
      "name": "Blackboard Leg",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/blackboards/blackboard_legs.png",
      "rectColliders": [{ "x": 2, "y": -35, "w": 15, "h": 90, "angle": -21 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 15, "y": 3, "r1": 21, "r2": 10 }]
    },
    {
      "id": "Chemical blue",
      "name": "Blue Chemical ",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/science_lab/chemical_blue.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 20, "r2": 6 }]
    },
    {
      "id": "science_lab/chemical_blue_infected",
      "name": "Blue Chemical (Infected)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/science_lab/chemical_blue_infected.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 20, "r2": 6 }]
    },
    {
      "id": "corner_sofa/corner_sofa_blue_back",
      "name": "Blue Corner Sofa (Back)",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/corner_sofa/corner_sofa_blue_back.png",
      "rectColliders": [
        { "x": -45, "y": 38, "w": 115, "h": 105, "angle": 0 },
        { "x": 37, "y": -42, "w": 130, "h": 135, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 20, "y": 28, "r1": 83, "r2": 68, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "corner_sofa/corner_sofa_blue_front",
      "name": "Blue Corner Sofa (Front)",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/corner_sofa/corner_sofa_blue_front.png",
      "rectColliders": [
        { "x": -15, "y": -15, "w": 175, "h": 70, "angle": 0 },
        { "x": 25, "y": 60, "w": 90, "h": 100, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 65, "y": 30, "r1": 40, "r2": 79, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "Boat No Effects",
      "name": "Boat",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.61,
      "imageUrl": "props/boats/boat_noeffects.png",
      "rectColliders": [
        { "x": 28, "y": 16, "w": 267, "h": 135, "angle": 0 },
        { "x": -121, "y": -21, "w": 119, "h": 66, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 166, "y": -12, "r1": 36, "r2": 28, "angle": 0 },
        { "x": -134, "y": 23, "r1": 30, "r2": 72, "angle": -48 }
      ],
      "shadows": [{ "x": 9, "y": 54, "r1": 197, "r2": 56 }]
    },
    {
      "id": "Boat 1",
      "name": "Boat 1",
      "scaleMultip": 0.5,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/boats/boat_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Boat 2",
      "name": "Boat 2",
      "scaleMultip": 0.5,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/boats/boat_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Boat Dark 1",
      "name": "Boat Dark 1",
      "scaleMultip": 0.5,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/boats/boat_dark_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Boat Dark 2",
      "name": "Boat Dark 2",
      "scaleMultip": 0.5,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/boats/boat_dark_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Boat Purple 1",
      "name": "Boat Purple 1",
      "scaleMultip": 0.5,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/boats/boat_purple_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Boat Purple 2",
      "name": "Boat Purple 2",
      "scaleMultip": 0.5,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/boats/boat_purple_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Boat Space 1",
      "name": "Boat Space 1",
      "scaleMultip": 0.5,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/boats/boat_space_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Boat Space 2",
      "name": "Boat Space 2",
      "scaleMultip": 0.5,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/boats/boat_space_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Boat Space Milky 1",
      "name": "Boat Space Milky 1",
      "scaleMultip": 0.5,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/boats/boat_space_milky_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Boat Space Milky 2",
      "name": "Boat Space Milky 2",
      "scaleMultip": 0.5,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/boats/boat_space_milky_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Bookshelf 2",
      "name": "Bookshelf",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/bookshelf_2.png",
      "rectColliders": [{ "x": 0, "y": -102, "w": 160, "h": 230, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 101, "r2": 38 }]
    },
    {
      "id": "Bookshelf 1",
      "name": "Bookshelf",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/bookshelf_1.png",
      "rectColliders": [{ "x": 0, "y": -102, "w": 160, "h": 230, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 101, "r2": 38 }]
    },
    {
      "id": "office/bookshelf_infected_1",
      "name": "Bookshelf (Infected)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/bookshelf_infected_1.png",
      "rectColliders": [{ "x": 0, "y": -102, "w": 160, "h": 230, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 101, "r2": 38 }]
    },
    {
      "id": "office/bookshelf_infected_2",
      "name": "Bookshelf (Infected)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/bookshelf_infected_2.png",
      "rectColliders": [{ "x": 0, "y": -102, "w": 160, "h": 230, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 101, "r2": 38 }]
    },
    {
      "id": "mining/bottle",
      "name": "Bottle",
      "scaleMultip": 0.13,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.97,
      "imageUrl": "props/mining/bottle.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -11, "r1": 14, "r2": 11, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -7, "r1": 17, "r2": 11 }]
    },
    {
      "id": "medieval/kitchen/bread",
      "name": "Bread",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.71,
      "imageUrl": "props/medieval/kitchen/bread.png",
      "rectColliders": [{ "x": 2, "y": 0, "w": 47, "h": 6, "angle": -11 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -1, "r1": 31, "r2": 13 }]
    },
    {
      "id": "science_lab/vial_broken_1",
      "name": "Broken Glass",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/science_lab/vial_broken_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "science_lab/vial_broken_5",
      "name": "Broken Glass",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/science_lab/vial_broken_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -1, "r1": 20, "r2": 6 }]
    },
    {
      "id": "science_lab/vial_broken_3",
      "name": "Broken Glass",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/science_lab/vial_broken_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -4, "r1": 21, "r2": 7 }]
    },
    {
      "id": "science_lab/vial_broken_2",
      "name": "Broken Glass",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/science_lab/vial_broken_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -3, "r1": 21, "r2": 7 }]
    },
    {
      "id": "science_lab/vial_broken_4",
      "name": "Broken Glass",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/science_lab/vial_broken_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Bucket 2",
      "name": "Bucket",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/buckets/bucket_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -14, "r1": 25, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -25, "r1": 28, "r2": 12 }]
    },
    {
      "id": "Bucket 1",
      "name": "Bucket",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/buckets/bucket_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -4, "y": -15, "r1": 25, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": -5, "y": -5, "r1": 30, "r2": 12 }]
    },
    {
      "id": "Bucket 3",
      "name": "Bucket",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/buckets/bucket_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -15, "r1": 25, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -11, "r1": 29, "r2": 16 }]
    },
    {
      "id": "mining/bulletin_board",
      "name": "Bulletin Board",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/bulletin_board.png",
      "rectColliders": [
        { "x": -75, "y": -57, "w": 19, "h": 115, "angle": 0 },
        { "x": 68, "y": -55, "w": 20, "h": 110, "angle": 0 },
        { "x": -3, "y": -85, "w": 161, "h": 100, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 0, "r1": 100, "r2": 30 }]
    },
    {
      "id": "stadium/camera_1",
      "name": "Camera",
      "scaleMultip": 0.15,
      "originX": 0.54,
      "originY": 0.94,
      "imageUrl": "props/stadium/camera_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 2, "y": -28, "r1": 41, "r2": 35, "angle": 0 }
      ],
      "shadows": [{ "x": 2, "y": -29, "r1": 42, "r2": 37 }]
    },
    {
      "id": "stadium/camera_2",
      "name": "Camera",
      "scaleMultip": 0.15,
      "originX": 0.54,
      "originY": 0.94,
      "imageUrl": "props/stadium/camera_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -2, "y": -28, "r1": 41, "r2": 35, "angle": 0 }
      ],
      "shadows": [{ "x": -2, "y": -29, "r1": 42, "r2": 37 }]
    },
    {
      "id": "mining/cooking_pan",
      "name": "Campfire Pan",
      "scaleMultip": 0.17,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/cooking_pan.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/kitchen/candle",
      "name": "Candle",
      "scaleMultip": 0.11,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/kitchen/candle.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 3, "r1": 9, "r2": 6, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 4, "r1": 12, "r2": 9 }]
    },
    {
      "id": "medieval/kitchen/candle_2",
      "name": "Candle",
      "scaleMultip": 0.11,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/kitchen/candle_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 2, "r1": 9, "r2": 6, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 3, "r1": 11, "r2": 7 }]
    },
    {
      "id": "Box Paperboard",
      "name": "Cardboard Box",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/boxes/box_paperboard.png",
      "rectColliders": [{ "x": 0, "y": -49, "w": 138, "h": 100, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -2, "r1": 85, "r2": 25 }]
    },
    {
      "id": "Cash Stack",
      "name": "Cash Stack ",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/stacks/stack_cash.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "dishes/plate_1",
      "name": "Ceramic Plate",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/plate_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "dishes/plate_4",
      "name": "Ceramic Plate (Broccoli)",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/plate_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "dishes/plate_2",
      "name": "Ceramic Plate (Infested)",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/plate_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "dishes/plate_3",
      "name": "Ceramic Plate (Infested)",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/plate_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "dishes/plate_pile_1",
      "name": "Ceramic Plate Pile (Infested)",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/plate_pile_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -19, "r1": 25, "r2": 20, "angle": 0 }
      ],
      "shadows": [{ "x": -1, "y": -11, "r1": 36, "r2": 17 }]
    },
    {
      "id": "dishes/plate_pile_3",
      "name": "Ceramic Plate Pile (Infested)",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/plate_pile_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -19, "r1": 25, "r2": 20, "angle": 0 }
      ],
      "shadows": [{ "x": -1, "y": -11, "r1": 36, "r2": 16 }]
    },
    {
      "id": "dishes/plate_pile_2",
      "name": "Ceramic Plate Pile (Infested)",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/plate_pile_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -19, "r1": 25, "r2": 20, "angle": 0 }
      ],
      "shadows": [{ "x": -1, "y": -10, "r1": 32, "r2": 16 }]
    },
    {
      "id": "medieval/kitchen/cheese_plate",
      "name": "Cheese Plate",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.28,
      "imageUrl": "props/medieval/kitchen/cheese_plate.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Chemical Tube",
      "name": "Chemical Tube",
      "scaleMultip": 0.19,
      "originX": 0.5,
      "originY": 0.83,
      "imageUrl": "props/science_lab/chemical_tube.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 6, "r1": 34, "r2": 9 }]
    },
    {
      "id": "science_lab/chemical_tube_infected",
      "name": "Chemical Tube (Infected)",
      "scaleMultip": 0.19,
      "originX": 0.5,
      "originY": 0.83,
      "imageUrl": "props/science_lab/chemical_tube_infected.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 6, "r1": 34, "r2": 9 }]
    },
    {
      "id": "medieval/shields/circle_3",
      "name": "Circular Shield",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/shields/circle_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -1, "r1": 12, "r2": 6, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -3, "r1": 36, "r2": 15 }]
    },
    {
      "id": "medieval/shields/circle_6",
      "name": "Circular Shield",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/shields/circle_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -1, "r1": 12, "r2": 6, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -3, "r1": 36, "r2": 15 }]
    },
    {
      "id": "medieval/shields/circle_5",
      "name": "Circular Shield",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/shields/circle_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -1, "r1": 12, "r2": 6, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -3, "r1": 36, "r2": 15 }]
    },
    {
      "id": "medieval/shields/circle_7",
      "name": "Circular Shield",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/shields/circle_7.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -1, "r1": 12, "r2": 6, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -3, "r1": 36, "r2": 15 }]
    },
    {
      "id": "medieval/shields/circle_1",
      "name": "Circular Shield",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/shields/circle_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -1, "r1": 12, "r2": 6, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -3, "r1": 36, "r2": 15 }]
    },
    {
      "id": "medieval/shields/circle_2",
      "name": "Circular Shield",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/shields/circle_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -1, "r1": 12, "r2": 6, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -3, "r1": 36, "r2": 15 }]
    },
    {
      "id": "medieval/shields/circle_4",
      "name": "Circular Shield",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/shields/circle_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -1, "r1": 12, "r2": 6, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -3, "r1": 36, "r2": 15 }]
    },
    {
      "id": "medieval/tent/blue",
      "name": "Circus Tent (Blue)",
      "scaleMultip": 0.31,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/medieval/tent/blue.png",
      "rectColliders": [{ "x": 0, "y": 107, "w": 410, "h": 219, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 199, "r1": 263, "r2": 77 }]
    },
    {
      "id": "medieval/tent/red",
      "name": "Circus Tent (Red)",
      "scaleMultip": 0.31,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/medieval/tent/red.png",
      "rectColliders": [{ "x": 0, "y": 107, "w": 410, "h": 219, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 199, "r1": 263, "r2": 77 }]
    },
    {
      "id": "medieval/blacksmith/coal",
      "name": "Coal",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/blacksmith/coal.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -5, "r1": 32, "r2": 17, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -5, "r1": 44, "r2": 26 }]
    },
    {
      "id": "medieval/codex/codex_3",
      "name": "Codex",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/codex/codex_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/codex/codex_2",
      "name": "Codex",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/codex/codex_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/codex/codex_1",
      "name": "Codex",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/codex/codex_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/codex/codex_4",
      "name": "Codex",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/codex/codex_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/codex/codex_open_2",
      "name": "Codex (Open)",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/codex/codex_open_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/codex/codex_open",
      "name": "Codex (Open)",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/codex/codex_open.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/codex/codex_stack",
      "name": "Codex Stack",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.83,
      "imageUrl": "props/medieval/codex/codex_stack.png",
      "rectColliders": [{ "x": 0, "y": -5, "w": 44, "h": 39, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": -33, "r2": 21 }]
    },
    {
      "id": "Command Table Off",
      "name": "Command Table",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/command_table/command_table_off.png",
      "rectColliders": [{ "x": 0, "y": -40, "w": 210, "h": 80, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -26, "r1": 124, "r2": 54 }]
    },
    {
      "id": "Command Table On",
      "name": "Command Table",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/command_table/command_table_on.png",
      "rectColliders": [{ "x": 0, "y": -40, "w": 210, "h": 80, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -26, "r1": 124, "r2": 54 }]
    },
    {
      "id": "command_table/command_table_infected_1",
      "name": "Command Table (Infected)",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.68,
      "imageUrl": "props/command_table/command_table_infected_1.png",
      "rectColliders": [{ "x": 5, "y": 3, "w": 215, "h": 80, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 17, "r1": 124, "r2": 54 }]
    },
    {
      "id": "command_table/command_table_infected_2",
      "name": "Command Table (Infected)",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.68,
      "imageUrl": "props/command_table/command_table_infected_2.png",
      "rectColliders": [{ "x": 5, "y": 3, "w": 215, "h": 80, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 17, "r1": 124, "r2": 54 }]
    },
    {
      "id": "command_table/command_table_infected_3",
      "name": "Command Table (Infected)",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.68,
      "imageUrl": "props/command_table/command_table_infected_3.png",
      "rectColliders": [{ "x": -10, "y": 3, "w": 215, "h": 80, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -9, "y": 17, "r1": 124, "r2": 49 }]
    },
    {
      "id": "medieval/blacksmith/compressor",
      "name": "Compressor",
      "scaleMultip": 0.23,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/blacksmith/compressor.png",
      "rectColliders": [{ "x": -27, "y": -5, "w": 247, "h": 81, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -30, "y": 17, "r1": 157, "r2": 50 }]
    },
    {
      "id": "devices/infested_computer_b_1",
      "name": "Computer",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.75,
      "imageUrl": "props/devices/infested_computer_b_1.png",
      "rectColliders": [{ "x": 8, "y": -20, "w": 90, "h": 45, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -2, "y": 2, "r1": 60, "r2": 32 }]
    },
    {
      "id": "devices/infested_computer_1",
      "name": "Computer",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.74,
      "imageUrl": "props/devices/infested_computer_1.png",
      "rectColliders": [{ "x": 0, "y": -24, "w": 55, "h": 55, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 10, "r1": 49, "r2": 22 }]
    },
    {
      "id": "stadium/cone_2",
      "name": "Cone",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.91,
      "imageUrl": "props/stadium/cone_2.png",
      "rectColliders": [{ "x": 0, "y": -13, "w": 50, "h": 37, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -13, "r1": 31, "r2": 27 }]
    },
    {
      "id": "stadium/cone_1",
      "name": "Cone",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.91,
      "imageUrl": "props/stadium/cone_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -15, "r1": 32, "r2": 20, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -17, "r1": 32, "r2": 24 }]
    },
    {
      "id": "Coral 9",
      "name": "Coral",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/corals/coral_9.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -10, "r1": 20, "r2": 10, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -3, "r1": 25, "r2": 8 }]
    },
    {
      "id": "Coral 7",
      "name": "Coral",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/corals/coral_7.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -14, "r1": 30, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -3, "r1": 26, "r2": 9 }]
    },
    {
      "id": "Coral 10",
      "name": "Coral",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/corals/coral_10.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -10, "r1": 20, "r2": 10, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -3, "r1": 25, "r2": 8 }]
    },
    {
      "id": "Coral 12",
      "name": "Coral",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/corals/coral_12.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -9, "r1": 20, "r2": 10, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -4, "r1": 27, "r2": 9 }]
    },
    {
      "id": "Coral 5",
      "name": "Coral",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/corals/coral_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -25, "r1": 45, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -1, "r1": 22, "r2": 9 }]
    },
    {
      "id": "Coral 8",
      "name": "Coral",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/corals/coral_8.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -14, "r1": 30, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -3, "r1": 26, "r2": 9 }]
    },
    {
      "id": "Coral 6",
      "name": "Coral",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/corals/coral_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -25, "r1": 45, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -1, "r1": 22, "r2": 9 }]
    },
    {
      "id": "Coral 4",
      "name": "Coral",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/corals/coral_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -24, "r1": 45, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -9, "r1": 46, "r2": 14 }]
    },
    {
      "id": "Coral 2",
      "name": "Coral",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/corals/coral_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -25, "r1": 45, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": -2, "y": -7, "r1": 37, "r2": 12 }]
    },
    {
      "id": "Coral 3",
      "name": "Coral",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/corals/coral_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -24, "r1": 45, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -9, "r1": 46, "r2": 14 }]
    },
    {
      "id": "Coral 1",
      "name": "Coral",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/corals/coral_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -25, "r1": 45, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": -2, "y": -7, "r1": 37, "r2": 12 }]
    },
    {
      "id": "Coral 11",
      "name": "Coral",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/corals/coral_11.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -9, "r1": 20, "r2": 10, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -4, "r1": 27, "r2": 9 }]
    },
    {
      "id": "Corn Stalk",
      "name": "Corn Stalk",
      "scaleMultip": 0.32,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "/props/farm/corn_stalk/stalk.png",
      "rectColliders": [{ "x": 0, "y": -10, "w": 120, "h": 30, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 5, "y": 6, "r1": 97, "r2": 25 }]
    },
    {
      "id": "Corn Stalk Empty",
      "name": "Corn Stalk (Empty)",
      "scaleMultip": 0.32,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "/props/farm/corn_stalk/stalk_empty.png",
      "rectColliders": [{ "x": 0, "y": -10, "w": 120, "h": 30, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 5, "y": 6, "r1": 97, "r2": 25 }]
    },
    {
      "id": "Corn Stalk Empty Single",
      "name": "Corn Stalk (Empty)",
      "scaleMultip": 0.32,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "/props/farm/corn_stalk/stalk_empty_single.png",
      "rectColliders": [{ "x": 0, "y": -5, "w": 30, "h": 25, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 40, "r2": 16 }]
    },
    {
      "id": "medieval/kitchen/cutting_board",
      "name": "Cutting Board",
      "scaleMultip": 0.13,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/kitchen/cutting_board.png",
      "rectColliders": [{ "x": 0, "y": 0, "w": 68, "h": 19, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -3, "r1": 45, "r2": 24 }]
    },
    {
      "id": "medieval/barriers/horizontal/dark_gray",
      "name": "Dark Gray Stone Barrier",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/medieval/barriers/horizontal/dark_gray.png",
      "rectColliders": [{ "x": 0, "y": 19, "w": 160, "h": 61, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 27, "r1": 106, "r2": 43 }]
    },
    {
      "id": "medieval/barriers/vertical_tall/dark_gray",
      "name": "Dark Gray Stone Barrier (Tall Vertical)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "props/medieval/barriers/vertical_tall/dark_gray.png",
      "rectColliders": [{ "x": 0, "y": -157, "w": 73, "h": 370, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 57, "r2": 45 }]
    },
    {
      "id": "medieval/barriers/vertical/dark_gray",
      "name": "Dark Gray Stone Barrier (Vertical)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/medieval/barriers/vertical/dark_gray.png",
      "rectColliders": [{ "x": 0, "y": 41, "w": 74, "h": 98, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 61, "r1": 59, "r2": 50 }]
    },
    {
      "id": "medieval/barriers/horizontal_wide/dark_gray",
      "name": "Dark Gray Stone Barrier (Wide)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.64,
      "imageUrl": "props/medieval/barriers/horizontal_wide/dark_gray.png",
      "rectColliders": [{ "x": 0, "y": 14, "w": 472, "h": 53, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 18, "r1": 274, "r2": 66 }]
    },
    {
      "id": "Pole Dark 3",
      "name": "Dark Wooden Pole",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/pole_dark_3.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -15, "r": 20 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -3, "r1": 23, "r2": 12 }]
    },
    {
      "id": "Pole Dark 2",
      "name": "Dark Wooden Pole",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/pole_dark_2.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -15, "r": 20 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -4, "r1": 23, "r2": 12 }]
    },
    {
      "id": "Pole Dark 1",
      "name": "Dark Wooden Pole",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/pole_dark_1.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -15, "r": 20 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -4, "r1": 23, "r2": 11 }]
    },
    {
      "id": "Sign Dark 8",
      "name": "Dark Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_dark_8.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign Dark 7",
      "name": "Dark Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_dark_7.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign Dark 5",
      "name": "Dark Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_dark_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign Dark 1",
      "name": "Dark Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_dark_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign Dark 9",
      "name": "Dark Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_dark_9.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign Dark 4",
      "name": "Dark Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_dark_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign Dark 6",
      "name": "Dark Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_dark_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign Dark 10",
      "name": "Dark Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_dark_10.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign Dark 2",
      "name": "Dark Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_dark_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign Dark 3",
      "name": "Dark Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_dark_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Desk",
      "name": "Desk",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/office/desk.png",
      "rectColliders": [{ "x": 0, "y": -89, "w": 250, "h": 180, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -41, "r1": 152, "r2": 72 }]
    },
    {
      "id": "patches/oxide_4",
      "name": "Dirt",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/oxide_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/oxide_8",
      "name": "Dirt",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/oxide_8.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/oxide_2",
      "name": "Dirt",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/oxide_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/oxide_6",
      "name": "Dirt",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/oxide_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/oxide_9",
      "name": "Dirt",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/oxide_9.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/oxide_3",
      "name": "Dirt",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/oxide_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/oxide_11",
      "name": "Dirt",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/oxide_11.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/oxide_10",
      "name": "Dirt",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/oxide_10.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/oxide_5",
      "name": "Dirt",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/oxide_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/oxide_7",
      "name": "Dirt",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/oxide_7.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/oxide_1",
      "name": "Dirt",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/oxide_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "mining/dirt_pile_1",
      "name": "Dirt Pile",
      "scaleMultip": 0.25,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/dirt_pile_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -12, "r1": 110, "r2": 10, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -11, "r1": 134, "r2": 25 }]
    },
    {
      "id": "mining/dirt_pile_2",
      "name": "Dirt Pile",
      "scaleMultip": 0.3,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/dirt_pile_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -8, "r1": 102, "r2": 8, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -7, "r1": 113, "r2": 19 }]
    },
    {
      "id": "mining/dirt_pile_4",
      "name": "Dirt Pile",
      "scaleMultip": 0.25,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/dirt_pile_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -8, "r1": 125, "r2": 8, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -6, "r1": 136, "r2": 19 }]
    },
    {
      "id": "mining/dirt_pile_3",
      "name": "Dirt Pile",
      "scaleMultip": 0.25,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/dirt_pile_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -6, "r1": 65, "r2": 5, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -6, "r1": 75, "r2": 13 }]
    },
    {
      "id": "Medium Bush dry",
      "name": "Dry Bush",
      "scaleMultip": 0.26,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/bushes/medium_dry.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -51, "y": -38, "r1": 33, "r2": 30, "angle": 0 },
        { "x": -15, "y": -60, "r1": 35, "r2": 30, "angle": 0 },
        { "x": 30, "y": -53, "r1": 30, "r2": 30, "angle": 0 },
        { "x": 55, "y": -37, "r1": 30, "r2": 23, "angle": 0 },
        { "x": 2, "y": -17, "r1": 20, "r2": 15, "angle": 0 },
        { "x": -33, "y": -30, "r1": 33, "r2": 30, "angle": 0 },
        { "x": 35, "y": -30, "r1": 35, "r2": 30, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -16, "r1": 93, "r2": 29 }]
    },
    {
      "id": "Small Bush dry",
      "name": "Dry Bush (Small)",
      "scaleMultip": 0.26,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/bushes/small_dry.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -15, "r1": 43, "r2": 10, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -14, "r1": 59, "r2": 21 }]
    },
    {
      "id": "Wide Bush dry",
      "name": "Dry Bush (Wide)",
      "scaleMultip": 0.26,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/bushes/wide_dry.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -20, "r1": 110, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -19, "r1": 128, "r2": 32 }]
    },
    {
      "id": "escape/escape_hatch",
      "name": "Escape Hatch",
      "scaleMultip": 0.22,
      "originX": 0.34,
      "originY": 1,
      "imageUrl": "props/escape/escape_hatch.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -49, "r1": 60, "r2": 50, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "plants/manecing_flowerpot/menacing_flowerpot_2",
      "name": "Evil Potted Plant",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "props/plants/manecing_flowerpot/menacing_flowerpot_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -26, "r1": 43, "r2": 35, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 3, "r1": 39, "r2": 17 }]
    },
    {
      "id": "plants/manecing_flowerpot/menacing_flowerpot_1",
      "name": "Evil Potted Plant",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "props/plants/manecing_flowerpot/menacing_flowerpot_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -26, "r1": 43, "r2": 35, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 3, "r1": 39, "r2": 17 }]
    },
    {
      "id": "Filing Cabinets 2",
      "name": "Filing Cabinet",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/filing_cabinets_2.png",
      "rectColliders": [{ "x": 0, "y": -90, "w": 102, "h": 200, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 67, "r2": 39 }]
    },
    {
      "id": "Filing Cabinets 1",
      "name": "Filing Cabinet",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/filing_cabinets_1.png",
      "rectColliders": [{ "x": 0, "y": -90, "w": 102, "h": 200, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 67, "r2": 39 }]
    },
    {
      "id": "medieval/blacksmith/firewood",
      "name": "Firewood",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.73,
      "imageUrl": "props/medieval/blacksmith/firewood.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 0, "r1": 32, "r2": 11, "angle": -2 }],
      "shadows": [{ "x": 0, "y": 5, "r1": 49, "r2": 19 }]
    },
    {
      "id": "Fish Stack",
      "name": "Fish Stack ",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/stacks/stack_fish.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Flower 1",
      "name": "Flower",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/flower_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Flower 2",
      "name": "Flower",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/flower_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Flower 3",
      "name": "Flower",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/flower_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Flower 4",
      "name": "Flower",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/flower_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Flower Pot 7",
      "name": "Flower Pot",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/flower_pot_7.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 1, "y": -29, "r": 31 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 40, "r2": 18 }]
    },
    {
      "id": "Flower Pot 6",
      "name": "Flower Pot",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/flower_pot_6.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 1, "y": -29, "r": 31 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 40, "r2": 18 }]
    },
    {
      "id": "Flower Pot 3",
      "name": "Flower Pot",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/flower_pot_3.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 1, "y": -29, "r": 31 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 40, "r2": 18 }]
    },
    {
      "id": "Flower Pot 8",
      "name": "Flower Pot",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/flower_pot_8.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 1, "y": -29, "r": 31 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 40, "r2": 18 }]
    },
    {
      "id": "Flower Pot 2",
      "name": "Flower Pot",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/flower_pot_2.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 1, "y": -29, "r": 31 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 40, "r2": 18 }]
    },
    {
      "id": "Flower Pot 4",
      "name": "Flower Pot",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/flower_pot_4.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 1, "y": -29, "r": 31 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 40, "r2": 18 }]
    },
    {
      "id": "Flower Pot 5",
      "name": "Flower Pot",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/flower_pot_5.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 1, "y": -29, "r": 31 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 40, "r2": 18 }]
    },
    {
      "id": "Flower Pot 1",
      "name": "Flower Pot",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/flower_pot_1.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 1, "y": -29, "r": 31 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 40, "r2": 18 }]
    },
    {
      "id": "dishes/fork",
      "name": "Fork",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/dishes/fork.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/fruit_box/apple",
      "name": "Fruit Box (Apples)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/fruit_box/apple.png",
      "rectColliders": [{ "x": 0, "y": -3, "w": 79, "h": 35, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 53, "r2": 26 }]
    },
    {
      "id": "medieval/fruit_box/cabbage",
      "name": "Fruit Box (Cabbage)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/fruit_box/cabbage.png",
      "rectColliders": [{ "x": 0, "y": -3, "w": 79, "h": 35, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 53, "r2": 26 }]
    },
    {
      "id": "medieval/fruit_box/corn",
      "name": "Fruit Box (Corn)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/fruit_box/corn.png",
      "rectColliders": [{ "x": 0, "y": -1, "w": 79, "h": 35, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 53, "r2": 26 }]
    },
    {
      "id": "medieval/fruit_box/empty",
      "name": "Fruit Box (Empty)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/fruit_box/empty.png",
      "rectColliders": [{ "x": 0, "y": -3, "w": 79, "h": 35, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 53, "r2": 26 }]
    },
    {
      "id": "medieval/fruit_box/grape",
      "name": "Fruit Box (Grape)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/fruit_box/grape.png",
      "rectColliders": [{ "x": 0, "y": -1, "w": 79, "h": 35, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 53, "r2": 26 }]
    },
    {
      "id": "medieval/fruit_box/lemon",
      "name": "Fruit Box (Lemons)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/fruit_box/lemon.png",
      "rectColliders": [{ "x": 0, "y": -3, "w": 79, "h": 35, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 53, "r2": 26 }]
    },
    {
      "id": "medieval/fruit_box/orange",
      "name": "Fruit Box (Oranges)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/fruit_box/orange.png",
      "rectColliders": [{ "x": 0, "y": -3, "w": 79, "h": 35, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 53, "r2": 26 }]
    },
    {
      "id": "medieval/fruit_box/peach",
      "name": "Fruit Box (Peaches)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/fruit_box/peach.png",
      "rectColliders": [{ "x": 0, "y": -3, "w": 79, "h": 35, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 53, "r2": 26 }]
    },
    {
      "id": "medieval/fruit_box/watermelon",
      "name": "Fruit Box (Watermelon)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/fruit_box/watermelon.png",
      "rectColliders": [{ "x": 0, "y": -1, "w": 79, "h": 35, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 53, "r2": 26 }]
    },
    {
      "id": "Gaming Chair 1",
      "name": "Gaming Chair",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/chairs/gaming_chair_1.png",
      "rectColliders": [{ "x": 8, "y": -41, "w": 98, "h": 101, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 6, "y": -18, "r1": 63, "r2": 31 }]
    },
    {
      "id": "Gaming Chair 2",
      "name": "Gaming Chair",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/chairs/gaming_chair_2.png",
      "rectColliders": [{ "x": 8, "y": -41, "w": 98, "h": 101, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 6, "y": -18, "r1": 63, "r2": 31 }]
    },
    {
      "id": "Gas Tanks",
      "name": "Gas Tank",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/workshop/gas_tanks.png",
      "rectColliders": [{ "x": 0, "y": -65, "w": 190, "h": 130, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -39, "r1": 118, "r2": 67 }]
    },
    {
      "id": "devices/gate_console_2",
      "name": "Gate Console",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/devices/gate_console_2.png",
      "rectColliders": [{ "x": 0, "y": -29, "w": 64, "h": 100, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 34, "y": -7, "r1": 20, "r2": 16, "angle": 0 },
        { "x": -34, "y": -35, "r1": 22, "r2": 32, "angle": 0 }
      ],
      "shadows": [{ "x": 1, "y": 4, "r1": 48, "r2": 29 }]
    },
    {
      "id": "devices/gate_console_1",
      "name": "Gate Console",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/devices/gate_console_1.png",
      "rectColliders": [{ "x": 0, "y": -29, "w": 64, "h": 100, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 34, "y": -7, "r1": 20, "r2": 16, "angle": 0 },
        { "x": -34, "y": -35, "r1": 22, "r2": 32, "angle": 0 }
      ],
      "shadows": [{ "x": 1, "y": 4, "r1": 48, "r2": 29 }]
    },
    {
      "id": "dishes/glass_1",
      "name": "Glass Cup",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 0.94,
      "imageUrl": "props/dishes/glass_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "dishes/glass_4",
      "name": "Glass Cup",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/glass_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "dishes/glass_5",
      "name": "Glass Cup (Infested)",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/glass_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "dishes/glass_2",
      "name": "Glass Cup (Infested)",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/glass_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "dishes/glass_3",
      "name": "Glass Cup (Infested)",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/glass_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Grass Earth Patch 1",
      "name": "Grass Earth Patch 1",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/grass_earth_patch_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Grass Earth Patch 2",
      "name": "Grass Earth Patch 2",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/grass_earth_patch_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Grass Earth Patch 3",
      "name": "Grass Earth Patch 3",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/grass_earth_patch_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Grass Earth Patch 4",
      "name": "Grass Earth Patch 4",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/grass_earth_patch_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Grass Patch 1",
      "name": "Grass Patch 1",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/grass_patch_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Grass Patch 2",
      "name": "Grass Patch 2",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/grass_patch_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Grass Patch 3",
      "name": "Grass Patch 3",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/grass_patch_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Grass Patch 4",
      "name": "Grass Patch 4",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/grass_patch_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Grass Purple Patch 1",
      "name": "Grass Purple Patch 1",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/grass_purple_patch_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Grass Purple Patch 2",
      "name": "Grass Purple Patch 2",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/grass_purple_patch_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Grass Purple Patch 3",
      "name": "Grass Purple Patch 3",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/grass_purple_patch_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Grass Purple Patch 4",
      "name": "Grass Purple Patch 4",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/grass_purple_patch_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "space/containers/gray_off",
      "name": "Gray Space Container (Off)",
      "scaleMultip": 0.19,
      "originX": 0.5,
      "originY": 0.72,
      "imageUrl": "props/space/containers/gray_off.png",
      "rectColliders": [
        { "x": 0, "y": -15, "w": 65, "h": 100, "angle": 0 },
        { "x": -40, "y": -25, "w": 25, "h": 80, "angle": 0 },
        { "x": 40, "y": -25, "w": 25, "h": 80, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 70, "r2": 50 }]
    },
    {
      "id": "space/containers/gray_on",
      "name": "Gray Space Container (On)",
      "scaleMultip": 0.19,
      "originX": 0.5,
      "originY": 0.72,
      "imageUrl": "props/space/containers/gray_on.png",
      "rectColliders": [
        { "x": 0, "y": -15, "w": 65, "h": 100, "angle": 0 },
        { "x": -40, "y": -25, "w": 25, "h": 80, "angle": 0 },
        { "x": 40, "y": -25, "w": 25, "h": 80, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 70, "r2": 50 }]
    },
    {
      "id": "medieval/barriers/horizontal/gray",
      "name": "Gray Stone Barrier",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/medieval/barriers/horizontal/gray.png",
      "rectColliders": [{ "x": 0, "y": 19, "w": 160, "h": 61, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 27, "r1": 106, "r2": 43 }]
    },
    {
      "id": "medieval/barriers/vertical_tall/gray",
      "name": "Gray Stone Barrier (Tall Vertical)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "props/medieval/barriers/vertical_tall/gray.png",
      "rectColliders": [{ "x": 0, "y": -157, "w": 73, "h": 370, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 57, "r2": 45 }]
    },
    {
      "id": "medieval/barriers/vertical/gray",
      "name": "Gray Stone Barrier (Vertical)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/medieval/barriers/vertical/gray.png",
      "rectColliders": [{ "x": 0, "y": 41, "w": 74, "h": 98, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 61, "r1": 59, "r2": 50 }]
    },
    {
      "id": "medieval/barriers/horizontal_wide/gray",
      "name": "Gray Stone Barrier (Wide)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.64,
      "imageUrl": "props/medieval/barriers/horizontal_wide/gray.png",
      "rectColliders": [{ "x": 0, "y": 14, "w": 472, "h": 53, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 18, "r1": 274, "r2": 66 }]
    },
    {
      "id": "Medium Bush green",
      "name": "Green Bush ",
      "scaleMultip": 0.26,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/bushes/medium_green.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -51, "y": -38, "r1": 33, "r2": 30, "angle": 0 },
        { "x": -15, "y": -60, "r1": 35, "r2": 30, "angle": 0 },
        { "x": 30, "y": -53, "r1": 30, "r2": 30, "angle": 0 },
        { "x": 55, "y": -37, "r1": 30, "r2": 23, "angle": 0 },
        { "x": 2, "y": -17, "r1": 20, "r2": 15, "angle": 0 },
        { "x": -33, "y": -30, "r1": 33, "r2": 30, "angle": 0 },
        { "x": 35, "y": -30, "r1": 35, "r2": 30, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -16, "r1": 93, "r2": 29 }]
    },
    {
      "id": "Small Bush green",
      "name": "Green Bush (Small)",
      "scaleMultip": 0.26,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/bushes/small_green.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -15, "r1": 43, "r2": 10, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -14, "r1": 59, "r2": 21 }]
    },
    {
      "id": "Wide Bush green",
      "name": "Green Bush (Wide)",
      "scaleMultip": 0.26,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/bushes/wide_green.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -20, "r1": 110, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -19, "r1": 128, "r2": 32 }]
    },
    {
      "id": "Chemical green",
      "name": "Green Chemical ",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/science_lab/chemical_green.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 16, "r2": 5 }]
    },
    {
      "id": "science_lab/chemical_green_infected",
      "name": "Green Chemical (Infected)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/science_lab/chemical_green_infected.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 16, "r2": 5 }]
    },
    {
      "id": "corner_sofa/corner_sofa_green_back",
      "name": "Green Corner Sofa (Back)",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/corner_sofa/corner_sofa_green_back.png",
      "rectColliders": [
        { "x": -45, "y": 38, "w": 115, "h": 105, "angle": 0 },
        { "x": 37, "y": -42, "w": 130, "h": 135, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 20, "y": 28, "r1": 83, "r2": 68, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "corner_sofa/corner_sofa_green_front",
      "name": "Green Corner Sofa (Front)",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/corner_sofa/corner_sofa_green_front.png",
      "rectColliders": [
        { "x": -15, "y": -15, "w": 175, "h": 70, "angle": 0 },
        { "x": 25, "y": 60, "w": 90, "h": 100, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 65, "y": 30, "r1": 40, "r2": 79, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "medieval/barriers/horizontal/green",
      "name": "Green Stone Barrier",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/medieval/barriers/horizontal/green.png",
      "rectColliders": [{ "x": 0, "y": 19, "w": 160, "h": 61, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 27, "r1": 106, "r2": 43 }]
    },
    {
      "id": "medieval/barriers/vertical_tall/green",
      "name": "Green Stone Barrier (Tall Vertical)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "props/medieval/barriers/vertical_tall/green.png",
      "rectColliders": [{ "x": 0, "y": -157, "w": 73, "h": 370, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 57, "r2": 45 }]
    },
    {
      "id": "medieval/barriers/vertical/green",
      "name": "Green Stone Barrier (Vertical)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/medieval/barriers/vertical/green.png",
      "rectColliders": [{ "x": 0, "y": 41, "w": 74, "h": 98, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 61, "r1": 59, "r2": 50 }]
    },
    {
      "id": "medieval/barriers/horizontal_wide/green",
      "name": "Green Stone Barrier (Wide)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.64,
      "imageUrl": "props/medieval/barriers/horizontal_wide/green.png",
      "rectColliders": [{ "x": 0, "y": 14, "w": 472, "h": 53, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 18, "r1": 274, "r2": 66 }]
    },
    {
      "id": "Ground Hay 2",
      "name": "Ground Hay",
      "scaleMultip": 0.27,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/ground_hay_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Ground Hay 1",
      "name": "Ground Hay",
      "scaleMultip": 0.27,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/farm/ground_hay_1.png",
      "rectColliders": [{ "x": 0, "y": 3, "w": 85, "h": 20, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 13, "r1": 60, "r2": 17 }]
    },
    {
      "id": "plants/earthbreaking/earthbreaking_plant_8",
      "name": "Groundbreaking Plant",
      "scaleMultip": 0.2,
      "originX": 0.61,
      "originY": 0.72,
      "imageUrl": "props/plants/earthbreaking/earthbreaking_plant_8.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -24, "y": 4, "r1": 75, "r2": 20, "angle": -10 }
      ],
      "shadows": [{ "x": -4, "y": 23, "r1": 88, "r2": 30 }]
    },
    {
      "id": "plants/earthbreaking/earthbreaking_plant_5",
      "name": "Groundbreaking Plant",
      "scaleMultip": 0.2,
      "originX": 0.54,
      "originY": 0.56,
      "imageUrl": "props/plants/earthbreaking/earthbreaking_plant_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -12, "y": 7, "r1": 80, "r2": 30, "angle": 0 }
      ],
      "shadows": [{ "x": -7, "y": 9, "r1": 88, "r2": 30 }]
    },
    {
      "id": "plants/earthbreaking/earthbreaking_plant_7",
      "name": "Groundbreaking Plant",
      "scaleMultip": 0.2,
      "originX": 0.73,
      "originY": 0.8,
      "imageUrl": "props/plants/earthbreaking/earthbreaking_plant_7.png",
      "rectColliders": [{ "x": -56, "y": -45, "w": 135, "h": 30, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -1, "y": -10, "r1": 24, "r2": 20, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 5, "r1": 83, "r2": 30 }]
    },
    {
      "id": "plants/earthbreaking/earthbreaking_plant_3",
      "name": "Groundbreaking Plant",
      "scaleMultip": 0.2,
      "originX": 0.3,
      "originY": 0.52,
      "imageUrl": "props/plants/earthbreaking/earthbreaking_plant_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": 0, "r1": 30, "r2": 25, "angle": 0 },
        { "x": 55, "y": -20, "r1": 50, "r2": 10, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 17, "r1": 51, "r2": 30 }]
    },
    {
      "id": "plants/earthbreaking/earthbreaking_plant_6",
      "name": "Groundbreaking Plant",
      "scaleMultip": 0.2,
      "originX": 0.59,
      "originY": 0.8,
      "imageUrl": "props/plants/earthbreaking/earthbreaking_plant_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 15, "y": -20, "r1": 40, "r2": 25, "angle": 0 },
        { "x": -40, "y": -45, "r1": 65, "r2": 10, "angle": 0 }
      ],
      "shadows": [{ "x": 10, "y": 2, "r1": 83, "r2": 30 }]
    },
    {
      "id": "plants/earthbreaking/earthbreaking_plant_2",
      "name": "Groundbreaking Plant",
      "scaleMultip": 0.2,
      "originX": 0.38,
      "originY": 0.74,
      "imageUrl": "props/plants/earthbreaking/earthbreaking_plant_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -3, "y": -1, "r1": 29, "r2": 17 }]
    },
    {
      "id": "plants/earthbreaking/earthbreaking_plant_4",
      "name": "Groundbreaking Plant",
      "scaleMultip": 0.2,
      "originX": 0.54,
      "originY": 0.56,
      "imageUrl": "props/plants/earthbreaking/earthbreaking_plant_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": -2, "y": 7, "r1": 60, "r2": 20, "angle": 0 }],
      "shadows": [{ "x": -7, "y": 14, "r1": 73, "r2": 30 }]
    },
    {
      "id": "plants/earthbreaking/earthbreaking_plant_1",
      "name": "Groundbreaking Plant",
      "scaleMultip": 0.2,
      "originX": 0.52,
      "originY": 0.71,
      "imageUrl": "props/plants/earthbreaking/earthbreaking_plant_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -2, "y": 0, "r1": 18, "r2": 10 }]
    },
    {
      "id": "Gumball-Machine-blue",
      "name": "Gumball Machine (Blue)",
      "scaleMultip": 0.23,
      "originX": 0.5,
      "originY": 0.81,
      "imageUrl": "props/restaurant/gumball_blue.png",
      "rectColliders": [{ "x": 0, "y": -15, "w": 40, "h": 15, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 4, "r1": 31, "r2": 22, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 5, "r1": 43, "r2": 29 }]
    },
    {
      "id": "Gumball-Machine-red",
      "name": "Gumball Machine (Red)",
      "scaleMultip": 0.23,
      "originX": 0.5,
      "originY": 0.81,
      "imageUrl": "props/restaurant/gumball_red.png",
      "rectColliders": [{ "x": 0, "y": -15, "w": 40, "h": 15, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 4, "r1": 31, "r2": 22, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 5, "r1": 43, "r2": 29 }]
    },
    {
      "id": "Hay Pile",
      "name": "Hay Pile",
      "scaleMultip": 0.27,
      "originX": 0.5,
      "originY": 0.73,
      "imageUrl": "props/farm/hay_pile.png",
      "rectColliders": [{ "x": 0, "y": -5, "w": 145, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 14, "r1": 104, "r2": 38 }]
    },
    {
      "id": "Hay Stack Vertical",
      "name": "Hay Stack",
      "scaleMultip": 0.39,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/farm/hay_stack_vertical.png",
      "rectColliders": [{ "x": 0, "y": 5, "w": 86, "h": 105, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 25, "r1": 57, "r2": 59 }]
    },
    {
      "id": "Hay Stack Horizontal",
      "name": "Hay Stack",
      "scaleMultip": 0.39,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/farm/hay_stack_horizontal.png",
      "rectColliders": [{ "x": 0, "y": 5, "w": 110, "h": 75, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 28, "r1": 78, "r2": 41 }]
    },
    {
      "id": "medieval/blacksmith/heavy_hammer_2",
      "name": "Heavy Hammer",
      "scaleMultip": 0.13,
      "originX": 0.5,
      "originY": 0.01,
      "imageUrl": "props/medieval/blacksmith/heavy_hammer_2.png",
      "rectColliders": [{ "x": -15, "y": 21, "w": 27, "h": 33, "angle": -30 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/blacksmith/heavy_hammer",
      "name": "Heavy Hammer",
      "scaleMultip": 0.13,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/blacksmith/heavy_hammer.png",
      "rectColliders": [{ "x": 16, "y": 16, "w": 23, "h": 33, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -1, "y": 22, "r1": 41, "r2": 15 }]
    },
    {
      "id": "medieval/blacksmith/horseshoe",
      "name": "Horseshoe",
      "scaleMultip": 0.13,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/blacksmith/horseshoe.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "mining/hot_air_balloon",
      "name": "Hot Air Balloon",
      "scaleMultip": 0.29,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/hot_air_balloon.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -5, "y": -32, "r1": 83, "r2": 22, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -34, "r1": 117, "r2": 50 }]
    },
    {
      "id": "stadium/hydration_drink_4",
      "name": "Hydration Drink (Blue)",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.97,
      "imageUrl": "props/stadium/hydration_drink_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -11, "r1": 11, "r2": 13, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -5, "r1": 14, "r2": 10 }]
    },
    {
      "id": "stadium/hydration_drink_3",
      "name": "Hydration Drink (Green)",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.97,
      "imageUrl": "props/stadium/hydration_drink_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -11, "r1": 11, "r2": 13, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -5, "r1": 14, "r2": 10 }]
    },
    {
      "id": "stadium/hydration_drink_2",
      "name": "Hydration Drink (Purple)",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.97,
      "imageUrl": "props/stadium/hydration_drink_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -11, "r1": 11, "r2": 13, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -5, "r1": 14, "r2": 10 }]
    },
    {
      "id": "stadium/hydration_drink_1",
      "name": "Hydration Drink (Red)",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.97,
      "imageUrl": "props/stadium/hydration_drink_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -11, "r1": 11, "r2": 13, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -5, "r1": 14, "r2": 10 }]
    },
    {
      "id": "Ice Barrier Horizontal",
      "name": "Ice Barrier (Horizontal)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.6,
      "imageUrl": "props/barriers/ice_barrier_horizontal.png",
      "rectColliders": [{ "x": 0, "y": -5, "w": 190, "h": 95, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 14, "r1": 123, "r2": 61 }]
    },
    {
      "id": "Ice Barrier Vertical",
      "name": "Ice Barrier (Vertical)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.4,
      "imageUrl": "props/barriers/ice_barrier_vertical.png",
      "rectColliders": [{ "x": 0, "y": 36, "w": 90, "h": 180, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 53, "r1": 70, "r2": 105 }]
    },
    {
      "id": "stadium/ice_bucket_2",
      "name": "Ice Bucket (Blue)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/stadium/ice_bucket_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -15, "r1": 24, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -9, "r1": 30, "r2": 15 }]
    },
    {
      "id": "stadium/ice_bucket_3",
      "name": "Ice Bucket (Purple)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/stadium/ice_bucket_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -15, "r1": 24, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -9, "r1": 30, "r2": 15 }]
    },
    {
      "id": "stadium/ice_bucket_1",
      "name": "Ice Bucket (Red)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/stadium/ice_bucket_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -15, "r1": 24, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -9, "r1": 30, "r2": 15 }]
    },
    {
      "id": "igloo",
      "name": "Igloo",
      "scaleMultip": 0.32,
      "originX": 0.5,
      "originY": 0.72,
      "imageUrl": "props/igloos/igloo.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -32, "r1": 118, "r2": 75, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -6, "r1": 137, "r2": 73 }]
    },
    {
      "id": "igloo-snow",
      "name": "Igloo (Snow)",
      "scaleMultip": 0.32,
      "originX": 0.5,
      "originY": 0.72,
      "imageUrl": "props/igloos/snow.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -32, "r1": 118, "r2": 75, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -6, "r1": 137, "r2": 73 }]
    },
    {
      "id": "devices/infested_computer_b_2",
      "name": "Infested Computer",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.75,
      "imageUrl": "props/devices/infested_computer_b_2.png",
      "rectColliders": [{ "x": 8, "y": -20, "w": 90, "h": 45, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -2, "y": 2, "r1": 60, "r2": 32 }]
    },
    {
      "id": "devices/infested_computer_3",
      "name": "Infested Computer",
      "scaleMultip": 0.16,
      "originX": 0.55,
      "originY": 0.74,
      "imageUrl": "props/devices/infested_computer_3.png",
      "rectColliders": [{ "x": 0, "y": -24, "w": 75, "h": 60, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -5, "r1": 39, "r2": 37 }]
    },
    {
      "id": "devices/infested_computer_2",
      "name": "Infested Computer",
      "scaleMultip": 0.16,
      "originX": 0.55,
      "originY": 0.74,
      "imageUrl": "props/devices/infested_computer_2.png",
      "rectColliders": [{ "x": 0, "y": -24, "w": 75, "h": 60, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -5, "r1": 39, "r2": 37 }]
    },
    {
      "id": "devices/infested_computer_b_3",
      "name": "Infested Computer",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.75,
      "imageUrl": "props/devices/infested_computer_b_3.png",
      "rectColliders": [{ "x": 8, "y": -20, "w": 90, "h": 45, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -2, "y": 2, "r1": 60, "r2": 32 }]
    },
    {
      "id": "medieval/paper/ink_and_pen",
      "name": "Ink & Pen",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.82,
      "imageUrl": "props/medieval/paper/ink_and_pen.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -9, "y": 2, "r": 10 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -9, "y": 0, "r1": 22, "r2": 16 }]
    },
    {
      "id": "dishes/jug",
      "name": "Jug (Infested)",
      "scaleMultip": 0.35,
      "originX": 0.44,
      "originY": 0.97,
      "imageUrl": "props/dishes/jug.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -2, "y": -15, "r1": 20, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": -1, "y": -3, "r1": 22, "r2": 7 }]
    },
    {
      "id": "Junk Pile",
      "name": "Junk Pile",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.75,
      "imageUrl": "props/workshop/junk_pile.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 0, "r1": 115, "r2": 25, "angle": 0 }],
      "shadows": [{ "x": 0, "y": -1, "r1": 131, "r2": 52 }]
    },
    {
      "id": "medieval/kitchen/kettle",
      "name": "Kettle",
      "scaleMultip": 0.11,
      "originX": 0.5,
      "originY": 0.79,
      "imageUrl": "props/medieval/kitchen/kettle.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": -4, "y": 2, "r1": 13, "r2": 6, "angle": 0 }],
      "shadows": [{ "x": -4, "y": 1, "r1": 20, "r2": 12 }]
    },
    {
      "id": "tables/kitchen_table_infected_3",
      "name": "Kitchen Table (Infected)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/tables/kitchen_table_infected_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": 0, "r1": 150, "r2": 125, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 40, "r1": 160, "r2": 110 }]
    },
    {
      "id": "tables/kitchen_table_infected_1",
      "name": "Kitchen Table (Infected)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/tables/kitchen_table_infected_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": 0, "r1": 150, "r2": 125, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 40, "r1": 160, "r2": 110 }]
    },
    {
      "id": "tables/kitchen_table_infected_4",
      "name": "Kitchen Table (Infected)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/tables/kitchen_table_infected_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": 0, "r1": 150, "r2": 125, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 40, "r1": 160, "r2": 110 }]
    },
    {
      "id": "tables/kitchen_table_infected_2",
      "name": "Kitchen Table (Infected)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/tables/kitchen_table_infected_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": 0, "r1": 150, "r2": 125, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 40, "r1": 160, "r2": 110 }]
    },
    {
      "id": "Lab Table",
      "name": "Lab Table",
      "scaleMultip": 0.32,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "props/science_lab/table.png",
      "rectColliders": [{ "x": 0, "y": -65, "w": 235, "h": 115, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -11, "r1": 129, "r2": 62 }]
    },
    {
      "id": "tables/lab_table_infected_1",
      "name": "Lab Table (Infected)",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/tables/lab_table_infected_1.png",
      "rectColliders": [
        { "x": 0, "y": -10, "w": 263, "h": 110, "angle": 0 },
        { "x": -123, "y": 67, "w": 18, "h": 40, "angle": 0 },
        { "x": 123, "y": 67, "w": 18, "h": 40, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 58, "r1": 153, "r2": 72 }]
    },
    {
      "id": "tables/lab_table_infected_2",
      "name": "Lab Table (Infected)",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/tables/lab_table_infected_2.png",
      "rectColliders": [
        { "x": 0, "y": -10, "w": 263, "h": 110, "angle": 0 },
        { "x": -123, "y": 67, "w": 18, "h": 40, "angle": 0 },
        { "x": 123, "y": 67, "w": 18, "h": 40, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 58, "r1": 153, "r2": 72 }]
    },
    {
      "id": "mining/ladder",
      "name": "Ladder",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/ladder.png",
      "rectColliders": [{ "x": 0, "y": -80, "w": 70, "h": 158, "angle": 3 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -5, "y": -5, "r1": 45, "r2": 20 }]
    },
    {
      "id": "Ladybug",
      "name": "Ladybug",
      "scaleMultip": 0.32,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/bugs/ladybug.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 27, "r2": 19 }]
    },
    {
      "id": "mining/lamp_1_off",
      "name": "Lamp 1 (Off)",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/lamp_1_off.png",
      "rectColliders": [{ "x": 18, "y": -40, "w": 30, "h": 75, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 18, "y": -5, "r1": 30, "r2": 15 }]
    },
    {
      "id": "mining/lamp_1_on",
      "name": "Lamp 1 (On)",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/lamp_1_on.png",
      "rectColliders": [{ "x": 18, "y": -40, "w": 30, "h": 75, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 18, "y": -5, "r1": 30, "r2": 15 }]
    },
    {
      "id": "mining/l",
      "name": "Lamp 2 (Off)",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/lamp_2_off.png",
      "rectColliders": [{ "x": 15, "y": -40, "w": 30, "h": 75, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 15, "y": -5, "r1": 30, "r2": 15 }]
    },
    {
      "id": "mining/lamp_2_on",
      "name": "Lamp 2 (On)",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/lamp_2_on.png",
      "rectColliders": [{ "x": 15, "y": -40, "w": 30, "h": 75, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 15, "y": -5, "r1": 30, "r2": 15 }]
    },
    {
      "id": "Laptop",
      "name": "Laptop",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/laptop.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -19, "r1": 56, "r2": 30 }]
    },
    {
      "id": "medieval/big_barrel",
      "name": "Large Barrel",
      "scaleMultip": 0.21,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/big_barrel.png",
      "rectColliders": [{ "x": 1, "y": 15, "w": 184, "h": 52, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -44, "r1": 73, "r2": 82, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 22, "r1": 122, "r2": 50 }]
    },
    {
      "id": "leaf-pile-light-large",
      "name": "Large Leaf Pile",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/pile-light-large.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 61, "r1": 66, "r2": 32 }]
    },
    {
      "id": "leaf-pile-dark-large-alt",
      "name": "Large Leaf Pile",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/pile-dark-large-alt.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 80, "r1": 93, "r2": 49 }]
    },
    {
      "id": "leaf-pile-dark-large",
      "name": "Large Leaf Pile",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/pile-dark-large.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 82, "r1": 86, "r2": 53 }]
    },
    {
      "id": "large-snow-pile-3",
      "name": "Large Snow Pile",
      "scaleMultip": 0.46,
      "originX": 0.5,
      "originY": 0.84,
      "imageUrl": "props/snow_piles/large/pile_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -10, "r1": 165, "r2": 30, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -3, "r1": 192, "r2": 56 }]
    },
    {
      "id": "large-snow-pile-2",
      "name": "Large Snow Pile",
      "scaleMultip": 0.47,
      "originX": 0.5,
      "originY": 0.86,
      "imageUrl": "props/snow_piles/large/pile_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -9, "y": -17, "r1": 145, "r2": 35, "angle": 0 },
        { "x": 115, "y": -10, "r1": 35, "r2": 20, "angle": 0 }
      ],
      "shadows": [{ "x": -2, "y": 4, "r1": 190, "r2": 43 }]
    },
    {
      "id": "large-snow-pile-1",
      "name": "Large Snow Pile",
      "scaleMultip": 0.49,
      "originX": 0.5,
      "originY": 0.76,
      "imageUrl": "props/snow_piles/large/pile_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -15, "y": 0, "r1": 137, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": -2, "y": 14, "r1": 170, "r2": 35 }]
    },
    {
      "id": "leaf-single-yellow",
      "name": "Leaf",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/single-yellow.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "leaf-single-red",
      "name": "Leaf",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/single-red.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "leaf-single-bright-yellow",
      "name": "Leaf",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/single-bright-yellow.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "leaf-single-tan",
      "name": "Leaf",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/single-tan.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "leaf-single-lime",
      "name": "Leaf",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/single-lime.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "leaf-single-red-2",
      "name": "Leaf",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/single-red-2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "space/containers/light_gray_off",
      "name": "Light Gray Space Container (Off)",
      "scaleMultip": 0.19,
      "originX": 0.5,
      "originY": 0.72,
      "imageUrl": "props/space/containers/light_gray_off.png",
      "rectColliders": [
        { "x": 0, "y": -15, "w": 65, "h": 100, "angle": 0 },
        { "x": -40, "y": -25, "w": 25, "h": 80, "angle": 0 },
        { "x": 40, "y": -25, "w": 25, "h": 80, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 70, "r2": 50 }]
    },
    {
      "id": "space/containers/light_gray_on",
      "name": "Light Gray Space Container (On)",
      "scaleMultip": 0.19,
      "originX": 0.5,
      "originY": 0.72,
      "imageUrl": "props/space/containers/light_gray_on.png",
      "rectColliders": [
        { "x": 0, "y": -15, "w": 65, "h": 100, "angle": 0 },
        { "x": -40, "y": -25, "w": 25, "h": 80, "angle": 0 },
        { "x": 40, "y": -25, "w": 25, "h": 80, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 70, "r2": 50 }]
    },
    {
      "id": "Marble Sign 1",
      "name": "Marble Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/marble_signs/marble_sign_1.png",
      "rectColliders": [{ "x": 0, "y": -80, "w": 190, "h": 170, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -8, "r1": 121, "r2": 36 }]
    },
    {
      "id": "Marble Sign 2",
      "name": "Marble Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/marble_signs/marble_sign_2.png",
      "rectColliders": [{ "x": 0, "y": -80, "w": 190, "h": 170, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -8, "r1": 121, "r2": 36 }]
    },
    {
      "id": "medieval/market/stall/blue",
      "name": "Market Stand (Blue)",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/market/stall/blue.png",
      "rectColliders": [{ "x": 7, "y": 3, "w": 200, "h": 84, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 22, "r1": 128, "r2": 50 }]
    },
    {
      "id": "medieval/market/stall/red",
      "name": "Market Stand (Red)",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/market/stall/red.png",
      "rectColliders": [{ "x": 7, "y": 3, "w": 200, "h": 84, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 22, "r1": 128, "r2": 50 }]
    },
    {
      "id": "medieval/blacksmith/masher",
      "name": "Masher",
      "scaleMultip": 0.09,
      "originX": 0.5,
      "originY": 0.72,
      "imageUrl": "props/medieval/blacksmith/masher.png",
      "rectColliders": [{ "x": 1, "y": 4, "w": 55, "h": 20, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 42, "r2": 20 }]
    },
    {
      "id": "medieval/banners/blue_2",
      "name": "Medieval Banner (Blue)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.91,
      "imageUrl": "props/medieval/banners/blue_2.png",
      "rectColliders": [{ "x": 0, "y": 6, "w": 50, "h": 44, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 15, "r1": 45, "r2": 26 }]
    },
    {
      "id": "medieval/banners/blue_3",
      "name": "Medieval Banner (Blue)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.91,
      "imageUrl": "props/medieval/banners/blue_3.png",
      "rectColliders": [{ "x": 0, "y": 6, "w": 50, "h": 44, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 15, "r1": 45, "r2": 26 }]
    },
    {
      "id": "medieval/banners/blue",
      "name": "Medieval Banner (Blue)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.91,
      "imageUrl": "props/medieval/banners/blue.png",
      "rectColliders": [{ "x": 0, "y": 6, "w": 50, "h": 44, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 15, "r1": 45, "r2": 26 }]
    },
    {
      "id": "medieval/banners/red_2",
      "name": "Medieval Banner (Red)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.91,
      "imageUrl": "props/medieval/banners/red_2.png",
      "rectColliders": [{ "x": 0, "y": 6, "w": 50, "h": 44, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 15, "r1": 45, "r2": 26 }]
    },
    {
      "id": "medieval/banners/red_3",
      "name": "Medieval Banner (Red)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.91,
      "imageUrl": "props/medieval/banners/red_3.png",
      "rectColliders": [{ "x": 0, "y": 6, "w": 50, "h": 44, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 15, "r1": 45, "r2": 26 }]
    },
    {
      "id": "medieval/banners/red",
      "name": "Medieval Banner (Red)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.91,
      "imageUrl": "props/medieval/banners/red.png",
      "rectColliders": [{ "x": 0, "y": 6, "w": 50, "h": 44, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 15, "r1": 45, "r2": 26 }]
    },
    {
      "id": "medieval/beds/blue_horizontal",
      "name": "Medieval Bed (Blue)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.53,
      "imageUrl": "props/medieval/beds/blue_horizontal.png",
      "rectColliders": [{ "x": 0, "y": 22, "w": 198, "h": 81, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 57, "r1": 126, "r2": 45 }]
    },
    {
      "id": "medieval/kitchen/fork",
      "name": "Medieval Fork",
      "scaleMultip": 0.1,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/kitchen/fork.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/lantern/2",
      "name": "Medieval Lantern",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/lantern/2.png",
      "rectColliders": [{ "x": 0, "y": -6, "w": 44, "h": 51, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 36, "r2": 21 }]
    },
    {
      "id": "medieval/lantern/4",
      "name": "Medieval Lantern",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/lantern/4.png",
      "rectColliders": [{ "x": 0, "y": -6, "w": 44, "h": 51, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 36, "r2": 21 }]
    },
    {
      "id": "medieval/lantern/1",
      "name": "Medieval Lantern",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/lantern/1.png",
      "rectColliders": [{ "x": 0, "y": -6, "w": 44, "h": 51, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 36, "r2": 21 }]
    },
    {
      "id": "medieval/lantern/3",
      "name": "Medieval Lantern",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/lantern/3.png",
      "rectColliders": [{ "x": 0, "y": -6, "w": 44, "h": 51, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 36, "r2": 21 }]
    },
    {
      "id": "medieval/kitchen/jar_4",
      "name": "Medieval Pitcher (Purple)",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.84,
      "imageUrl": "props/medieval/kitchen/jar_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -3, "y": -1, "r1": 17, "r2": 11, "angle": 0 }
      ],
      "shadows": [{ "x": -5, "y": 0, "r1": 27, "r2": 15 }]
    },
    {
      "id": "medieval/kitchen/jar_3",
      "name": "Medieval Pitcher (Purple)",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/kitchen/jar_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": -6, "y": 1, "r1": 17, "r2": 9, "angle": 0 }],
      "shadows": [{ "x": -6, "y": 1, "r1": 31, "r2": 15 }]
    },
    {
      "id": "medieval/kitchen/jar_2",
      "name": "Medieval Pitcher (Red)",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.84,
      "imageUrl": "props/medieval/kitchen/jar_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -3, "y": -1, "r1": 17, "r2": 11, "angle": 0 }
      ],
      "shadows": [{ "x": -5, "y": 0, "r1": 27, "r2": 15 }]
    },
    {
      "id": "medieval/kitchen/jar",
      "name": "Medieval Pitcher (Red)",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/medieval/kitchen/jar.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": -6, "y": 1, "r1": 17, "r2": 9, "angle": 0 }],
      "shadows": [{ "x": -6, "y": 1, "r1": 31, "r2": 15 }]
    },
    {
      "id": "medieval/streetlight/off",
      "name": "Medieval Streetlight Lamp (Off)",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.91,
      "imageUrl": "props/medieval/streetlight/off.png",
      "rectColliders": [{ "x": 53, "y": 10, "w": 62, "h": 48, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 51, "y": 15, "r1": 57, "r2": 37 }]
    },
    {
      "id": "medieval/streetlight/on",
      "name": "Medieval Streetlight Lamp (On)",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.91,
      "imageUrl": "props/medieval/streetlight/on.png",
      "rectColliders": [{ "x": 68, "y": 10, "w": 62, "h": 48, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 67, "y": 15, "r1": 57, "r2": 37 }]
    },
    {
      "id": "leaf-pile-dark-medium",
      "name": "Medium Leaf Pile",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/pile-dark-medium.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "leaf-pile-dark-medium-alt",
      "name": "Medium Leaf Pile",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/pile-dark-medium-alt.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 50, "r1": 65, "r2": 32 }]
    },
    {
      "id": "leaf-pile-light-medium",
      "name": "Medium Leaf Pile",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/pile-light-medium.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 43, "r1": 47, "r2": 24 }]
    },
    {
      "id": "medium-snow-pile-2",
      "name": "Medium Snow Pile",
      "scaleMultip": 0.38,
      "originX": 0.5,
      "originY": 0.56,
      "imageUrl": "props/snow_piles/medium/pile_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 15, "r1": 80, "r2": 30, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 27, "r1": 108, "r2": 34 }]
    },
    {
      "id": "medium-snow-pile-1",
      "name": "Medium Snow Pile",
      "scaleMultip": 0.47,
      "originX": 0.5,
      "originY": 0.61,
      "imageUrl": "props/snow_piles/medium/pile_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 2, "r1": 60, "r2": 33, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 18, "r1": 75, "r2": 28 }]
    },
    {
      "id": "Briefcase-metal",
      "name": "Metal Briefcase",
      "scaleMultip": 0.11,
      "originX": 0.5,
      "originY": 0.8,
      "imageUrl": "props/briefcases/metal_briefcase.png",
      "rectColliders": [{ "x": 0, "y": -3, "w": 61, "h": 25, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 9, "r1": 38, "r2": 10 }]
    },
    {
      "id": "Can 3",
      "name": "Metal Can",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/cans/can_3.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -4, "y": -11, "r": 12 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Can 5",
      "name": "Metal Can",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/cans/can_5.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 3, "y": -11, "r": 12 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Can 9",
      "name": "Metal Can",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/cans/can_9.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -2, "y": -15, "r1": 14, "r2": 10, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "Can 6",
      "name": "Metal Can",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/cans/can_6.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 3, "y": -11, "r": 12 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Can 7",
      "name": "Metal Can",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/cans/can_7.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -2, "y": -15, "r1": 14, "r2": 10, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "Can 10",
      "name": "Metal Can",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/cans/can_10.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -2, "y": -15, "r1": 14, "r2": 10, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "Can 4",
      "name": "Metal Can",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/cans/can_4.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -4, "y": -11, "r": 12 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Can 1",
      "name": "Metal Can",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/cans/can_1.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -4, "y": -11, "r": 12 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Can 2",
      "name": "Metal Can",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/cans/can_2.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -4, "y": -11, "r": 12 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Can 8",
      "name": "Metal Can",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/cans/can_8.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -2, "y": -15, "r1": 14, "r2": 10, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "medieval/kitchen/metal_cup",
      "name": "Metal Cup",
      "scaleMultip": 0.11,
      "originX": 0.5,
      "originY": 0.79,
      "imageUrl": "props/medieval/kitchen/metal_cup.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 2, "r1": 9, "r2": 6, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 2, "r1": 13, "r2": 8 }]
    },
    {
      "id": "mining/house_1",
      "name": "Metal House",
      "scaleMultip": 0.25,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/house_1.png",
      "rectColliders": [
        { "x": 0, "y": -100, "w": 470, "h": 195, "angle": 0 },
        { "x": 0, "y": -221, "w": 411, "h": 48, "angle": 0 },
        { "x": 0, "y": -265, "w": 333, "h": 42, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -14, "r1": 262, "r2": 48 }]
    },
    {
      "id": "mining/house_2",
      "name": "Metal House",
      "scaleMultip": 0.25,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/house_2.png",
      "rectColliders": [
        { "x": 0, "y": -100, "w": 470, "h": 195, "angle": 0 },
        { "x": 0, "y": -221, "w": 411, "h": 48, "angle": 0 },
        { "x": 0, "y": -265, "w": 333, "h": 42, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -14, "r1": 262, "r2": 48 }]
    },
    {
      "id": "Metal-Pole-3",
      "name": "Metal Pole",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/metal/pole3.png",
      "rectColliders": [{ "x": 0, "y": -4, "w": 20, "h": 8, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -6, "r1": 20, "r2": 12 }]
    },
    {
      "id": "Metal-Pole-2",
      "name": "Metal Pole",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/metal/pole2.png",
      "rectColliders": [{ "x": 0, "y": -4, "w": 20, "h": 8, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -6, "r1": 20, "r2": 12 }]
    },
    {
      "id": "Metal-Pole-1",
      "name": "Metal Pole",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/metal/pole1.png",
      "rectColliders": [{ "x": 0, "y": -4, "w": 20, "h": 8, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -7, "r1": 21, "r2": 14 }]
    },
    {
      "id": "Shelf",
      "name": "Metal Shelf",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/workshop/shelf.png",
      "rectColliders": [{ "x": 0, "y": -120, "w": 180, "h": 250, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -11, "r1": 109, "r2": 47 }]
    },
    {
      "id": "Metal Shovel",
      "name": "Metal Shovel",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.48,
      "imageUrl": "/props/farm/metal_shovel/shovel.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Metal Shovel Standing",
      "name": "Metal Shovel (Standing)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "/props/farm/metal_shovel/standing.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -5, "y": -12, "r": 13 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Metal-Sign-3",
      "name": "Metal Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/metal/sign3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Metal-Sign-4",
      "name": "Metal Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/metal/sign4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Metal-Sign-5",
      "name": "Metal Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/metal/sign5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Metal-Sign-1",
      "name": "Metal Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/metal/sign1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Metal-Sign-2",
      "name": "Metal Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/metal/sign2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Microscope",
      "name": "Microscope",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.74,
      "imageUrl": "props/science_lab/microscope.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -5, "r": 20 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -5, "y": 7, "r1": 27, "r2": 21 }]
    },
    {
      "id": "mining/mining_cart_1",
      "name": "Mining Cart",
      "scaleMultip": 0.25,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/mining/mining_cart_1.png",
      "rectColliders": [{ "x": -2, "y": -27, "w": 140, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -2, "y": -3, "r1": 73, "r2": 20 }]
    },
    {
      "id": "mining/mining_cart_rails_1",
      "name": "Mining Cart Rails",
      "scaleMultip": 0.25,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/mining/mining_cart_rails_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/blacksmith/molten_lava",
      "name": "Molten Lava Bucket",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0.68,
      "imageUrl": "props/medieval/blacksmith/molten_lava.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -1, "r1": 26, "r2": 21, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 11, "r1": 34, "r2": 18 }]
    },
    {
      "id": "patches/moss_9",
      "name": "Moss",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/patches/moss_9.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/moss_5",
      "name": "Moss",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/patches/moss_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/moss_2",
      "name": "Moss",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/patches/moss_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/moss_1",
      "name": "Moss",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/patches/moss_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/moss_6",
      "name": "Moss",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/patches/moss_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/moss_4",
      "name": "Moss",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/patches/moss_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/moss_3",
      "name": "Moss",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/patches/moss_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/moss_8",
      "name": "Moss",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/patches/moss_8.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/moss_7",
      "name": "Moss",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/patches/moss_7.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/moss_10",
      "name": "Moss",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/patches/moss_10.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "patches/moss_11",
      "name": "Moss",
      "scaleMultip": 0.25,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/patches/moss_11.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "dishes/muffin_tray",
      "name": "Muffin Tray",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.66,
      "imageUrl": "props/dishes/muffin_tray.png",
      "rectColliders": [{ "x": 0, "y": -10, "w": 42, "h": 54, "angle": -50 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Office Chair 2",
      "name": "Office Chair",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/chairs/office_chair_2.png",
      "rectColliders": [{ "x": 8, "y": -36, "w": 89, "h": 84, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 4, "y": -12, "r1": 58, "r2": 28 }]
    },
    {
      "id": "Office Chair 1",
      "name": "Office Chair",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/chairs/office_chair_1.png",
      "rectColliders": [{ "x": 8, "y": -36, "w": 89, "h": 84, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 4, "y": -12, "r1": 58, "r2": 28 }]
    },
    {
      "id": "Office Plant 2",
      "name": "Office Plant",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/office_plant_2.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -5, "y": -25, "r": 45 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -5, "y": 0, "r1": 56, "r2": 23 }]
    },
    {
      "id": "Office Plant 3",
      "name": "Office Plant",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/office_plant_3.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -2, "y": -20, "r": 30 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -1, "y": -2, "r1": 45, "r2": 19 }]
    },
    {
      "id": "Office Plant 1",
      "name": "Office Plant",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/office_plant_1.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 2, "y": -27, "r": 35 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 4, "y": -1, "r1": 38, "r2": 18 }]
    },
    {
      "id": "space/containers/orange_off",
      "name": "Orange Space Container (Off)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.59,
      "imageUrl": "props/space/containers/orange_off.png",
      "rectColliders": [{ "x": 0, "y": 0, "w": 102, "h": 100, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 28, "r1": 70, "r2": 45 }]
    },
    {
      "id": "space/containers/orange_on",
      "name": "Orange Space Container (On)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.59,
      "imageUrl": "props/space/containers/orange_on.png",
      "rectColliders": [{ "x": 0, "y": 0, "w": 102, "h": 100, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 28, "r1": 70, "r2": 45 }]
    },
    {
      "id": "dishes/pan",
      "name": "Pan",
      "scaleMultip": 0.35,
      "originX": 0.3,
      "originY": 0.58,
      "imageUrl": "props/dishes/pan.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 1, "y": -1, "r1": 29, "r2": 14, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 3, "r1": 30, "r2": 18 }]
    },
    {
      "id": "medieval/paper/map",
      "name": "Paper Map",
      "scaleMultip": 0.09,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/paper/map.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/paper/scroll_3",
      "name": "Paper Scroll",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/paper/scroll_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/paper/scroll_1",
      "name": "Paper Scroll",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/paper/scroll_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/paper/scroll_2",
      "name": "Paper Scroll",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/paper/scroll_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/paper/scroll_opened_2",
      "name": "Paper Scroll (Opened)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/paper/scroll_opened_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/paper/scroll_opened",
      "name": "Paper Scroll (Opened)",
      "scaleMultip": 0.14,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/paper/scroll_opened.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Papers 4",
      "name": "Papers",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/office/papers_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Papers 3",
      "name": "Papers",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/office/papers_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Papers 5",
      "name": "Papers",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/office/papers_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Papers 2",
      "name": "Papers",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/office/papers_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Papers 6",
      "name": "Papers",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/office/papers_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Papers 1",
      "name": "Papers",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/office/papers_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Bench",
      "name": "Park Bench",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/park/bench.png",
      "rectColliders": [{ "x": 0, "y": -55, "w": 270, "h": 110, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -11, "r1": 148, "r2": 34 }]
    },
    {
      "id": "Pitchfork",
      "name": "Pitchfork",
      "scaleMultip": 0.24,
      "originX": 0.5,
      "originY": 0.65,
      "imageUrl": "/props/farm/pitchfork/pitchfork.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Pitchfork Standing",
      "name": "Pitchfork (Standing)",
      "scaleMultip": 0.24,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "/props/farm/pitchfork/standing.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": 0, "r": 20 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "barriers/plant_barrier_2",
      "name": "Plant Barrier (Horizontal)",
      "scaleMultip": 0.43,
      "originX": 0.5,
      "originY": 0.6,
      "imageUrl": "props/barriers/plant_barrier_2.png",
      "rectColliders": [{ "x": 0, "y": 4, "w": 193, "h": 99, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 11, "r1": 113, "r2": 77 }]
    },
    {
      "id": "barriers/plant_barrier_1",
      "name": "Plant Barrier (Vertical)",
      "scaleMultip": 0.43,
      "originX": 0.5,
      "originY": 0.4,
      "imageUrl": "props/barriers/plant_barrier_1.png",
      "rectColliders": [{ "x": 0, "y": 43, "w": 95, "h": 181, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 54, "r1": 64, "r2": 106 }]
    },
    {
      "id": "plants/plant_canister/plant_canister_3",
      "name": "Plant Canister",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/plants/plant_canister/plant_canister_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -21, "r1": 25, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -7, "r1": 32, "r2": 20 }]
    },
    {
      "id": "plants/plant_canister/plant_canister_6",
      "name": "Plant Canister",
      "scaleMultip": 0.18,
      "originX": 0.43,
      "originY": 0.85,
      "imageUrl": "props/plants/plant_canister/plant_canister_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -21, "r1": 25, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -7, "r1": 32, "r2": 20 }]
    },
    {
      "id": "plants/plant_canister/plant_canister_2",
      "name": "Plant Canister",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/plants/plant_canister/plant_canister_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -21, "r1": 25, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -7, "r1": 32, "r2": 20 }]
    },
    {
      "id": "plants/plant_canister/plant_canister_5",
      "name": "Plant Canister",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/plants/plant_canister/plant_canister_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -21, "r1": 25, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -7, "r1": 32, "r2": 20 }]
    },
    {
      "id": "plants/plant_canister/plant_canister_4",
      "name": "Plant Canister",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/plants/plant_canister/plant_canister_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -21, "r1": 25, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -7, "r1": 32, "r2": 20 }]
    },
    {
      "id": "plants/plant_canister/plant_canister_1",
      "name": "Plant Canister",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/plants/plant_canister/plant_canister_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -21, "r1": 25, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -7, "r1": 32, "r2": 20 }]
    },
    {
      "id": "dishes/pot_plant",
      "name": "Plant In Pot",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/pot_plant.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -19, "r1": 25, "r2": 20, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -10, "r1": 36, "r2": 16 }]
    },
    {
      "id": "Weed",
      "name": "Pond Grass",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/weed.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Plant Pot 3",
      "name": "Potted Plant",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/plant_pot_3.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -3, "y": -39, "r": 42 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -3, "y": -19, "r1": 56, "r2": 33 }]
    },
    {
      "id": "Bush Pot 2",
      "name": "Potted Plant",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/bush_pot_2.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -25, "r": 25 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 32, "r2": 15 }]
    },
    {
      "id": "Plant 1",
      "name": "Potted Plant",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/plant_pot_1.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -24, "r": 25 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -1, "y": -9, "r1": 34, "r2": 19 }]
    },
    {
      "id": "Bush Pot 3",
      "name": "Potted Plant",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/bush_pot_3.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -25, "r": 25 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 32, "r2": 15 }]
    },
    {
      "id": "Bush Pot 5",
      "name": "Potted Plant",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/bush_pot_5.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -25, "r": 25 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 32, "r2": 15 }]
    },
    {
      "id": "Bush Pot 4",
      "name": "Potted Plant",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/bush_pot_4.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -25, "r": 25 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 32, "r2": 15 }]
    },
    {
      "id": "Plant 2",
      "name": "Potted Plant",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/plant_pot_2.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -24, "r": 25 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -1, "y": -9, "r1": 34, "r2": 19 }]
    },
    {
      "id": "Bush Pot 6",
      "name": "Potted Plant",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/bush_pot_6.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -25, "r": 25 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 32, "r2": 15 }]
    },
    {
      "id": "Bush Pot 1",
      "name": "Potted Plant",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/plants/bush_pot_1.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -25, "r": 25 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -9, "r1": 32, "r2": 15 }]
    },
    {
      "id": "Pumpkin 2",
      "name": "Pumpkin",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "/props/farm/pumpkin/2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -15, "r1": 24, "r2": 14, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -2, "r1": 28, "r2": 9 }]
    },
    {
      "id": "Pumpkin 1",
      "name": "Pumpkin",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "/props/farm/pumpkin/1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -15, "r1": 32, "r2": 20, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 2, "r1": 36, "r2": 10 }]
    },
    {
      "id": "Pumpkin 3",
      "name": "Pumpkin",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "/props/farm/pumpkin/3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -15, "r1": 24, "r2": 14, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -2, "r1": 28, "r2": 9 }]
    },
    {
      "id": "corner_sofa/corner_sofa_purple_back",
      "name": "Purple Corner Sofa (Back)",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/corner_sofa/corner_sofa_purple_back.png",
      "rectColliders": [
        { "x": -45, "y": 38, "w": 115, "h": 105, "angle": 0 },
        { "x": 37, "y": -42, "w": 130, "h": 135, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 20, "y": 28, "r1": 83, "r2": 68, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "corner_sofa/corner_sofa_purple_front",
      "name": "Purple Corner Sofa (Front)",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/corner_sofa/corner_sofa_purple_front.png",
      "rectColliders": [
        { "x": -15, "y": -15, "w": 175, "h": 70, "angle": 0 },
        { "x": 25, "y": 60, "w": 90, "h": 100, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 65, "y": 30, "r1": 40, "r2": 79, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "stools/purple_seat",
      "name": "Purple Seat",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.9,
      "imageUrl": "props/stools/purple_seat.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -15, "r1": 32, "r2": 17, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 0, "r1": 21, "r2": 12 }]
    },
    {
      "id": "space/containers/purple_off",
      "name": "Purple Space Container (Off)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.59,
      "imageUrl": "props/space/containers/purple_off.png",
      "rectColliders": [{ "x": 0, "y": 0, "w": 102, "h": 100, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 28, "r1": 70, "r2": 45 }]
    },
    {
      "id": "space/containers/purple_on",
      "name": "Purple Space Container (On)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.59,
      "imageUrl": "props/space/containers/purple_on.png",
      "rectColliders": [{ "x": 0, "y": 0, "w": 102, "h": 100, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 28, "r1": 70, "r2": 45 }]
    },
    {
      "id": "medieval/barriers/horizontal/purple",
      "name": "Purple Stone Barrier",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/medieval/barriers/horizontal/purple.png",
      "rectColliders": [{ "x": 0, "y": 19, "w": 160, "h": 61, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 27, "r1": 106, "r2": 43 }]
    },
    {
      "id": "medieval/barriers/vertical_tall/purple",
      "name": "Purple Stone Barrier (Tall Vertical)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "props/medieval/barriers/vertical_tall/purple.png",
      "rectColliders": [{ "x": 0, "y": -157, "w": 73, "h": 370, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 3, "r1": 57, "r2": 45 }]
    },
    {
      "id": "medieval/barriers/vertical/purple",
      "name": "Purple Stone Barrier (Vertical)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/medieval/barriers/vertical/purple.png",
      "rectColliders": [{ "x": 0, "y": 41, "w": 74, "h": 98, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 61, "r1": 59, "r2": 50 }]
    },
    {
      "id": "medieval/barriers/horizontal_wide/purple",
      "name": "Purple Stone Barrier (Wide)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.64,
      "imageUrl": "props/medieval/barriers/horizontal_wide/purple.png",
      "rectColliders": [{ "x": 0, "y": 14, "w": 472, "h": 53, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 18, "r1": 274, "r2": 66 }]
    },
    {
      "id": "flags/racing/blue",
      "name": "Racing Flag (Blue)",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.94,
      "imageUrl": "props/flags/racing/blue.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -46, "y": 5, "r": 6 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -46, "y": 7, "r1": 17, "r2": 14 }]
    },
    {
      "id": "flags/racing/goal",
      "name": "Racing Flag (Checkered)",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.94,
      "imageUrl": "props/flags/racing/goal.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -46, "y": 5, "r": 6 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -46, "y": 7, "r1": 17, "r2": 14 }]
    },
    {
      "id": "flags/racing/gold",
      "name": "Racing Flag (Gold)",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.94,
      "imageUrl": "props/flags/racing/gold.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -46, "y": 5, "r": 6 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -46, "y": 7, "r1": 17, "r2": 14 }]
    },
    {
      "id": "flags/racing/green",
      "name": "Racing Flag (Green)",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.94,
      "imageUrl": "props/flags/racing/green.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -46, "y": 5, "r": 6 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -46, "y": 7, "r1": 17, "r2": 14 }]
    },
    {
      "id": "flags/racing/red",
      "name": "Racing Flag (Red)",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.94,
      "imageUrl": "props/flags/racing/red.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -46, "y": 5, "r": 6 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -46, "y": 7, "r1": 17, "r2": 14 }]
    },
    {
      "id": "flags/racing/yellow",
      "name": "Racing Flag (Yellow)",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.94,
      "imageUrl": "props/flags/racing/yellow.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -46, "y": 5, "r": 6 }],
      "ellipseColliders": [],
      "shadows": [{ "x": -46, "y": 7, "r1": 17, "r2": 14 }]
    },
    {
      "id": "stadium/railing_1",
      "name": "Railing",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/stadium/railing_1.png",
      "rectColliders": [{ "x": 0, "y": -68, "w": 58, "h": 150, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -67, "r1": 44, "r2": 95 }]
    },
    {
      "id": "stadium/railing_2",
      "name": "Railing",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/stadium/railing_2.png",
      "rectColliders": [{ "x": 0, "y": -75, "w": 60, "h": 170, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -72, "r1": 54, "r2": 100 }]
    },
    {
      "id": "Rake",
      "name": "Rake",
      "scaleMultip": 0.24,
      "originX": 0.5,
      "originY": 0.61,
      "imageUrl": "/props/farm/rake/rake.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Rake Standing",
      "name": "Rake (Standing)",
      "scaleMultip": 0.24,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "/props/farm/rake/standing.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 2, "r1": 28, "r2": 10, "angle": 15 }],
      "shadows": []
    },
    {
      "id": "Chemical red",
      "name": "Red Chemical ",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/science_lab/chemical_red.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 4, "r1": 16, "r2": 5 }]
    },
    {
      "id": "corner_sofa/corner_sofa_red_back",
      "name": "Red Corner Sofa (Back)",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/corner_sofa/corner_sofa_red_back.png",
      "rectColliders": [
        { "x": -45, "y": 38, "w": 115, "h": 105, "angle": 0 },
        { "x": 37, "y": -42, "w": 130, "h": 135, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 20, "y": 28, "r1": 83, "r2": 68, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "corner_sofa/corner_sofa_red_front",
      "name": "Red Corner Sofa (Front)",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/corner_sofa/corner_sofa_red_front.png",
      "rectColliders": [
        { "x": -15, "y": -15, "w": 175, "h": 70, "angle": 0 },
        { "x": 25, "y": 60, "w": 90, "h": 100, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 65, "y": 30, "r1": 40, "r2": 79, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "Rock 6",
      "name": "Rock",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.75,
      "imageUrl": "props/rocks/rock_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 0, "r1": 40, "r2": 10, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 1, "r1": 52, "r2": 15 }]
    },
    {
      "id": "Rock 7",
      "name": "Rock",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/rocks/rock_7.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -10, "r1": 30, "r2": 10, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -5, "r1": 38, "r2": 11 }]
    },
    {
      "id": "Rock 5",
      "name": "Rock",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.75,
      "imageUrl": "props/rocks/rock_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 0, "r1": 40, "r2": 10, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 1, "r1": 52, "r2": 15 }]
    },
    {
      "id": "Rock 4",
      "name": "Rock",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.75,
      "imageUrl": "props/rocks/rock_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 1, "r1": 100, "r2": 25, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 2, "r1": 123, "r2": 40 }]
    },
    {
      "id": "Rock 8",
      "name": "Rock",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/rocks/rock_8.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -10, "r1": 30, "r2": 10, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -5, "r1": 38, "r2": 11 }]
    },
    {
      "id": "Rock 3",
      "name": "Rocks",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.75,
      "imageUrl": "props/rocks/rock_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 1, "r1": 100, "r2": 25, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 2, "r1": 123, "r2": 40 }]
    },
    {
      "id": "Rock 2",
      "name": "Rocks",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.75,
      "imageUrl": "props/rocks/rock_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 1, "r1": 150, "r2": 40, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 9, "r1": 190, "r2": 58 }]
    },
    {
      "id": "Rock 1",
      "name": "Rocks",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.75,
      "imageUrl": "props/rocks/rock_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 1, "r1": 150, "r2": 40, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 9, "r1": 190, "r2": 58 }]
    },
    {
      "id": "medieval/blacksmith/roller",
      "name": "Roller",
      "scaleMultip": 0.11,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/blacksmith/roller.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Safe 2",
      "name": "Safe",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/safe_2.png",
      "rectColliders": [{ "x": 0, "y": -80, "w": 120, "h": 182, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -11, "r1": 81, "r2": 44 }]
    },
    {
      "id": "Safe 1",
      "name": "Safe",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/safe_1.png",
      "rectColliders": [{ "x": 0, "y": -80, "w": 120, "h": 182, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -11, "r1": 81, "r2": 44 }]
    },
    {
      "id": "Sand Patch 1",
      "name": "Sand Patch 1",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/sand_patch_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sand Patch 2",
      "name": "Sand Patch 2",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/sand_patch_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sand Patch 3",
      "name": "Sand Patch 3",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/sand_patch_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sand Patch 4",
      "name": "Sand Patch 4",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/sand_patch_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/sand_pile",
      "name": "Sand Pile",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.75,
      "imageUrl": "props/medieval/sand_pile.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -16, "y": -5, "r1": 67, "r2": 20, "angle": 4 }
      ],
      "shadows": [{ "x": -4, "y": 0, "r1": 92, "r2": 33 }]
    },
    {
      "id": "mining/sand_pile_2",
      "name": "Sand Pile",
      "scaleMultip": 0.14,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.66,
      "imageUrl": "props/mining/sand_pile_2.png",
      "rectColliders": [{ "x": 0, "y": 5, "w": 55, "h": 40, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 18, "r1": 34, "r2": 15 }]
    },
    {
      "id": "mining/sand_pile",
      "name": "Sand Pile",
      "scaleMultip": 0.11,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/sand_pile.png",
      "rectColliders": [{ "x": 3, "y": -10, "w": 39, "h": 20, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 4, "y": -8, "r1": 17, "r2": 8, "angle": 0 }],
      "shadows": [{ "x": 6, "y": -4, "r1": 21, "r2": 8 }]
    },
    {
      "id": "Sand 2",
      "name": "Sand Pile",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.65,
      "imageUrl": "props/sand/sand_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 5, "y": 0, "r1": 100, "r2": 20, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 10, "r1": 131, "r2": 42 }]
    },
    {
      "id": "Sand 3",
      "name": "Sand Pile",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.65,
      "imageUrl": "props/sand/sand_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -10, "r1": 90, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -2, "r1": 104, "r2": 39 }]
    },
    {
      "id": "Sand 1",
      "name": "Sand Pile",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.65,
      "imageUrl": "props/sand/sand_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -10, "r1": 90, "r2": 15, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 0, "r1": 103, "r2": 37 }]
    },
    {
      "id": "Sand Purple Patch 1",
      "name": "Sand Purple Patch 1",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/sand_purple_patch_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sand Purple Patch 2",
      "name": "Sand Purple Patch 2",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/sand_purple_patch_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sand Purple Patch 3",
      "name": "Sand Purple Patch 3",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/sand_purple_patch_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sand Purple Patch 4",
      "name": "Sand Purple Patch 4",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/sand_purple_patch_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Scarecrow",
      "name": "Scarerow",
      "scaleMultip": 0.26,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "/props/farm/scarecrow.png",
      "rectColliders": [{ "x": 0, "y": -4, "w": 18, "h": 35, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 13, "r1": 35, "r2": 13 }]
    },
    {
      "id": "barriers/scifi_barrier_4",
      "name": "Scifi Plant Barrier (Horizontal)",
      "scaleMultip": 0.43,
      "originX": 0.5,
      "originY": 0.6,
      "imageUrl": "props/barriers/scifi_barrier_4.png",
      "rectColliders": [{ "x": 0, "y": 4, "w": 193, "h": 99, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 11, "r1": 113, "r2": 77 }]
    },
    {
      "id": "barriers/scifi_barrier_3",
      "name": "Scifi Plant Barrier (Vertical)",
      "scaleMultip": 0.43,
      "originX": 0.5,
      "originY": 0.4,
      "imageUrl": "props/barriers/scifi_barrier_3.png",
      "rectColliders": [{ "x": 0, "y": 43, "w": 95, "h": 181, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 54, "r1": 64, "r2": 106 }]
    },
    {
      "id": "Shell 4",
      "name": "Shell",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.65,
      "imageUrl": "props/shells/shell_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shell 3",
      "name": "Shell",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.65,
      "imageUrl": "props/shells/shell_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shell 6",
      "name": "Shell",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.65,
      "imageUrl": "props/shells/shell_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shell 5",
      "name": "Shell",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.65,
      "imageUrl": "props/shells/shell_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shell 1",
      "name": "Shell",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.65,
      "imageUrl": "props/shells/shell_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shell 2",
      "name": "Shell",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.65,
      "imageUrl": "props/shells/shell_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/shields/2",
      "name": "Shield",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "props/medieval/shields/2.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -4, "r": 10 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 0, "r1": 24, "r2": 12 }]
    },
    {
      "id": "medieval/shields/4",
      "name": "Shield",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "props/medieval/shields/4.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -4, "r": 10 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 0, "r1": 24, "r2": 12 }]
    },
    {
      "id": "medieval/shields/6",
      "name": "Shield",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "props/medieval/shields/6.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -4, "r": 10 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 0, "r1": 24, "r2": 12 }]
    },
    {
      "id": "medieval/shields/8",
      "name": "Shield",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "props/medieval/shields/8.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -4, "r": 10 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 0, "r1": 24, "r2": 12 }]
    },
    {
      "id": "medieval/shields/7",
      "name": "Shield",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "props/medieval/shields/7.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -4, "r": 10 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 0, "r1": 24, "r2": 12 }]
    },
    {
      "id": "medieval/shields/5",
      "name": "Shield",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "props/medieval/shields/5.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -4, "r": 10 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 0, "r1": 24, "r2": 12 }]
    },
    {
      "id": "medieval/shields/1",
      "name": "Shield",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "props/medieval/shields/1.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -4, "r": 10 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 0, "r1": 24, "r2": 12 }]
    },
    {
      "id": "medieval/shields/3",
      "name": "Shield",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "props/medieval/shields/3.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -4, "r": 10 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 0, "r1": 24, "r2": 12 }]
    },
    {
      "id": "medieval/shield_display",
      "name": "Shield Display",
      "scaleMultip": 0.13,
      "originX": 0.5,
      "originY": 0.78,
      "imageUrl": "props/medieval/shield_display.png",
      "rectColliders": [{ "x": 0, "y": 1, "w": 154, "h": 40, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -2, "y": 12, "r1": 91, "r2": 23 }]
    },
    {
      "id": "medieval/shield_display_empty",
      "name": "Shield Display (Empty)",
      "scaleMultip": 0.13,
      "originX": 0.5,
      "originY": 0.78,
      "imageUrl": "props/medieval/shield_display_empty.png",
      "rectColliders": [{ "x": 0, "y": 1, "w": 154, "h": 40, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -2, "y": 12, "r1": 91, "r2": 23 }]
    },
    {
      "id": "Shovel 3",
      "name": "Shovel",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/shovels/shovel_3.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -5, "y": -7, "r": 14 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shovel 9",
      "name": "Shovel",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/shovels/shovel_9.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -5, "y": -7, "r": 14 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shovel 8",
      "name": "Shovel",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/shovels/shovel_8.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -5, "y": -7, "r": 14 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shovel 2",
      "name": "Shovel",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/shovels/shovel_2.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -5, "y": -7, "r": 14 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shovel 5",
      "name": "Shovel",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/shovels/shovel_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shovel 7",
      "name": "Shovel",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/shovels/shovel_7.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -5, "y": -7, "r": 14 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shovel 6",
      "name": "Shovel",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/shovels/shovel_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shovel 1",
      "name": "Shovel",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/shovels/shovel_1.png",
      "rectColliders": [],
      "circleColliders": [{ "x": -5, "y": -7, "r": 14 }],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Shovel 4",
      "name": "Shovel",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.85,
      "imageUrl": "props/shovels/shovel_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "leaf-pile-dark-small",
      "name": "Small Leaf Pile",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/pile-dark-small.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "leaf-pile-dark-small-alt",
      "name": "Small Leaf Pile",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/farm/leaf/pile-dark-small-alt.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 35, "r1": 43, "r2": 27 }]
    },
    {
      "id": "small-snow-pile-2",
      "name": "Small Snow Pile",
      "scaleMultip": 0.38,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/snow_piles/small/pile_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "small-snow-pile-1",
      "name": "Small Snow Pile",
      "scaleMultip": 0.38,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/snow_piles/small/pile_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "snowman",
      "name": "Snowman",
      "scaleMultip": 0.29,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "props/snowmen/snowman.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -40, "r": 50 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 3, "y": 3, "r1": 64, "r2": 20 }]
    },
    {
      "id": "snowman-arms",
      "name": "Snowman (Arms)",
      "scaleMultip": 0.29,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "props/snowmen/arms.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -40, "r": 50 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 3, "y": 3, "r1": 64, "r2": 20 }]
    },
    {
      "id": "bare-tree-2",
      "name": "Snowy Bare Tree",
      "scaleMultip": 0.27,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/trees/tree_bare_2.png",
      "rectColliders": [{ "x": 10, "y": -40, "w": 34, "h": 95, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 4, "y": 6, "r1": 36, "r2": 19 }]
    },
    {
      "id": "bare-tree-1",
      "name": "Snowy Bare Tree",
      "scaleMultip": 0.27,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/trees/tree_bare_1.png",
      "rectColliders": [{ "x": 10, "y": -40, "w": 34, "h": 95, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 8, "y": 8, "r1": 39, "r2": 19 }]
    },
    {
      "id": "bare-tree-3",
      "name": "Snowy Bare Tree",
      "scaleMultip": 0.27,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/trees/tree_bare_3.png",
      "rectColliders": [{ "x": -3, "y": -40, "w": 34, "h": 95, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -3, "y": 10, "r1": 41, "r2": 17 }]
    },
    {
      "id": "snow-log-horizontal",
      "name": "Snowy Log (Horizontal)",
      "scaleMultip": 0.31,
      "originX": 0.5,
      "originY": 0.96,
      "imageUrl": "props/logs/snow/log_horizontal.png",
      "rectColliders": [{ "x": 0, "y": -17, "w": 180, "h": 40, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -5, "r1": 105, "r2": 22 }]
    },
    {
      "id": "snow-log-vertical",
      "name": "Snowy Log (Vertical)",
      "scaleMultip": 0.31,
      "originX": 0.5,
      "originY": 0.3,
      "imageUrl": "props/logs/snow/log_vertical.png",
      "rectColliders": [{ "x": 0, "y": 50, "w": 55, "h": 165, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 62, "r1": 43, "r2": 85 }]
    },
    {
      "id": "snow-log-group-vertical",
      "name": "Snowy Log (Vertical)",
      "scaleMultip": 0.4,
      "originX": 0.5,
      "originY": 0.26,
      "imageUrl": "props/logs/snow/log_group_vertical.png",
      "rectColliders": [{ "x": 0, "y": 85, "w": 115, "h": 215, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 104, "r1": 82, "r2": 134 }]
    },
    {
      "id": "snow-tree-1",
      "name": "Snowy Tree",
      "scaleMultip": 0.36,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "props/trees/tree_snow_1.png",
      "rectColliders": [{ "x": -2, "y": -17, "w": 55, "h": 58, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -2, "y": 4, "r1": 49, "r2": 20 }]
    },
    {
      "id": "snow-tree-2",
      "name": "Snowy Tree",
      "scaleMultip": 0.33,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "props/trees/tree_snow_2.png",
      "rectColliders": [{ "x": -1, "y": -15, "w": 51, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 9, "r1": 59, "r2": 25 }]
    },
    {
      "id": "snow-tree-1-dark",
      "name": "Snowy Tree",
      "scaleMultip": 0.36,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "props/trees/tree_snow_1_dark.png",
      "rectColliders": [{ "x": -2, "y": -17, "w": 55, "h": 58, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -2, "y": 4, "r1": 49, "r2": 20 }]
    },
    {
      "id": "snow-tree-3-dark",
      "name": "Snowy Tree",
      "scaleMultip": 0.33,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "props/trees/tree_snow_3_dark.png",
      "rectColliders": [{ "x": -1, "y": -15, "w": 51, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -2, "y": 9, "r1": 59, "r2": 24 }]
    },
    {
      "id": "snow-tree-2-dark",
      "name": "Snowy Tree",
      "scaleMultip": 0.33,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "props/trees/tree_snow_2_dark.png",
      "rectColliders": [{ "x": -1, "y": -15, "w": 51, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 9, "r1": 59, "r2": 25 }]
    },
    {
      "id": "snow-tree-3",
      "name": "Snowy Tree",
      "scaleMultip": 0.33,
      "originX": 0.5,
      "originY": 0.93,
      "imageUrl": "props/trees/tree_snow_3.png",
      "rectColliders": [{ "x": -1, "y": -15, "w": 51, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -2, "y": 9, "r1": 59, "r2": 24 }]
    },
    {
      "id": "space/beds/blue",
      "name": "Space Bed (Blue)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.68,
      "imageUrl": "props/space/beds/blue.png",
      "rectColliders": [{ "x": 0, "y": 6, "w": 200, "h": 79, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 27, "r1": 124, "r2": 45 }]
    },
    {
      "id": "space/beds/green",
      "name": "Space Bed (Green)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.68,
      "imageUrl": "props/space/beds/green.png",
      "rectColliders": [{ "x": 0, "y": 6, "w": 200, "h": 79, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 27, "r1": 124, "r2": 45 }]
    },
    {
      "id": "space/beds/purple",
      "name": "Space Bed (Purple)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.68,
      "imageUrl": "props/space/beds/purple.png",
      "rectColliders": [{ "x": 0, "y": 6, "w": 200, "h": 79, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 27, "r1": 124, "r2": 45 }]
    },
    {
      "id": "space/beds/red",
      "name": "Space Bed (Red)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.68,
      "imageUrl": "props/space/beds/red.png",
      "rectColliders": [{ "x": 0, "y": 6, "w": 200, "h": 79, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 27, "r1": 124, "r2": 45 }]
    },
    {
      "id": "space/beds/yellow",
      "name": "Space Bed (Yellow)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.68,
      "imageUrl": "props/space/beds/yellow.png",
      "rectColliders": [{ "x": 0, "y": 6, "w": 200, "h": 79, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 27, "r1": 124, "r2": 45 }]
    },
    {
      "id": "Space Rover",
      "name": "Space Rover",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/space_props/rover.png",
      "rectColliders": [{ "x": 0, "y": 20, "w": 190, "h": 150, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 27, "r1": 120, "r2": 101 }]
    },
    {
      "id": "Space Telescope",
      "name": "Space Telescope",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/space_props/telescope.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -24, "r1": 45, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -14, "r1": 50, "r2": 23 }]
    },
    {
      "id": "Space Trash 4",
      "name": "Space Trash",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/space_props/trash_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -9, "r1": 30, "r2": 10, "angle": 0 }],
      "shadows": []
    },
    {
      "id": "Space Trash 9",
      "name": "Space Trash",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/space_props/trash_9.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": -5, "y": -15, "r1": 50, "r2": 15, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "Space Trash 10",
      "name": "Space Trash",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/space_props/trash_10.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Space Trash 1",
      "name": "Space Trash",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/space_props/trash_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Space Trash 8",
      "name": "Space Trash",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/space_props/trash_8.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Space Trash 6",
      "name": "Space Trash",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/space_props/trash_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": -9, "r1": 30, "r2": 10, "angle": 0 }],
      "shadows": []
    },
    {
      "id": "Space Trash 3",
      "name": "Space Trash",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/space_props/trash_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": -5, "y": -9, "r1": 20, "r2": 8, "angle": 0 }],
      "shadows": []
    },
    {
      "id": "Space Trash 2",
      "name": "Space Trash",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/space_props/trash_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Space Trash 7",
      "name": "Space Trash",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/space_props/trash_7.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -14, "r1": 40, "r2": 10, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "Space Trash 5",
      "name": "Space Trash",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/space_props/trash_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Spacerock Patch 1",
      "name": "Spacerock Patch 1",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/spacerock_patch_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Spacerock Patch 2",
      "name": "Spacerock Patch 2",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/spacerock_patch_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Spacerock Patch 3",
      "name": "Spacerock Patch 3",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/spacerock_patch_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Spacerock Patch 4",
      "name": "Spacerock Patch 4",
      "scaleMultip": 1,
      "minimumRoleLevel": 90,
      "defaultLayer": "DevicesUnderCharacters",
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/patches/spacerock_patch_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "barriers/scifi_barrier_2",
      "name": "Spaceship Barrier (Horizontal)",
      "scaleMultip": 0.43,
      "originX": 0.5,
      "originY": 0.6,
      "imageUrl": "props/barriers/scifi_barrier_2.png",
      "rectColliders": [{ "x": 0, "y": 4, "w": 193, "h": 99, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 11, "r1": 113, "r2": 77 }]
    },
    {
      "id": "barriers/scifi_barrier_1",
      "name": "Spaceship Barrier (Vertical)",
      "scaleMultip": 0.43,
      "originX": 0.5,
      "originY": 0.4,
      "imageUrl": "props/barriers/scifi_barrier_1.png",
      "rectColliders": [{ "x": 0, "y": 43, "w": 95, "h": 181, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 54, "r1": 64, "r2": 106 }]
    },
    {
      "id": "spacesuit_cabinet/spacesuit_cabinet_1",
      "name": "Spacesuit Cabinet",
      "scaleMultip": 0.23,
      "originX": 0.5,
      "originY": 0.96,
      "imageUrl": "props/spacesuit_cabinet/spacesuit_cabinet_1.png",
      "rectColliders": [{ "x": 0, "y": -65, "w": 105, "h": 130, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 72, "r2": 22 }]
    },
    {
      "id": "spacesuit_cabinet/spacesuit_cabinet_2",
      "name": "Spacesuit Cabinet",
      "scaleMultip": 0.23,
      "originX": 0.5,
      "originY": 0.96,
      "imageUrl": "props/spacesuit_cabinet/spacesuit_cabinet_2.png",
      "rectColliders": [{ "x": 0, "y": -65, "w": 105, "h": 130, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 72, "r2": 22 }]
    },
    {
      "id": "Spider",
      "name": "Spider",
      "scaleMultip": 0.24,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/bugs/spider.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 24, "r2": 15 }]
    },
    {
      "id": "dishes/spoon",
      "name": "Spoon",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/dishes/spoon.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "stadium/ads_base",
      "name": "Stadium Ad Base",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/stadium/ads_base.png",
      "rectColliders": [{ "x": 0, "y": -24, "w": 177, "h": 60, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -14, "r1": 105, "r2": 45 }]
    },
    {
      "id": "stadium/bench_2",
      "name": "Stadium Bench (Blue)",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/stadium/bench_2.png",
      "rectColliders": [{ "x": 0, "y": -76, "w": 470, "h": 190, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -38, "r1": 265, "r2": 110 }]
    },
    {
      "id": "stadium/bench_4",
      "name": "Stadium Bench (Grey)",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/stadium/bench_4.png",
      "rectColliders": [{ "x": 0, "y": -76, "w": 470, "h": 190, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -38, "r1": 265, "r2": 110 }]
    },
    {
      "id": "stadium/bench_3",
      "name": "Stadium Bench (Purple)",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/stadium/bench_3.png",
      "rectColliders": [{ "x": 0, "y": -76, "w": 470, "h": 190, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -38, "r1": 265, "r2": 110 }]
    },
    {
      "id": "stadium/bench_1",
      "name": "Stadium Bench (Red)",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.92,
      "imageUrl": "props/stadium/bench_1.png",
      "rectColliders": [{ "x": 0, "y": -76, "w": 470, "h": 190, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -38, "r1": 265, "r2": 110 }]
    },
    {
      "id": "medieval/stone_column/dark_gray/2",
      "name": "Stone Column (Dark Gray)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/dark_gray/2.png",
      "rectColliders": [{ "x": 0, "y": -6, "w": 88, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 70, "r2": 46 }]
    },
    {
      "id": "medieval/stone_column/dark_gray/4",
      "name": "Stone Column (Dark Gray)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/dark_gray/4.png",
      "rectColliders": [{ "x": 0, "y": -23, "w": 87, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 1, "r1": 67, "r2": 38 }]
    },
    {
      "id": "medieval/stone_column/dark_gray/1",
      "name": "Stone Column (Dark Gray)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/dark_gray/1.png",
      "rectColliders": [{ "x": 0, "y": -6, "w": 88, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 70, "r2": 46 }]
    },
    {
      "id": "medieval/stone_column/dark_gray/3",
      "name": "Stone Column (Dark Gray)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/dark_gray/3.png",
      "rectColliders": [{ "x": 0, "y": -18, "w": 88, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 1, "r1": 67, "r2": 38 }]
    },
    {
      "id": "medieval/stone_column/gray/2",
      "name": "Stone Column (Gray)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/gray/2.png",
      "rectColliders": [{ "x": 0, "y": -6, "w": 88, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 70, "r2": 46 }]
    },
    {
      "id": "medieval/stone_column/gray/4",
      "name": "Stone Column (Gray)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/gray/4.png",
      "rectColliders": [{ "x": 0, "y": -23, "w": 87, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 1, "r1": 67, "r2": 38 }]
    },
    {
      "id": "medieval/stone_column/gray/1",
      "name": "Stone Column (Gray)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/gray/1.png",
      "rectColliders": [{ "x": 0, "y": -6, "w": 88, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 70, "r2": 46 }]
    },
    {
      "id": "medieval/stone_column/gray/3",
      "name": "Stone Column (Gray)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/gray/3.png",
      "rectColliders": [{ "x": 0, "y": -18, "w": 88, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 1, "r1": 67, "r2": 38 }]
    },
    {
      "id": "medieval/stone_column/green/2",
      "name": "Stone Column (Green)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/green/2.png",
      "rectColliders": [{ "x": 0, "y": -6, "w": 88, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 70, "r2": 46 }]
    },
    {
      "id": "medieval/stone_column/green/4",
      "name": "Stone Column (Green)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/green/4.png",
      "rectColliders": [{ "x": 0, "y": -23, "w": 87, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 1, "r1": 67, "r2": 38 }]
    },
    {
      "id": "medieval/stone_column/green/1",
      "name": "Stone Column (Green)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/green/1.png",
      "rectColliders": [{ "x": 0, "y": -6, "w": 88, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 70, "r2": 46 }]
    },
    {
      "id": "medieval/stone_column/green/3",
      "name": "Stone Column (Green)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/green/3.png",
      "rectColliders": [{ "x": 0, "y": -18, "w": 88, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 1, "r1": 67, "r2": 38 }]
    },
    {
      "id": "medieval/stone_column/purple/2",
      "name": "Stone Column (Purple)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/purple/2.png",
      "rectColliders": [{ "x": 0, "y": -6, "w": 88, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 70, "r2": 46 }]
    },
    {
      "id": "medieval/stone_column/purple/4",
      "name": "Stone Column (Purple)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/purple/4.png",
      "rectColliders": [{ "x": 0, "y": -23, "w": 87, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 1, "r1": 67, "r2": 38 }]
    },
    {
      "id": "medieval/stone_column/purple/1",
      "name": "Stone Column (Purple)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/purple/1.png",
      "rectColliders": [{ "x": 0, "y": -6, "w": 88, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 5, "r1": 70, "r2": 46 }]
    },
    {
      "id": "medieval/stone_column/purple/3",
      "name": "Stone Column (Purple)",
      "scaleMultip": 0.22,
      "originX": 0.5,
      "originY": 0.89,
      "imageUrl": "props/medieval/stone_column/purple/3.png",
      "rectColliders": [{ "x": 0, "y": -18, "w": 88, "h": 76, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 1, "r1": 67, "r2": 38 }]
    },
    {
      "id": "Stool Vortex",
      "name": "Stool",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/stools/stool_vortex.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -30, "r": 40 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -21, "r1": 51, "r2": 34 }]
    },
    {
      "id": "Stool Echo",
      "name": "Stool",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/stools/stool_echo.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -30, "r": 40 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -21, "r1": 51, "r2": 34 }]
    },
    {
      "id": "Storage Container",
      "name": "Storage Container",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/workshop/storage_container.png",
      "rectColliders": [{ "x": 0, "y": -74, "w": 192, "h": 150, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -33, "r1": 100, "r2": 53 }]
    },
    {
      "id": "mining/stovetop",
      "name": "Stovetop",
      "scaleMultip": 0.17,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.97,
      "imageUrl": "props/mining/stovetop.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -1, "r1": 21, "r2": 8 }]
    },
    {
      "id": "Log 1",
      "name": "Stump",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/logs/log_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -29, "r1": 60, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -26, "r1": 71, "r2": 32 }]
    },
    {
      "id": "Log 2",
      "name": "Stump",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/logs/log_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -29, "r1": 60, "r2": 25, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -26, "r1": 71, "r2": 32 }]
    },
    {
      "id": "snow-stump",
      "name": "Stump (Snowy)",
      "scaleMultip": 0.27,
      "originX": 0.5,
      "originY": 0.78,
      "imageUrl": "props/logs/snow/stump.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -12, "r1": 60, "r2": 20, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -8, "r1": 65, "r2": 29 }]
    },
    {
      "id": "medieval/blacksmith/sword_stone",
      "name": "Sword Stone",
      "scaleMultip": 0.15,
      "originX": 0.5,
      "originY": 0.65,
      "imageUrl": "props/medieval/blacksmith/sword_stone.png",
      "rectColliders": [{ "x": 0, "y": 4, "w": 161, "h": 52, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 10, "r1": 104, "r2": 43 }]
    },
    {
      "id": "Table 3",
      "name": "Table",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/tables/table_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": 0, "r1": 150, "r2": 125, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 40, "r1": 160, "r2": 110 }]
    },
    {
      "id": "Table 1",
      "name": "Table",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/tables/table_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": 0, "r1": 150, "r2": 125, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 40, "r1": 160, "r2": 110 }]
    },
    {
      "id": "Rect_Table 1",
      "name": "Table",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/tables/rectangular_table_1.png",
      "rectColliders": [
        { "x": 0, "y": -10, "w": 263, "h": 110, "angle": 0 },
        { "x": -123, "y": 67, "w": 18, "h": 40, "angle": 0 },
        { "x": 123, "y": 67, "w": 18, "h": 40, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 58, "r1": 153, "r2": 72 }]
    },
    {
      "id": "Table 2",
      "name": "Table",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/tables/table_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": 0, "r1": 150, "r2": 125, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 40, "r1": 160, "r2": 110 }]
    },
    {
      "id": "Table 4",
      "name": "Table",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/tables/table_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": 0, "r1": 150, "r2": 125, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": 40, "r1": 160, "r2": 110 }]
    },
    {
      "id": "Rect_Table 2",
      "name": "Table",
      "scaleMultip": 0.18,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/tables/rectangular_table_2.png",
      "rectColliders": [
        { "x": 0, "y": -10, "w": 263, "h": 110, "angle": 0 },
        { "x": -123, "y": 67, "w": 18, "h": 40, "angle": 0 },
        { "x": 123, "y": 67, "w": 18, "h": 40, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 58, "r1": 153, "r2": 72 }]
    },
    {
      "id": "plants/tall_plant_barrier",
      "name": "Tall Plant Barrier",
      "scaleMultip": 0.5,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/plants/tall_plant_barrier.png",
      "rectColliders": [{ "x": -6, "y": 0, "w": 195, "h": 640, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "mining/teapot",
      "name": "Teapot",
      "scaleMultip": 0.17,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 0.88,
      "imageUrl": "props/mining/teapot.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 3, "y": 0, "r1": 20, "r2": 10 }]
    },
    {
      "id": "TV Off",
      "name": "Television",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/tv_off.png",
      "rectColliders": [
        { "x": -2, "y": -10, "w": 102, "h": 40, "angle": 0 },
        { "x": 0, "y": -98, "w": 258, "h": 140, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -6, "r1": 126, "r2": 31 }]
    },
    {
      "id": "TV On",
      "name": "Television",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/office/tv_on.png",
      "rectColliders": [
        { "x": -2, "y": -10, "w": 102, "h": 40, "angle": 0 },
        { "x": 0, "y": -98, "w": 258, "h": 140, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -6, "r1": 126, "r2": 31 }]
    },
    {
      "id": "mining/tent",
      "name": "Tent",
      "scaleMultip": 0.3,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/tent.png",
      "rectColliders": [
        { "x": 0, "y": -10, "w": 345, "h": 18, "angle": 0 },
        { "x": -142, "y": -42, "w": 19, "h": 59, "angle": 28 },
        { "x": -4, "y": -68, "w": 264, "h": 24, "angle": 0 },
        { "x": 141, "y": -44, "w": 17, "h": 73, "angle": -32 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -13, "r1": 197, "r2": 42 }]
    },
    {
      "id": "Theatre Seat",
      "name": "Theater Chair",
      "scaleMultip": 0.3,
      "originX": 0.5,
      "originY": 0.95,
      "imageUrl": "props/chairs/theatre_seat.png",
      "rectColliders": [{ "x": 8, "y": -39, "w": 98, "h": 90, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 8, "y": -29, "r1": 83, "r2": 56 }]
    },
    {
      "id": "Tire",
      "name": "Tire",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/workshop/tire.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -44, "r1": 65, "r2": 45, "angle": 0 }
      ],
      "shadows": [{ "x": 0, "y": -30, "r1": 80, "r2": 37 }]
    },
    {
      "id": "medieval/blacksmith/tongs",
      "name": "Tongs",
      "scaleMultip": 0.08,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/blacksmith/tongs.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Toolbox",
      "name": "Toolbox",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/workshop/toolbox.png",
      "rectColliders": [{ "x": 0, "y": -64, "w": 125, "h": 130, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -20, "r1": 80, "r2": 42 }]
    },
    {
      "id": "mining/town_hall",
      "name": "Town Hall",
      "scaleMultip": 0.25,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/town_hall.png",
      "rectColliders": [{ "x": 0, "y": -220, "w": 245, "h": 435, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -10, "r1": 157, "r2": 51 }]
    },
    {
      "id": "mining/town_sign",
      "name": "Town Sign",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/town_sign.png",
      "rectColliders": [
        { "x": 0, "y": -75, "w": 170, "h": 75, "angle": 0 },
        { "x": -53, "y": -25, "w": 23, "h": 50, "angle": 0 },
        { "x": 62, "y": -30, "w": 23, "h": 60, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 3, "y": -5, "r1": 85, "r2": 25 }]
    },
    {
      "id": "tractor",
      "name": "Tractor",
      "scaleMultip": 0.29,
      "originX": 0.5,
      "originY": 0.73,
      "imageUrl": "props/farm/tractor.png",
      "rectColliders": [
        { "x": -10, "y": -40, "w": 225, "h": 100, "angle": 0 },
        { "x": -130, "y": -45, "w": 20, "h": 60, "angle": 5 }
      ],
      "circleColliders": [
        { "x": -84, "y": 18, "r": 44 },
        { "x": 81, "y": 0, "r": 60 }
      ],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 13, "r1": 163, "r2": 61 }]
    },
    {
      "id": "Bin",
      "name": "Trash Bin",
      "scaleMultip": 0.3,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/office/bin.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -30, "r": 30 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -6, "r1": 34, "r2": 15 }]
    },
    {
      "id": "Tree Dry 2",
      "name": "Tree (Dry)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_dry_2.png",
      "rectColliders": [{ "x": 0, "y": -39, "w": 30, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -6, "r1": 58, "r2": 20 }]
    },
    {
      "id": "Tree Dry 1",
      "name": "Tree (Dry)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_dry_1.png",
      "rectColliders": [{ "x": -4, "y": -49, "w": 30, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -5, "y": -6, "r1": 58, "r2": 20 }]
    },
    {
      "id": "Tree Dry 3",
      "name": "Tree (Dry)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_dry_3.png",
      "rectColliders": [{ "x": -3, "y": -50, "w": 27, "h": 95, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -4, "r1": 59, "r2": 22 }]
    },
    {
      "id": "Tree Green 1",
      "name": "Tree (Green)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_green_1.png",
      "rectColliders": [{ "x": -4, "y": -49, "w": 30, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -5, "y": -6, "r1": 58, "r2": 20 }]
    },
    {
      "id": "Tree Green 3",
      "name": "Tree (Green)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_green_3.png",
      "rectColliders": [{ "x": -3, "y": -50, "w": 27, "h": 95, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -4, "r1": 59, "r2": 22 }]
    },
    {
      "id": "Tree Green 2",
      "name": "Tree (Green)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_green_2.png",
      "rectColliders": [{ "x": 0, "y": -39, "w": 30, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -6, "r1": 58, "r2": 20 }]
    },
    {
      "id": "Tree Pink 1",
      "name": "Tree (Pink)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_pink_1.png",
      "rectColliders": [{ "x": -4, "y": -49, "w": 30, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -5, "y": -6, "r1": 58, "r2": 20 }]
    },
    {
      "id": "Tree Pink 2",
      "name": "Tree (Pink)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_pink_2.png",
      "rectColliders": [{ "x": 0, "y": -39, "w": 30, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -6, "r1": 58, "r2": 20 }]
    },
    {
      "id": "Tree Pink 3",
      "name": "Tree (Pink)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_pink_3.png",
      "rectColliders": [{ "x": -3, "y": -50, "w": 27, "h": 95, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -4, "r1": 59, "r2": 22 }]
    },
    {
      "id": "Tree Purple 2",
      "name": "Tree (Purple)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_purple_2.png",
      "rectColliders": [{ "x": 0, "y": -39, "w": 30, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -6, "r1": 58, "r2": 20 }]
    },
    {
      "id": "Tree Purple 1",
      "name": "Tree (Purple)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_purple_1.png",
      "rectColliders": [{ "x": -4, "y": -49, "w": 30, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -5, "y": -6, "r1": 58, "r2": 20 }]
    },
    {
      "id": "Tree Purple 3",
      "name": "Tree (Purple)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_purple_3.png",
      "rectColliders": [{ "x": -3, "y": -50, "w": 27, "h": 95, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -4, "r1": 59, "r2": 22 }]
    },
    {
      "id": "Tree Red 1",
      "name": "Tree (Red)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_red_1.png",
      "rectColliders": [{ "x": -4, "y": -49, "w": 30, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -5, "y": -6, "r1": 58, "r2": 20 }]
    },
    {
      "id": "Tree Red 2",
      "name": "Tree (Red)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_red_2.png",
      "rectColliders": [{ "x": 0, "y": -39, "w": 30, "h": 70, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -6, "r1": 58, "r2": 20 }]
    },
    {
      "id": "Tree Red 3",
      "name": "Tree (Red)",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/trees/tree_red_3.png",
      "rectColliders": [{ "x": -3, "y": -50, "w": 27, "h": 95, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -4, "r1": 59, "r2": 22 }]
    },
    {
      "id": "mining/vendor_stand_blue",
      "name": "Vendor Stand (Blue)",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/vendor_stand_blue.png",
      "rectColliders": [{ "x": 3, "y": -80, "w": 221, "h": 155, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 5, "y": -13, "r1": 123, "r2": 30 }]
    },
    {
      "id": "mining/vendor_stand_green",
      "name": "Vendor Stand (Green)",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/vendor_stand_green.png",
      "rectColliders": [{ "x": 3, "y": -80, "w": 221, "h": 155, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 5, "y": -13, "r1": 123, "r2": 30 }]
    },
    {
      "id": "mining/vendor_stand_purple",
      "name": "Vendor Stand (Purple)",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/vendor_stand_purple.png",
      "rectColliders": [{ "x": 3, "y": -80, "w": 221, "h": 155, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 5, "y": -13, "r1": 123, "r2": 30 }]
    },
    {
      "id": "mining/vendor_stand_red",
      "name": "Vendor Stand (Red)",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/vendor_stand_red.png",
      "rectColliders": [{ "x": 3, "y": -80, "w": 221, "h": 155, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 5, "y": -13, "r1": 123, "r2": 30 }]
    },
    {
      "id": "mining/vendor_stand_yellow",
      "name": "Vendor Stand (Yellow)",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/vendor_stand_yellow.png",
      "rectColliders": [{ "x": 3, "y": -80, "w": 221, "h": 155, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 5, "y": -13, "r1": 123, "r2": 30 }]
    },
    {
      "id": "medieval/beds/blue_vertical",
      "name": "Vertical Medieval Bed (Blue)",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.32,
      "imageUrl": "props/medieval/beds/blue_vertical.png",
      "rectColliders": [{ "x": 0, "y": 61, "w": 103, "h": 142, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 87, "r1": 75, "r2": 93 }]
    },
    {
      "id": "space/beds/blue_vertical",
      "name": "Vertical Space Bed (Blue)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.36,
      "imageUrl": "props/space/beds/blue_vertical.png",
      "rectColliders": [{ "x": 0, "y": 39, "w": 101, "h": 170, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 70, "r1": 75, "r2": 90 }]
    },
    {
      "id": "space/beds/green_vertical",
      "name": "Vertical Space Bed (Green)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.36,
      "imageUrl": "props/space/beds/green_vertical.png",
      "rectColliders": [{ "x": 0, "y": 39, "w": 101, "h": 170, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 70, "r1": 75, "r2": 90 }]
    },
    {
      "id": "space/beds/purple_vertical",
      "name": "Vertical Space Bed (Purple)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.36,
      "imageUrl": "props/space/beds/purple_vertical.png",
      "rectColliders": [{ "x": 0, "y": 39, "w": 101, "h": 170, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 70, "r1": 75, "r2": 90 }]
    },
    {
      "id": "space/beds/red_vertical",
      "name": "Vertical Space Bed (Red)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.36,
      "imageUrl": "props/space/beds/red_vertical.png",
      "rectColliders": [{ "x": 0, "y": 39, "w": 101, "h": 170, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 70, "r1": 75, "r2": 90 }]
    },
    {
      "id": "space/beds/yellow_vertical",
      "name": "Vertical Space Bed (Yellow)",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.36,
      "imageUrl": "props/space/beds/yellow_vertical.png",
      "rectColliders": [{ "x": 0, "y": 39, "w": 101, "h": 170, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 70, "r1": 75, "r2": 90 }]
    },
    {
      "id": "science_lab/vial_infected_2",
      "name": "Vial (Infected)",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/science_lab/vial_infected_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -3, "r1": 20, "r2": 8 }]
    },
    {
      "id": "science_lab/vial_infected_1",
      "name": "Vial (Infected)",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/science_lab/vial_infected_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -3, "r1": 24, "r2": 8 }]
    },
    {
      "id": "science_lab/vial_infected_3",
      "name": "Vial (Infected)",
      "scaleMultip": 0.25,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/science_lab/vial_infected_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -3, "r1": 24, "r2": 8 }]
    },
    {
      "id": "Water Dispenser",
      "name": "Water Dispenser",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/office/water_dispenser.png",
      "rectColliders": [{ "x": 0, "y": -79, "w": 85, "h": 160, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -22, "r1": 55, "r2": 46 }]
    },
    {
      "id": "water well",
      "name": "Water Well",
      "scaleMultip": 0.38,
      "originX": 0.5,
      "originY": 0.94,
      "imageUrl": "props/farm/water_well.png",
      "rectColliders": [
        { "x": -89, "y": -35, "w": 30, "h": 60, "angle": 0 },
        { "x": 111, "y": -35, "w": 30, "h": 60, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 12, "y": -60, "r1": 83, "r2": 75, "angle": 0 }
      ],
      "shadows": [{ "x": 10, "y": -17, "r1": 151, "r2": 43 }]
    },
    {
      "id": "medieval/blacksmith/oven",
      "name": "Wood Fired Oven",
      "scaleMultip": 0.23,
      "originX": 0.5,
      "originY": 0.78,
      "imageUrl": "props/medieval/blacksmith/oven.png",
      "rectColliders": [{ "x": 0, "y": -11, "w": 230, "h": 130, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 31, "r1": 144, "r2": 50 }]
    },
    {
      "id": "Wooden-Bench",
      "name": "Wooden Bench",
      "scaleMultip": 0.34,
      "originX": 0.5,
      "originY": 0.59,
      "imageUrl": "props/park/wooden_bench.png",
      "rectColliders": [
        { "x": 0, "y": 3, "w": 273, "h": 58, "angle": 0 },
        { "x": -124, "y": 48, "w": 18, "h": 35, "angle": 0 },
        { "x": 124, "y": 48, "w": 18, "h": 35, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 54, "r1": 149, "r2": 39 }]
    },
    {
      "id": "farm_wooden_bench",
      "name": "Wooden Bench",
      "scaleMultip": 0.38,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/farm/wooden_bench.png",
      "rectColliders": [{ "x": 0, "y": -10, "w": 250, "h": 43, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 27, "r1": 131, "r2": 38 }]
    },
    {
      "id": "medieval/kitchen/bowl",
      "name": "Wooden Bowl",
      "scaleMultip": 0.1,
      "originX": 0.5,
      "originY": 0.79,
      "imageUrl": "props/medieval/kitchen/bowl.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 1, "r1": 13, "r2": 6, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 0, "r1": 21, "r2": 11 }]
    },
    {
      "id": "medieval/wooden_bucket",
      "name": "Wooden Bucket",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.78,
      "imageUrl": "props/medieval/wooden_bucket.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [{ "x": 0, "y": 2, "r1": 18, "r2": 10, "angle": 0 }],
      "shadows": [{ "x": 0, "y": 0, "r1": 34, "r2": 21 }]
    },
    {
      "id": "medieval/wooden_chair-sideways",
      "name": "Wooden Chair",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/medieval/wooden_chair-sideways.png",
      "rectColliders": [{ "x": 0, "y": 23, "w": 86, "h": 60, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -8, "y": 36, "r1": 57, "r2": 25 }]
    },
    {
      "id": "medieval/wooden_chair",
      "name": "Wooden Chair",
      "scaleMultip": 0.17,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/medieval/wooden_chair.png",
      "rectColliders": [{ "x": 0, "y": 20, "w": 84, "h": 68, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 37, "r1": 56, "r2": 28 }]
    },
    {
      "id": "Box Wooden",
      "name": "Wooden Crate",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/boxes/box_wooden.png",
      "rectColliders": [{ "x": 0, "y": -49, "w": 140, "h": 100, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -2, "r1": 88, "r2": 23 }]
    },
    {
      "id": "Horizontal Wooden Fence Single",
      "name": "Wooden Fence (Horizontal)",
      "scaleMultip": 0.345,
      "originX": 0.5,
      "originY": 0.82,
      "imageUrl": "props/farm/wooden_fence/horizontal_single.png",
      "rectColliders": [{ "x": 0, "y": -15, "w": 110, "h": 30, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 9, "r1": 73, "r2": 15 }]
    },
    {
      "id": "Horizontal Wooden Fence",
      "name": "Wooden Fence (Horizontal)",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 0.82,
      "imageUrl": "props/farm/wooden_fence/horizontal.png",
      "rectColliders": [{ "x": 0, "y": -15, "w": 320, "h": 35, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 8, "r1": 177, "r2": 21 }]
    },
    {
      "id": "Vertical Wooden Fence Single",
      "name": "Wooden Fence (Vertical)",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/farm/wooden_fence/vertical_single.png",
      "rectColliders": [{ "x": 0, "y": -70, "w": 30, "h": 140, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 1, "y": -40, "r1": 19, "r2": 50 }]
    },
    {
      "id": "Vertical Wooden Fence",
      "name": "Wooden Fence (Vertical)",
      "scaleMultip": 0.35,
      "originX": 0.5,
      "originY": 0.98,
      "imageUrl": "props/farm/wooden_fence/vertical.png",
      "rectColliders": [{ "x": 0, "y": -130, "w": 30, "h": 265, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -84, "r1": 23, "r2": 98 }]
    },
    {
      "id": "Long Log 3",
      "name": "Wooden Log",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/logs/log_3.png",
      "rectColliders": [{ "x": 0, "y": -14, "w": 180, "h": 30, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -6, "r1": 102, "r2": 22 }]
    },
    {
      "id": "Long Log 4",
      "name": "Wooden Log",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/logs/log_4.png",
      "rectColliders": [{ "x": 0, "y": -14, "w": 180, "h": 30, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -6, "r1": 102, "r2": 22 }]
    },
    {
      "id": "medieval/kitchen/empty_plate",
      "name": "Wooden Plate",
      "scaleMultip": 0.12,
      "originX": 0.5,
      "originY": 0.28,
      "imageUrl": "props/medieval/kitchen/empty_plate.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Pole 1",
      "name": "Wooden Pole 1",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/pole_1.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -15, "r": 20 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -4, "r1": 23, "r2": 11 }]
    },
    {
      "id": "Pole 2",
      "name": "Wooden Pole 2",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/pole_2.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -15, "r": 20 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -4, "r1": 23, "r2": 12 }]
    },
    {
      "id": "Pole 3",
      "name": "Wooden Pole 3",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/signs/pole_3.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -15, "r": 20 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -3, "r1": 23, "r2": 12 }]
    },
    {
      "id": "Sign 2",
      "name": "Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_2.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign 3",
      "name": "Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_3.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign 7",
      "name": "Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_7.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign 8",
      "name": "Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_8.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign 10",
      "name": "Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_10.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign 5",
      "name": "Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_5.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign 9",
      "name": "Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_9.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign 6",
      "name": "Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_6.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign 4",
      "name": "Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_4.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Sign 1",
      "name": "Wooden Sign",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 2,
      "imageUrl": "props/signs/sign_1.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "medieval/kitchen/SPOON_WOODEN",
      "name": "Wooden Spoon",
      "scaleMultip": 0.1,
      "originX": 0.5,
      "originY": 0,
      "imageUrl": "props/medieval/kitchen/SPOON_WOODEN.png",
      "rectColliders": [],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": []
    },
    {
      "id": "Stool Wood",
      "name": "Wooden Stool",
      "scaleMultip": 0.5,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/stools/stool_wood.png",
      "rectColliders": [],
      "circleColliders": [{ "x": 0, "y": -30, "r": 40 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": -21, "r1": 51, "r2": 34 }]
    },
    {
      "id": "medieval/wooden_table",
      "name": "Wooden Table",
      "scaleMultip": 0.26,
      "originX": 0.5,
      "originY": 0.72,
      "imageUrl": "props/medieval/wooden_table.png",
      "rectColliders": [
        { "x": 0, "y": -84, "w": 384, "h": 211, "angle": 0 },
        { "x": -163, "y": 24, "w": 46, "h": 101, "angle": 0 },
        { "x": 163, "y": 24, "w": 46, "h": 101, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 41, "r1": 227, "r2": 65 }]
    },
    {
      "id": "medieval/wooden_table_2",
      "name": "Wooden Table",
      "scaleMultip": 0.26,
      "originX": 0.5,
      "originY": 0.72,
      "imageUrl": "props/medieval/wooden_table_2.png",
      "rectColliders": [
        { "x": 0, "y": -84, "w": 384, "h": 211, "angle": 0 },
        { "x": -163, "y": 24, "w": 46, "h": 101, "angle": 0 },
        { "x": 163, "y": 24, "w": 46, "h": 101, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 41, "r1": 227, "r2": 65 }]
    },
    {
      "id": "medieval/wooden_table_vertical",
      "name": "Wooden Table (Vertical)",
      "scaleMultip": 0.26,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/medieval/wooden_table_vertical.png",
      "rectColliders": [
        { "x": 0, "y": -25, "w": 252, "h": 383, "angle": 0 },
        { "x": -99, "y": 169, "w": 47, "h": 100, "angle": 0 },
        { "x": 98, "y": 169, "w": 45, "h": 100, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -3, "y": 176, "r1": 168, "r2": 79 }]
    },
    {
      "id": "medieval/wooden_table_vertical_2",
      "name": "Wooden Table (Vertical)",
      "scaleMultip": 0.26,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/medieval/wooden_table_vertical_2.png",
      "rectColliders": [
        { "x": 0, "y": -25, "w": 252, "h": 383, "angle": 0 },
        { "x": -99, "y": 169, "w": 47, "h": 100, "angle": 0 },
        { "x": 98, "y": 169, "w": 45, "h": 100, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [],
      "shadows": [{ "x": -3, "y": 176, "r1": 168, "r2": 79 }]
    },
    {
      "id": "medieval/wagon/2",
      "name": "Wooden Wagon",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.67,
      "imageUrl": "props/medieval/wagon/2.png",
      "rectColliders": [{ "x": 6, "y": 9, "w": 242, "h": 34, "angle": -14 }],
      "circleColliders": [{ "x": 72, "y": 26, "r": 48 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 22, "r1": 154, "r2": 61 }]
    },
    {
      "id": "medieval/wagon/1",
      "name": "Wooden Wagon",
      "scaleMultip": 0.2,
      "originX": 0.5,
      "originY": 0.67,
      "imageUrl": "props/medieval/wagon/1.png",
      "rectColliders": [{ "x": 8, "y": 1, "w": 242, "h": 34, "angle": -11 }],
      "circleColliders": [{ "x": 75, "y": 12, "r": 48 }],
      "ellipseColliders": [],
      "shadows": [{ "x": 0, "y": 22, "r1": 154, "r2": 61 }]
    },
    {
      "id": "mining/wooden_wagon",
      "name": "Wooden Wagon",
      "scaleMultip": 0.15,
      "minimumRoleLevel": 90,
      "originX": 0.5,
      "originY": 1,
      "imageUrl": "props/mining/wooden_wagon.png",
      "rectColliders": [{ "x": -10, "y": -85, "w": 245, "h": 45, "angle": 0 }],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 0, "y": -50, "r1": 110, "r2": 50, "angle": 0 },
        { "x": 105, "y": -30, "r1": 40, "r2": 12, "angle": 40 }
      ],
      "shadows": [{ "x": 10, "y": -15, "r1": 140, "r2": 35 }]
    },
    {
      "id": "corner_sofa/corner_sofa_yellow_back",
      "name": "Yellow Corner Sofa (Back)",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.57,
      "imageUrl": "props/corner_sofa/corner_sofa_yellow_back.png",
      "rectColliders": [
        { "x": -45, "y": 38, "w": 115, "h": 105, "angle": 0 },
        { "x": 37, "y": -42, "w": 130, "h": 135, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 20, "y": 28, "r1": 83, "r2": 68, "angle": 0 }
      ],
      "shadows": []
    },
    {
      "id": "corner_sofa/corner_sofa_yellow_front",
      "name": "Yellow Corner Sofa (Front)",
      "scaleMultip": 0.16,
      "originX": 0.5,
      "originY": 0.5,
      "imageUrl": "props/corner_sofa/corner_sofa_yellow_front.png",
      "rectColliders": [
        { "x": -15, "y": -15, "w": 175, "h": 70, "angle": 0 },
        { "x": 25, "y": 60, "w": 90, "h": 100, "angle": 0 }
      ],
      "circleColliders": [],
      "ellipseColliders": [
        { "x": 65, "y": 30, "r1": 40, "r2": 79, "angle": 0 }
      ],
      "shadows": []
    }
  ],
  "deviceOptions": [
    {
      "id": "assignmentCheckpoint",
      "name": "Assignment Checkpoint",
      "description": "Update the percentage completion of an assignment!",
      "optionSchema": {
        "options": [
          {
            "key": "action",
            "option": {
              "label": "Action",
              "type": "select",
              "validators": [null],
              "defaultValue": "set",
              "props": {
                "options": [
                  { "name": "Set Percentage", "value": "set" },
                  { "name": "Increment Percentage", "value": "increment" },
                  { "name": "Decrement Percentage", "value": "decrement" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "actionValue",
            "option": {
              "label": "Value",
              "type": "numberInput",
              "validators": [null],
              "props": { "min": 0, "max": 100, "step": 1, "allowEmpty": true }
            }
          },
          {
            "key": "applyActionOnChannel",
            "option": {
              "label": "Apply action when receiving on channel...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": true,
        "triggers": [{ "type": "wire", "name": "On wire pulse..." }],
        "customBlocks": [
          "set_percentage_complete",
          "increment_percentage_complete"
        ]
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "applyAction", "name": "Apply Configured Action" },
            { "id": "codeGrid", "name": "Run wire pulse block" }
          ]
        }
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "assignmentContext",
      "name": "Assignment Context",
      "description": "Set the objective of an assignment!",
      "optionSchema": {
        "options": [
          {
            "key": "objective",
            "option": {
              "label": "Objective",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Reach the finish line..." }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [
          {
            "type": "WHEN_PLAYER_LOADS_IN",
            "name": "When player loads in...",
            "blockedGlobalBlocks": [
              "message_broadcaster",
              "set_property",
              "current_character_name",
              "add_activity_feed_item_for_everyone",
              "add_activity_feed_item_for_triggering_player",
              "add_activity_feed_item_for_game_host",
              "current_character_team_number",
              "triggering_player_score",
              "get_team_score",
              "is_a_live_game",
              "is_an_assignment",
              "seconds_into_game"
            ]
          }
        ],
        "customBlocks": ["set_assignment_objective"]
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "backgroundTilesZone",
      "name": "Background Tiles Zone",
      "optionSchema": {
        "options": [
          {
            "key": "terrainId",
            "option": {
              "label": "Terrain Id",
              "type": "terrainId",
              "props": { "allowEmpty": false },
              "validators": [null]
            }
          },
          {
            "key": "layer",
            "option": {
              "label": "Layer",
              "type": "select",
              "validators": [null],
              "defaultValue": "AdditionalBackground1",
              "props": {
                "options": [
                  { "name": "Background 1", "value": "AdditionalBackground1" },
                  { "name": "Background 2", "value": "AdditionalBackground2" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "width",
            "option": {
              "label": "Width",
              "type": "numberInput",
              "defaultValue": 320,
              "validators": [null],
              "props": { "step": 1, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Height",
              "type": "numberInput",
              "defaultValue": 320,
              "validators": [null],
              "props": { "step": 1, "allowEmpty": false },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "minimumRoleLevel": 90,
      "initialMemoryCost": 0,
      "subsequentMemoryCost": 0
    },
    {
      "id": "ball",
      "name": "Ball",
      "description": "A physics ball that can be moved by firing at it with a gadget",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "physics", "name": "Physics" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "appearance",
            "option": {
              "label": "Ball Appearance",
              "description": "Select the look of the ball",
              "type": "select",
              "validators": [null],
              "defaultValue": "primary",
              "props": {
                "options": [
                  { "value": "primary", "name": "Blastball" },
                  { "value": "inverted", "name": "Inverted Blastball" },
                  { "value": "blue", "name": "Blue" },
                  { "value": "green", "name": "Green" },
                  { "value": "purple", "name": "Purple" },
                  { "value": "red", "name": "Red" },
                  { "value": "solid", "name": "Solid" },
                  { "value": "teal", "name": "Teal" },
                  { "value": "yellow", "name": "Yellow" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "resetCooldown",
            "option": {
              "label": "Respawn Duration (Seconds)",
              "description": "When the ball respawns, how long (in seconds) does it take?",
              "type": "numberInput",
              "defaultValue": 3,
              "validators": [null],
              "props": { "min": 1, "max": 5, "step": 1, "allowEmpty": false }
            }
          },
          {
            "key": "topSpeed",
            "option": {
              "label": "Top Speed",
              "description": "Set how fast the ball can travel",
              "type": "select",
              "validators": [null],
              "defaultValue": 1500,
              "props": {
                "options": [
                  { "name": "Very Slow", "value": 500 },
                  { "name": "Slow", "value": 1000 },
                  { "name": "Normal", "value": 1500 },
                  { "name": "Fast", "value": 2000 },
                  { "name": "Very Fast", "value": 2500 }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["physics"]
          },
          {
            "key": "hitSensitivity",
            "option": {
              "label": "Hit Impact",
              "description": "How much do projectiles impact the velocity of the ball?",
              "type": "select",
              "validators": [null],
              "defaultValue": 1.5,
              "props": {
                "options": [
                  { "name": "Very Low", "value": 0.5 },
                  { "name": "Low", "value": 1 },
                  { "name": "Normal", "value": 1.5 },
                  { "name": "High", "value": 2 },
                  { "name": "Very High", "value": 2.5 }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["physics"]
          },
          {
            "key": "bounciness",
            "option": {
              "label": "Bounce",
              "description": "Set the bounciness of the ball (0 is no bounce, 100 is maximum bounce)",
              "type": "numberInput",
              "defaultValue": 70,
              "validators": [null],
              "props": { "min": 0, "max": 100, "step": 1, "allowEmpty": false }
            },
            "categories": ["physics"]
          },
          {
            "key": "damping",
            "option": {
              "label": "Friction",
              "description": "Set how quickly the ball slows down. (0 is no friction, 100 is maximum friction)",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": { "min": 0, "max": 100, "step": 1, "allowEmpty": false }
            },
            "categories": ["physics"]
          },
          {
            "key": "massMultiplier",
            "option": {
              "label": "Mass",
              "description": "Increasing the mass will make the ball harder to move. The size of the ball is also factored into the mass.",
              "type": "select",
              "validators": [null],
              "defaultValue": 1.5,
              "props": {
                "options": [
                  { "name": "Very Light", "value": 0.5 },
                  { "name": "Light", "value": 1 },
                  { "name": "Normal", "value": 1.5 },
                  { "name": "Heavy", "value": 2 },
                  { "name": "Very Heavy", "value": 2.5 }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["physics"]
          },
          {
            "key": "radius",
            "option": {
              "label": "Radius",
              "type": "numberInput",
              "defaultValue": 75,
              "validators": [null],
              "props": {
                "min": 45,
                "max": 200,
                "step": 1,
                "allowEmpty": false
              },
              "hidden": true
            }
          },
          {
            "key": "activeOnStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Is the ball spawned in when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the ball when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the ball when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "identifier",
            "option": {
              "label": "Identifier",
              "description": "Set a unique identifier for this ball, so it can be tracked by the Waypoint Device",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Enter ID...", "category": "ball-id" }
            }
          }
        ]
      },
      "defaultState": { "x": 0, "y": 0, "resetCount": 0, "active": false },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": { "connections": [] },
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate ball" },
            { "id": "deactivate", "name": "Deactivate ball" }
          ]
        }
      },
      "maxOnMap": 12,
      "initialMemoryCost": 1000,
      "subsequentMemoryCost": 1000,
      "supportedMapStyles": ["topDown"]
    },
    {
      "id": "ballZone",
      "name": "Ball Capture Zone",
      "description": "Detect when a ball enters an area",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "Featured", "name": "Featured" },
            { "id": "Appearance", "name": "Appearance" },
            { "name": "Channels", "id": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "resetTheBall",
            "option": {
              "label": "Respawn Ball",
              "type": "select",
              "description": "Should the ball respawn upon entering the zone?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Featured"]
          },
          {
            "key": "visibleInGame",
            "option": {
              "label": "Visible In-Game",
              "type": "select",
              "description": "Is the zone visible to players during the game?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Appearance"]
          },
          {
            "key": "style",
            "option": {
              "label": "Zone Style",
              "description": "The style of the zone",
              "type": "select",
              "validators": [null],
              "defaultValue": "None",
              "props": {
                "options": [
                  { "value": "None", "name": "None" },
                  { "value": "Blastball", "name": "Blastball Goal" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Featured", "Appearance"]
          },
          {
            "key": "side",
            "option": {
              "label": "Goal Side",
              "description": "Which side the goal faces",
              "type": "select",
              "validators": [null],
              "defaultValue": "Left",
              "props": {
                "options": [
                  { "value": "Left", "name": "Right" },
                  { "value": "Right", "name": "Left" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "style",
                    "compare": "NOT_EQUAL",
                    "value": "Blastball"
                  }
                ]
              ]
            },
            "categories": ["Featured", "Appearance"]
          },
          {
            "key": "color",
            "option": {
              "label": "Background Color",
              "type": "color",
              "defaultValue": "#FFFFFF",
              "validators": [null]
            },
            "categories": ["Appearance"]
          },
          {
            "key": "backgroundAlpha",
            "option": {
              "label": "Background Alpha",
              "description": "Set the transparency of the barrier. 0 is completely transparent, 1 is completely visible.",
              "type": "numberInput",
              "defaultValue": 0.2,
              "validators": [null],
              "props": { "min": 0, "max": 1, "step": 0.01, "allowEmpty": false }
            },
            "categories": ["Appearance"]
          },
          {
            "key": "activeOnStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Is the zone active when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "ballEntersChannel",
            "option": {
              "label": "When ball enters the zone, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When ball enters the zone, the device sends a signal on the selected channel"
            },
            "categories": ["Featured", "Channels"]
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate zone when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the zone when the device receives a signal from the selected channel"
            },
            "categories": ["Channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate zone when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the zone when the device receives a signal from the selected channel"
            },
            "categories": ["Channels"]
          },
          {
            "key": "width",
            "option": {
              "label": "Width",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": { "min": 250, "max": 2500, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Height",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": { "min": 250, "max": 2500, "allowEmpty": false },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": { "active": false },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [{ "id": "ballEnters", "name": "Ball enters zone" }]
        },
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate zone" },
            { "id": "deactivate", "name": "Deactivate zone" }
          ]
        }
      },
      "maxOnMap": 16,
      "initialMemoryCost": 300,
      "subsequentMemoryCost": 200,
      "supportedMapStyles": ["topDown"]
    },
    {
      "id": "barrier",
      "name": "Barrier",
      "description": "Block off areas with precision",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "appearance", "name": "Appearance" },
            { "id": "availability", "name": "Availability" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "shape",
            "option": {
              "label": "Barrier Shape",
              "description": "Set the shape of the barrier",
              "type": "select",
              "validators": [null],
              "defaultValue": "rectangle",
              "props": {
                "options": [
                  { "value": "rectangle", "name": "Rectangle" },
                  { "value": "circle", "name": "Circle" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured", "appearance"]
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Is the barrier active when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured", "availability"]
          },
          {
            "key": "color",
            "option": {
              "label": "Barrier Color",
              "description": "Set the color of the barrier",
              "type": "color",
              "defaultValue": "#ffb300",
              "validators": [null]
            },
            "categories": ["featured", "appearance"]
          },
          {
            "key": "scope",
            "option": {
              "label": "Active Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the barrier is activated/deactivated, who does that apply to?"
            },
            "categories": ["availability"]
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the barrier when the device receives a signal from the selected channel"
            },
            "categories": ["availability"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the barrier when the device receives a signal from the selected channel"
            },
            "categories": ["availability"]
          },
          {
            "key": "alpha",
            "option": {
              "label": "Alpha",
              "description": "Set the transparency of the barrier. 0 is completely transparent, 1 is completely visible.",
              "type": "numberInput",
              "defaultValue": 0.8,
              "validators": [null],
              "props": {
                "min": 0.01,
                "max": 1,
                "step": 0.01,
                "allowEmpty": false
              }
            },
            "categories": ["appearance"]
          },
          {
            "key": "showBorder",
            "option": {
              "label": "Show Border",
              "type": "select",
              "description": "Show a border around the barrier",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["appearance"]
          },
          {
            "key": "visibleInGame",
            "option": {
              "label": "Visible In-Game",
              "type": "select",
              "description": "If off, the barrier will be invisible",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["appearance"]
          },
          {
            "key": "collisionEnabled",
            "option": {
              "label": "Collision Enabled",
              "type": "select",
              "description": "Does the barrier block players and projectiles?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Height",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": { "min": 30, "max": 25000, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "width",
            "option": {
              "label": "Width",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": { "min": 30, "max": 25000, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "angle",
            "option": {
              "label": "Angle",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "min": -360, "max": 360, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "radius",
            "option": {
              "label": "Radius",
              "type": "numberInput",
              "defaultValue": 100,
              "validators": [null],
              "props": { "min": 15, "max": 12500, "allowEmpty": false },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": { "active": true },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate barrier" },
            { "id": "deactivate", "name": "Deactivate barrier" }
          ]
        }
      },
      "maxOnMap": 500,
      "initialMemoryCost": 20,
      "subsequentMemoryCost": 20
    },
    {
      "id": "blockingZone",
      "name": "Blocking Zone",
      "description": "Area that blocks different actions",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "Featured", "name": "Featured" },
            { "id": "Appearance", "name": "Appearance" },
            { "name": "Channels", "id": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "blockBuilding",
            "option": {
              "label": "Block Building",
              "description": "Is the zone blocking the terrain building?",
              "type": "select",
              "validators": [null],
              "defaultValue": 1,
              "props": {
                "options": [
                  { "value": 1, "name": "Do Not Override" },
                  { "value": 2, "name": "Yes" },
                  { "value": 3, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Featured"]
          },
          {
            "key": "visibleInGame",
            "option": {
              "label": "Visible In-Game",
              "type": "select",
              "description": "Is the zone visible to players during the game?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Appearance"]
          },
          {
            "key": "color",
            "option": {
              "label": "Background Color",
              "type": "color",
              "defaultValue": "#FFFFFF",
              "validators": [null]
            },
            "categories": ["Appearance"]
          },
          {
            "key": "activeOnStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Is the zone active when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate zone when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the zone when the device receives a signal from the selected channel"
            },
            "categories": ["Channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate zone when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the zone when the device receives a signal from the selected channel"
            },
            "categories": ["Channels"]
          },
          {
            "key": "width",
            "option": {
              "label": "Width",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": { "min": 250, "max": 2500, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Height",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": { "min": 250, "max": 2500, "allowEmpty": false },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": { "active": false },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate zone" },
            { "id": "deactivate", "name": "Deactivate zone" }
          ]
        }
      },
      "minimumRoleLevel": 90,
      "maxOnMap": 3,
      "initialMemoryCost": 300,
      "subsequentMemoryCost": 200
    },
    {
      "id": "button",
      "name": "Button",
      "description": "Run actions when interacted with",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "availability", "name": "Availability" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "guiMessage",
            "option": {
              "label": "Button Message",
              "description": "The message shown to player when they become within interaction distance of the button",
              "type": "textInput",
              "defaultValue": "Interact",
              "validators": [null],
              "props": {
                "placeholder": "Enter message here...",
                "maxLength": 128
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "channel",
            "option": {
              "label": "When button pressed, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the button is pressed, the device sends a signal on the selected channel"
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "visibleInGame",
            "option": {
              "label": "Visible In-Game",
              "type": "select",
              "description": "Is the button visible to players in-game?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "interactionDuration",
            "option": {
              "label": "Interaction Duration",
              "description": "How long does the player have to interact to press the button?",
              "type": "select",
              "validators": [null],
              "defaultValue": 1,
              "props": {
                "options": [
                  { "name": "Instant", "value": 0 },
                  { "name": "1 Second", "value": 1 },
                  { "name": "3 Seconds", "value": 3 },
                  { "name": "5 Seconds", "value": 5 }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "activeOnStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Can the button be pressed when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["availability"]
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate button when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the button when the device receives a signal from the selected channel"
            },
            "categories": ["availability", "channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate button when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the button when the device receives a signal from the selected channel"
            },
            "categories": ["availability", "channels"]
          },
          {
            "key": "scope",
            "option": {
              "label": "Active Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the button is activated/deactivated, who does it apply to?"
            },
            "categories": ["availability"]
          },
          {
            "key": "radius",
            "option": {
              "label": "Interaction Radius",
              "type": "numberInput",
              "defaultValue": 100,
              "validators": [null],
              "props": { "min": 75, "max": 300, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "size",
            "option": {
              "label": "Size",
              "type": "numberInput",
              "defaultValue": 26,
              "validators": [null],
              "props": { "min": 20, "max": 100, "allowEmpty": false },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": { "active": true },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [{ "id": "pressed", "name": "Button pressed" }]
        },
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate button" },
            { "id": "deactivate", "name": "Deactivate button" }
          ]
        }
      },
      "maxOnMap": 300,
      "initialMemoryCost": 50,
      "subsequentMemoryCost": 50
    },
    {
      "id": "cameraPoint",
      "name": "Camera Point",
      "description": "Move the camera to a specific location",
      "optionSchema": {
        "options": [
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate point when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the camera point when the device receives a signal from the selected channel"
            }
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate point when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the camera point when the device receives a signal from the selected channel"
            }
          }
        ]
      },
      "defaultState": { "active": false },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate camera point" },
            { "id": "deactivate", "name": "Deactivate camera point" }
          ]
        }
      },
      "initialMemoryCost": 100,
      "subsequentMemoryCost": 100
    },
    {
      "id": "cameraSize",
      "name": "Camera View",
      "description": "Set the bounds that players are allowed to see within",
      "optionSchema": {
        "options": [
          {
            "key": "width",
            "option": {
              "label": "Width",
              "type": "numberInput",
              "defaultValue": 1000,
              "validators": [null],
              "props": { "min": 500, "max": 50000 },
              "hidden": true
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Height",
              "type": "numberInput",
              "defaultValue": 1000,
              "validators": [null],
              "props": { "min": 500, "max": 50000 },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "maxOnMap": 128,
      "initialMemoryCost": 150,
      "subsequentMemoryCost": 150
    },
    {
      "id": "character",
      "name": "Character",
      "description": "Trigger channel when interact with character",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "interaction", "name": "Interaction" },
            { "id": "appearance", "name": "Appearance" },
            { "id": "availability", "name": "Availability" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "skinId",
            "option": {
              "label": "Skin",
              "description": "The skin of the character",
              "type": "textInput",
              "defaultValue": "character_vortexAgent",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            },
            "categories": ["featured", "appearance"]
          },
          {
            "key": "flipX",
            "option": {
              "label": "Direction",
              "description": "Which way is the character facing?",
              "type": "select",
              "validators": [null],
              "defaultValue": false,
              "props": {
                "options": [
                  { "name": "Right", "value": false },
                  { "name": "Left", "value": true }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured", "appearance"]
          },
          {
            "key": "interactionEnabled",
            "option": {
              "label": "Interaction Enabled",
              "type": "select",
              "description": "Can the player interact with the character?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured", "interaction"]
          },
          {
            "key": "interactionMessage",
            "option": {
              "label": "Character Message",
              "description": "The message shown to player when they become within interaction distance of the character",
              "type": "textInput",
              "defaultValue": "Talk",
              "validators": [null],
              "props": {
                "placeholder": "Enter message here...",
                "maxLength": 128
              },
              "hideIf": [
                [
                  {
                    "key": "interactionEnabled",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["featured", "interaction"]
          },
          {
            "key": "interactionChannel",
            "option": {
              "label": "When interact with character, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When interact with character, the device sends a signal on the selected channel",
              "hideIf": [
                [
                  {
                    "key": "interactionEnabled",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["featured", "channels", "interaction"]
          },
          {
            "key": "interactionDuration",
            "option": {
              "label": "Interaction Duration",
              "description": "How long does it takes to trigger the interaction?",
              "type": "select",
              "validators": [null],
              "defaultValue": 1,
              "props": {
                "options": [
                  { "name": "Instant", "value": 0 },
                  { "name": "1 Second", "value": 1 },
                  { "name": "3 Seconds", "value": 3 },
                  { "name": "5 Seconds", "value": 5 }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "interactionEnabled",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["featured", "interaction"]
          },
          {
            "key": "activeOnStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Can the player interact with character when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["availability"]
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate character when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the character when the device receives a signal from the selected channel"
            },
            "categories": ["availability", "channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate character when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the character when the device receives a signal from the selected channel"
            },
            "categories": ["availability", "channels"]
          },
          {
            "key": "scope",
            "option": {
              "label": "Active Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the character is activated/deactivated, who does it apply to?"
            },
            "categories": ["availability"]
          },
          {
            "key": "radius",
            "option": {
              "label": "Interaction Radius",
              "type": "numberInput",
              "defaultValue": 100,
              "validators": [null],
              "props": { "min": 75, "max": 300, "allowEmpty": false },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": { "active": true },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "interacted", "name": "Interacted with character" }
          ]
        },
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate character" },
            { "id": "deactivate", "name": "Deactivate character" }
          ]
        }
      },
      "minimumRoleLevel": 90,
      "maxOnMap": 300,
      "initialMemoryCost": 50,
      "subsequentMemoryCost": 50
    },
    {
      "id": "checker",
      "name": "Checker",
      "description": "Trigger actions depending on certain conditions",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "check1", "name": "Check #1" },
            {
              "id": "check2",
              "name": "Check #2",
              "hideIf": [
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 2 }]
              ]
            },
            {
              "id": "check3",
              "name": "Check #3",
              "hideIf": [
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 3 }]
              ]
            },
            {
              "id": "check4",
              "name": "Check #4",
              "hideIf": [
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 4 }]
              ]
            },
            {
              "id": "check5",
              "name": "Check #5",
              "hideIf": [
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 5 }]
              ]
            }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "checkWhenReceivedOnChannel",
            "option": {
              "label": "Check when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Run the check when the device receives a signal from the selected channel"
            },
            "categories": ["featured"]
          },
          {
            "key": "whenValidTransmitOnChannel",
            "option": {
              "label": "When the check passes, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the check passes, the device sends a signal on the selected channel"
            },
            "categories": ["featured"]
          },
          {
            "key": "whenInvalidTransmitOnChannel",
            "option": {
              "label": "When the check fails, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the check fails, the device sends a signal on the selected channel"
            },
            "categories": ["featured"]
          },
          {
            "key": "check1Type",
            "option": {
              "label": "Check Type",
              "description": "Select what you want to check for.",
              "type": "select",
              "validators": [null],
              "defaultValue": "item",
              "props": {
                "options": [
                  { "value": "none", "name": "None" },
                  { "value": "item", "name": "Item Amount" },
                  { "value": "property", "name": "Value Of Property" },
                  { "value": "score", "name": "Score Amount" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 1 }]
              ]
            },
            "categories": ["check1"]
          },
          {
            "key": "check1ScoreComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the value of the score.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check1Type",
                    "compare": "NOT_EQUAL",
                    "value": "score"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 1 }]
              ]
            },
            "categories": ["check1"]
          },
          {
            "key": "check1ScoreValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check1Type",
                    "compare": "NOT_EQUAL",
                    "value": "score"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 1 }]
              ]
            },
            "categories": ["check1"]
          },
          {
            "key": "check1PropertyName",
            "option": {
              "label": "Property",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Property...",
                "category": "property",
                "maxLength": 64
              },
              "description": "The name of the property to check for. The corresponding property must be a number to work properly.",
              "hideIf": [
                [
                  {
                    "key": "check1Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 1 }]
              ]
            },
            "categories": ["check1"]
          },
          {
            "key": "check1PropertyComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the value of the property.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check1Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 1 }]
              ]
            },
            "categories": ["check1"]
          },
          {
            "key": "check1PropertyValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check1Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 1 }]
              ]
            },
            "categories": ["check1"]
          },
          {
            "key": "check1ItemId",
            "option": {
              "label": "Item",
              "description": "The item whose amount to check for.",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "check1Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 1 }]
              ]
            },
            "categories": ["check1"]
          },
          {
            "key": "check1ItemComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the item amount.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check1Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 1 }]
              ]
            },
            "categories": ["check1"]
          },
          {
            "key": "check1ItemValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check1Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 1 }]
              ]
            },
            "categories": ["check1"]
          },
          {
            "key": "check2Type",
            "option": {
              "label": "Check Type",
              "description": "Select what you want to check for.",
              "type": "select",
              "validators": [null],
              "defaultValue": "item",
              "props": {
                "options": [
                  { "value": "none", "name": "None" },
                  { "value": "item", "name": "Item Amount" },
                  { "value": "property", "name": "Value Of Property" },
                  { "value": "score", "name": "Score Amount" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 2 }]
              ]
            },
            "categories": ["check2"]
          },
          {
            "key": "check2ScoreComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the value of the score.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check2Type",
                    "compare": "NOT_EQUAL",
                    "value": "score"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 2 }]
              ]
            },
            "categories": ["check2"]
          },
          {
            "key": "check2ScoreValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check2Type",
                    "compare": "NOT_EQUAL",
                    "value": "score"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 2 }]
              ]
            },
            "categories": ["check2"]
          },
          {
            "key": "check2PropertyName",
            "option": {
              "label": "Property",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Property...",
                "category": "property",
                "maxLength": 64
              },
              "description": "The name of the property to check for. The corresponding property must be a number to work properly.",
              "hideIf": [
                [
                  {
                    "key": "check2Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 2 }]
              ]
            },
            "categories": ["check2"]
          },
          {
            "key": "check2PropertyComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the value of the property.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check2Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 2 }]
              ]
            },
            "categories": ["check2"]
          },
          {
            "key": "check2PropertyValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check2Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 2 }]
              ]
            },
            "categories": ["check2"]
          },
          {
            "key": "check2ItemId",
            "option": {
              "label": "Item",
              "description": "The item whose amount to check for.",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "check2Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 2 }]
              ]
            },
            "categories": ["check2"]
          },
          {
            "key": "check2ItemComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the item amount.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check2Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 2 }]
              ]
            },
            "categories": ["check2"]
          },
          {
            "key": "check2ItemValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check2Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 2 }]
              ]
            },
            "categories": ["check2"]
          },
          {
            "key": "check3Type",
            "option": {
              "label": "Check Type",
              "description": "Select what you want to check for.",
              "type": "select",
              "validators": [null],
              "defaultValue": "item",
              "props": {
                "options": [
                  { "value": "none", "name": "None" },
                  { "value": "item", "name": "Item Amount" },
                  { "value": "property", "name": "Value Of Property" },
                  { "value": "score", "name": "Score Amount" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 3 }]
              ]
            },
            "categories": ["check3"]
          },
          {
            "key": "check3ScoreComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the value of the score.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check3Type",
                    "compare": "NOT_EQUAL",
                    "value": "score"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 3 }]
              ]
            },
            "categories": ["check3"]
          },
          {
            "key": "check3ScoreValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check3Type",
                    "compare": "NOT_EQUAL",
                    "value": "score"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 3 }]
              ]
            },
            "categories": ["check3"]
          },
          {
            "key": "check3PropertyName",
            "option": {
              "label": "Property",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Property...",
                "category": "property",
                "maxLength": 64
              },
              "description": "The name of the property to check for. The corresponding property must be a number to work properly.",
              "hideIf": [
                [
                  {
                    "key": "check3Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 3 }]
              ]
            },
            "categories": ["check3"]
          },
          {
            "key": "check3PropertyComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the value of the property.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check3Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 3 }]
              ]
            },
            "categories": ["check3"]
          },
          {
            "key": "check3PropertyValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check3Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 3 }]
              ]
            },
            "categories": ["check3"]
          },
          {
            "key": "check3ItemId",
            "option": {
              "label": "Item",
              "description": "The item whose amount to check for.",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "check3Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 3 }]
              ]
            },
            "categories": ["check3"]
          },
          {
            "key": "check3ItemComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the item amount.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check3Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 3 }]
              ]
            },
            "categories": ["check3"]
          },
          {
            "key": "check3ItemValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check3Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 3 }]
              ]
            },
            "categories": ["check3"]
          },
          {
            "key": "check4Type",
            "option": {
              "label": "Check Type",
              "description": "Select what you want to check for.",
              "type": "select",
              "validators": [null],
              "defaultValue": "item",
              "props": {
                "options": [
                  { "value": "none", "name": "None" },
                  { "value": "item", "name": "Item Amount" },
                  { "value": "property", "name": "Value Of Property" },
                  { "value": "score", "name": "Score Amount" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 4 }]
              ]
            },
            "categories": ["check4"]
          },
          {
            "key": "check4ScoreComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the value of the score.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check4Type",
                    "compare": "NOT_EQUAL",
                    "value": "score"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 4 }]
              ]
            },
            "categories": ["check4"]
          },
          {
            "key": "check4ScoreValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check4Type",
                    "compare": "NOT_EQUAL",
                    "value": "score"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 4 }]
              ]
            },
            "categories": ["check4"]
          },
          {
            "key": "check4PropertyName",
            "option": {
              "label": "Property",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Property...",
                "category": "property",
                "maxLength": 64
              },
              "description": "The name of the property to check for. The corresponding property must be a number to work properly.",
              "hideIf": [
                [
                  {
                    "key": "check4Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 4 }]
              ]
            },
            "categories": ["check4"]
          },
          {
            "key": "check4PropertyComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the value of the property.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check4Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 4 }]
              ]
            },
            "categories": ["check4"]
          },
          {
            "key": "check4PropertyValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check4Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 4 }]
              ]
            },
            "categories": ["check4"]
          },
          {
            "key": "check4ItemId",
            "option": {
              "label": "Item",
              "description": "The item whose amount to check for.",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "check4Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 4 }]
              ]
            },
            "categories": ["check4"]
          },
          {
            "key": "check4ItemComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the item amount.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check4Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 4 }]
              ]
            },
            "categories": ["check4"]
          },
          {
            "key": "check4ItemValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check4Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 4 }]
              ]
            },
            "categories": ["check4"]
          },
          {
            "key": "check5Type",
            "option": {
              "label": "Check Type",
              "description": "Select what you want to check for.",
              "type": "select",
              "validators": [null],
              "defaultValue": "item",
              "props": {
                "options": [
                  { "value": "none", "name": "None" },
                  { "value": "item", "name": "Item Amount" },
                  { "value": "property", "name": "Value Of Property" },
                  { "value": "score", "name": "Score Amount" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 5 }]
              ]
            },
            "categories": ["check5"]
          },
          {
            "key": "check5ScoreComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the value of the score.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check5Type",
                    "compare": "NOT_EQUAL",
                    "value": "score"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 5 }]
              ]
            },
            "categories": ["check5"]
          },
          {
            "key": "check5ScoreValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check5Type",
                    "compare": "NOT_EQUAL",
                    "value": "score"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 5 }]
              ]
            },
            "categories": ["check5"]
          },
          {
            "key": "check5PropertyName",
            "option": {
              "label": "Property",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Property...",
                "category": "property",
                "maxLength": 64
              },
              "description": "The name of the property to check for. The corresponding property must be a number to work properly.",
              "hideIf": [
                [
                  {
                    "key": "check5Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 5 }]
              ]
            },
            "categories": ["check5"]
          },
          {
            "key": "check5PropertyComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the value of the property.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check5Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 5 }]
              ]
            },
            "categories": ["check5"]
          },
          {
            "key": "check5PropertyValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check5Type",
                    "compare": "NOT_EQUAL",
                    "value": "property"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 5 }]
              ]
            },
            "categories": ["check5"]
          },
          {
            "key": "check5ItemId",
            "option": {
              "label": "Item",
              "description": "The item whose amount to check for.",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "check5Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 5 }]
              ]
            },
            "categories": ["check5"]
          },
          {
            "key": "check5ItemComparison",
            "option": {
              "label": "Comparison",
              "description": "How to compare the item amount.",
              "type": "select",
              "validators": [null],
              "defaultValue": "equal",
              "props": {
                "options": [
                  { "value": "less", "name": "Less Than" },
                  { "value": "equal", "name": "Equal To" },
                  { "value": "greater", "name": "Greater Than" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check5Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 5 }]
              ]
            },
            "categories": ["check5"]
          },
          {
            "key": "check5ItemValue",
            "option": {
              "label": "Value",
              "description": "The value used for comparison.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1000000000000000000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "check5Type",
                    "compare": "NOT_EQUAL",
                    "value": "item"
                  }
                ],
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 5 }]
              ]
            },
            "categories": ["check5"]
          },
          {
            "key": "checkCount",
            "option": {
              "label": "Number Of Checks",
              "description": "Run up-to 5 unique checks.",
              "type": "select",
              "validators": [null],
              "defaultValue": 1,
              "props": {
                "options": [
                  { "name": "1", "value": 1 },
                  { "name": "2", "value": 2 },
                  { "name": "3", "value": 3 },
                  { "name": "4", "value": 4 },
                  { "name": "5", "value": 5 }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "operation",
            "option": {
              "label": "Pass Condition",
              "description": "In order for the device to transmit a pass, do all checks need to pass or just one of them?",
              "type": "select",
              "validators": [null],
              "defaultValue": "and",
              "props": {
                "options": [
                  { "name": "All Checks Must Pass", "value": "and" },
                  { "name": "Any Check Can Pass", "value": "or" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "checkCount", "compare": "LESS_THAN", "value": 2 }]
              ]
            },
            "categories": ["featured"]
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "valid", "name": "Check passes" },
            { "id": "invalid", "name": "Check fails" }
          ]
        },
        "in": { "connections": [{ "id": "check", "name": "Run check" }] }
      },
      "initialMemoryCost": 35,
      "subsequentMemoryCost": 35
    },
    {
      "id": "checkpoint",
      "name": "Checkpoint",
      "description": "A respawn point for players",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "enabled",
            "option": {
              "label": "Enabled",
              "type": "select",
              "description": "Is the checkpoint enabled?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "minimumRoleLevel": 90
          },
          {
            "key": "visibleInGame",
            "option": {
              "label": "Visible In-Game",
              "type": "select",
              "description": "Is the checkpoint visible to players in-game?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "playAudio",
            "option": {
              "label": "Play Audio",
              "type": "select",
              "description": "Play audio when the checkpoint is activated",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "visibleInGame", "compare": "EQUAL", "value": false }]
              ]
            }
          },
          {
            "key": "maxActivations",
            "option": {
              "label": "Activation Limit",
              "description": "How many times can a player activate this checkpoint?",
              "type": "select",
              "validators": [null],
              "defaultValue": 0,
              "props": {
                "options": [
                  { "value": 0, "name": "Infinite" },
                  { "value": 1, "name": "Once" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "setAsActiveChannel",
            "option": {
              "label": "Set as active checkpoint when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Set as active checkpoint when the device receives a signal from the selected channel"
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "onActiveChannel",
            "option": {
              "label": "When checkpoint activated, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the this checkpoint is activated for a player, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "width",
            "option": {
              "label": "Width",
              "type": "numberInput",
              "defaultValue": 125,
              "validators": [null],
              "props": { "min": 65, "max": 300, "allowEmpty": false },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": { "active": false },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "setAsCheckpoint", "name": "Set as active checkpoint" }
          ]
        },
        "out": {
          "connections": [{ "id": "activated", "name": "Checkpoint activated" }]
        }
      },
      "maxOnMap": 256,
      "initialMemoryCost": 40,
      "subsequentMemoryCost": 40
    },
    {
      "id": "classDesigner",
      "name": "Class Designer",
      "description": "Assign character to a class of characters.",
      "optionSchema": {
        "options": [
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate class when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate class for triggering character when the device receives a signal from the selected channel"
            }
          },
          {
            "key": "allowedToUseGadget",
            "option": {
              "label": "Allowed To Use Gadget",
              "description": "Is the character allowed to use gadget?",
              "type": "select",
              "validators": [null],
              "defaultValue": 1,
              "props": {
                "options": [
                  { "value": 1, "name": "Do Not Override" },
                  { "value": 2, "name": "Yes" },
                  { "value": 3, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "immunity",
            "option": {
              "label": "Invincibility",
              "description": "Is the character invincible?",
              "type": "select",
              "validators": [null],
              "defaultValue": 1,
              "props": {
                "options": [
                  { "value": 1, "name": "Do Not Override" },
                  { "value": 2, "name": "Yes" },
                  { "value": 3, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [{ "id": "activate", "name": "Activate class" }]
        }
      },
      "minimumRoleLevel": 90,
      "maxOnMap": 512,
      "initialMemoryCost": 25,
      "subsequentMemoryCost": 25
    },
    {
      "id": "cosmosModifier",
      "name": "Cosmos Modifier",
      "description": "Modify a player's Gim! For use by Team Gimkit only.",
      "optionSchema": {
        "options": [
          {
            "key": "skinId",
            "option": {
              "label": "Skin ID",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "trailId",
            "option": {
              "label": "Trail ID",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "applyChannel",
            "option": {
              "label": "Apply when receiving on channel...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "resetChannel",
            "option": {
              "label": "Reset when receiving on channel...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "apply", "name": "Apply modifier" },
            { "id": "reset", "name": "Reset player To selected appearance" }
          ]
        }
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "countdown",
      "name": "Countdown",
      "description": "A ticking countdown for an important event",
      "optionSchema": {
        "options": [
          {
            "key": "minutes",
            "option": {
              "label": "Minutes",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": { "min": 0, "max": 60, "step": 1 }
            }
          },
          {
            "key": "seconds",
            "option": {
              "label": "Seconds",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "min": 0, "max": 59, "step": 1 }
            }
          },
          {
            "key": "startWhenReceivingFrom",
            "option": {
              "label": "Start When Receiving From...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "onEndTransmitOn",
            "option": {
              "label": "When Ends, Transmit On...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [{ "type": "OnTick", "name": "On Tick..." }],
        "customBlocks": [
          "get_minutes",
          "get_seconds",
          "get_time_left_formatted"
        ]
      },
      "wireConfig": {
        "out": { "connections": [{ "id": "ends", "name": "Countdown ends" }] },
        "in": { "connections": [{ "id": "start", "name": "Start countdown" }] }
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "counter",
      "name": "Counter",
      "description": "Keep track of how many times something has been done",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "property", "name": "Property" },
            { "id": "target", "name": "Target" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "startingValue",
            "option": {
              "label": "Starting Value",
              "description": "The value the counter starts at",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": {
                "min": -999999999,
                "max": 999999999,
                "step": 1,
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "incrementWhenReceivingOn",
            "option": {
              "label": "Increment counter when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Increment the counter by 1 when the device receives a signal from the selected channel"
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "decrementWhenReceivingOn",
            "option": {
              "label": "Decrement counter when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Decrement the counter by 1 when the device receives a signal from the selected channel"
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "visibleInGame",
            "option": {
              "label": "Visible In-Game",
              "type": "select",
              "description": "Should the counter be visible in-game?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "scope",
            "option": {
              "label": "Count Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the count is updated, it applies to who?"
            },
            "categories": ["featured"]
          },
          {
            "key": "resetToStartingValueWhenReceivingOn",
            "option": {
              "label": "Reset counter when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Reset the counter to the starting value when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "updateProperty",
            "option": {
              "label": "Update Property",
              "type": "select",
              "description": "When the counter value changes, update a property",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["property"]
          },
          {
            "key": "property",
            "option": {
              "label": "Property To Update",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Property...",
                "category": "property",
                "maxLength": 64
              },
              "description": "The name of the property to update. Must be a number property to work correctly.",
              "hideIf": [
                [
                  {
                    "key": "updateProperty",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["property"]
          },
          {
            "key": "useTarget",
            "option": {
              "label": "Use Target Value",
              "type": "select",
              "description": "Have a target number for the counter to reach",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["target"]
          },
          {
            "key": "target",
            "option": {
              "label": "Target Value",
              "description": "The target number the counter is working towards",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": { "allowEmpty": false },
              "hideIf": [
                [{ "key": "useTarget", "compare": "NOT_EQUAL", "value": true }]
              ]
            },
            "categories": ["target"]
          },
          {
            "key": "whenTargetReachedTransmitOn",
            "option": {
              "label": "When target reached, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the target value is reached, the device sends a signal on the selected channel",
              "hideIf": [
                [{ "key": "useTarget", "compare": "NOT_EQUAL", "value": true }]
              ]
            },
            "categories": ["target", "channels"]
          }
        ]
      },
      "defaultState": { "counter": 0 },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "reachedTarget", "name": "Target value reached" }
          ]
        },
        "in": {
          "connections": [
            { "id": "increment", "name": "Increment counter" },
            { "id": "decrement", "name": "Decrement counter" },
            { "id": "reset", "name": "Reset counter" }
          ]
        }
      },
      "maxOnMap": 512,
      "initialMemoryCost": 25,
      "subsequentMemoryCost": 25
    },
    {
      "id": "craftingRecipe",
      "name": "Crafting Recipe",
      "description": "Configure recipes that can be crafted with a crafting table",
      "optionSchema": {
        "options": [
          {
            "key": "item",
            "option": {
              "label": "Crafted Item",
              "description": "Item crafted by this recipe",
              "type": "itemId",
              "validators": [null],
              "props": {}
            },
            "categories": ["featured"]
          },
          {
            "key": "itemAmount",
            "option": {
              "label": "Amount To Craft",
              "description": "Amount of item crafted by this recipe",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "numberOfIngredients",
            "option": {
              "label": "Ingredient Count",
              "description": "Number of ingredients required to craft this item",
              "type": "select",
              "validators": [null],
              "defaultValue": 2,
              "props": {
                "options": [
                  { "name": "1", "value": 1 },
                  { "name": "2", "value": 2 },
                  { "name": "3", "value": 3 },
                  { "name": "4", "value": 4 },
                  { "name": "5", "value": 5 }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "ingredient1Item",
            "option": {
              "label": "Ingredient #1",
              "description": "Select an item required to craft this recipe",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "numberOfIngredients",
                    "compare": "LESS_THAN",
                    "value": 1
                  }
                ]
              ]
            },
            "categories": ["featured", "ingredients"]
          },
          {
            "key": "ingredient1Amount",
            "option": {
              "label": "Ingredient #1 Amount",
              "description": "How much of this item is required to craft this recipe?",
              "type": "numberInput",
              "defaultValue": 3,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "numberOfIngredients",
                    "compare": "LESS_THAN",
                    "value": 1
                  }
                ]
              ]
            },
            "categories": ["featured", "ingredients"]
          },
          {
            "key": "ingredient2Item",
            "option": {
              "label": "Ingredient #2",
              "description": "Select an item required to craft this recipe",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "numberOfIngredients",
                    "compare": "LESS_THAN",
                    "value": 2
                  }
                ]
              ]
            },
            "categories": ["featured", "ingredients"]
          },
          {
            "key": "ingredient2Amount",
            "option": {
              "label": "Ingredient #2 Amount",
              "description": "How much of this item is required to craft this recipe?",
              "type": "numberInput",
              "defaultValue": 3,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "numberOfIngredients",
                    "compare": "LESS_THAN",
                    "value": 2
                  }
                ]
              ]
            },
            "categories": ["featured", "ingredients"]
          },
          {
            "key": "ingredient3Item",
            "option": {
              "label": "Ingredient #3",
              "description": "Select an item required to craft this recipe",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "numberOfIngredients",
                    "compare": "LESS_THAN",
                    "value": 3
                  }
                ]
              ]
            },
            "categories": ["featured", "ingredients"]
          },
          {
            "key": "ingredient3Amount",
            "option": {
              "label": "Ingredient #3 Amount",
              "description": "How much of this item is required to craft this recipe?",
              "type": "numberInput",
              "defaultValue": 3,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "numberOfIngredients",
                    "compare": "LESS_THAN",
                    "value": 3
                  }
                ]
              ]
            },
            "categories": ["featured", "ingredients"]
          },
          {
            "key": "ingredient4Item",
            "option": {
              "label": "Ingredient #4",
              "description": "Select an item required to craft this recipe",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "numberOfIngredients",
                    "compare": "LESS_THAN",
                    "value": 4
                  }
                ]
              ]
            },
            "categories": ["featured", "ingredients"]
          },
          {
            "key": "ingredient4Amount",
            "option": {
              "label": "Ingredient #4 Amount",
              "description": "How much of this item is required to craft this recipe?",
              "type": "numberInput",
              "defaultValue": 3,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "numberOfIngredients",
                    "compare": "LESS_THAN",
                    "value": 4
                  }
                ]
              ]
            },
            "categories": ["featured", "ingredients"]
          },
          {
            "key": "ingredient5Item",
            "option": {
              "label": "Ingredient #5",
              "description": "Select an item required to craft this recipe",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "numberOfIngredients",
                    "compare": "LESS_THAN",
                    "value": 5
                  }
                ]
              ]
            },
            "categories": ["featured", "ingredients"]
          },
          {
            "key": "ingredient5Amount",
            "option": {
              "label": "Ingredient #5 Amount",
              "description": "How much of this item is required to craft this recipe?",
              "type": "numberInput",
              "defaultValue": 3,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "numberOfIngredients",
                    "compare": "LESS_THAN",
                    "value": 5
                  }
                ]
              ]
            },
            "categories": ["featured", "ingredients"]
          },
          {
            "key": "timeToCraftMs",
            "option": {
              "label": "Time To Craft",
              "description": "How long does it take to craft this item?",
              "type": "select",
              "validators": [null],
              "defaultValue": 0,
              "props": {
                "options": [
                  { "name": "Instant", "value": 0 },
                  { "name": "1 Second", "value": 1000 },
                  { "name": "3 Seconds", "value": 3000 },
                  { "name": "5 Seconds", "value": 5000 },
                  { "name": "10 Seconds", "value": 10000 },
                  { "name": "20 Seconds", "value": 20000 },
                  { "name": "30 Seconds", "value": 30000 },
                  { "name": "1 Minute", "value": 60000 },
                  { "name": "2 Minutes", "value": 120000 },
                  { "name": "3 Minutes", "value": 180000 },
                  { "name": "4 Minutes", "value": 240000 },
                  { "name": "5 Minutes", "value": 300000 },
                  { "name": "10 Minutes", "value": 600000 },
                  { "name": "15 Minutes", "value": 900000 },
                  { "name": "20 Minutes", "value": 1200000 }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["details"]
          },
          {
            "key": "itemDisposes",
            "option": {
              "label": "Item Expiration",
              "type": "select",
              "description": "Should the item expire after a certain amount of time?",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["details"]
          },
          {
            "key": "disposeItemAfterMs",
            "option": {
              "label": "Item Expiration Time",
              "description": "How long until the item expires?",
              "type": "select",
              "validators": [null],
              "defaultValue": 5000,
              "props": {
                "options": [
                  { "name": "5 Seconds", "value": 5000 },
                  { "name": "10 Seconds", "value": 10000 },
                  { "name": "20 Seconds", "value": 20000 },
                  { "name": "30 Seconds", "value": 30000 },
                  { "name": "1 Minute", "value": 60000 },
                  { "name": "2 Minutes", "value": 120000 },
                  { "name": "3 Minutes", "value": 180000 },
                  { "name": "4 Minutes", "value": 240000 },
                  { "name": "5 Minutes", "value": 300000 },
                  { "name": "10 Minutes", "value": 600000 },
                  { "name": "15 Minutes", "value": 900000 },
                  { "name": "20 Minutes", "value": 1200000 }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "itemDisposes",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["details"]
          },
          {
            "key": "group",
            "option": {
              "label": "Group",
              "description": "If set, this recipe will only be available at tables with a matching group",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Text here...",
                "category": "craftingGroup"
              }
            },
            "categories": ["details"]
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Is this recipe available to craft when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "whenCraftingStartsChannel",
            "option": {
              "label": "When item begins crafting, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When item begins crafting, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "whenCraftedChannel",
            "option": {
              "label": "When item is crafted, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When item is crafted, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "activeScope",
            "option": {
              "label": "Active Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When activated/deactivated, who does it apply to?"
            }
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate recipe when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate recipe when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate recipe when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate recipe when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          }
        ],
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "details", "name": "Details" },
            { "id": "ingredients", "name": "Ingredients" }
          ],
          "showAllOptionsAt": "end"
        }
      },
      "defaultState": { "active": true },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "recipeStartsCrafting", "name": "Recipe begins crafting" },
            { "id": "recipeCrafted", "name": "Recipe crafted" }
          ]
        },
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate recipe" },
            { "id": "deactivate", "name": "Deactivate recipe" }
          ]
        }
      },
      "maximumRoleLevel": 200,
      "initialMemoryCost": 15,
      "subsequentMemoryCost": 15
    },
    {
      "id": "craftingTable",
      "name": "Crafting Table",
      "description": "Add crafting or farming mechanics into your map!",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "style",
            "option": {
              "label": "Style",
              "description": "Set the look and appearance of this crafting table",
              "type": "select",
              "validators": [null],
              "defaultValue": "craft",
              "props": {
                "options": [
                  { "name": "Crafting Table", "value": "craft" },
                  {
                    "name": "Farming Plot",
                    "value": "plant",
                    "supportedMapStyles": ["topDown"]
                  }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"],
            "supportedMapStyles": ["topDown"]
          },
          {
            "key": "craftingScope",
            "option": {
              "label": "Crafting Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "The status of the crafting table (crafting, ready to collect, etc) is scoped to who?"
            },
            "categories": ["featured"]
          },
          {
            "key": "group",
            "option": {
              "label": "Crafting Group",
              "description": "If set, the crafting table will only be able to craft recipes with a matching group",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Text here...",
                "category": "craftingGroup"
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "useCrafterCollectionAdvantage",
            "option": {
              "label": "Allow Crafter To Collect First",
              "type": "select",
              "description": "When an item is crafted, does the crafter get the first chance to collect it?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "channelItemBeginsCrafting",
            "option": {
              "label": "When item begins crafting, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When an item begins crafting, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "channelItemFinishesCrafting",
            "option": {
              "label": "When item finishes crafting, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When an item finishes crafting, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "channelItemCollected",
            "option": {
              "label": "When item is collected, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When an item is collected, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "channelItemDisposed",
            "option": {
              "label": "When item expires, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When an item expires, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          }
        ]
      },
      "defaultState": { "status": "idle" },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "itemBeginsCrafting", "name": "Item begins crafting" },
            { "id": "itemFinishesCrafting", "name": "Item crafted" },
            { "id": "itemCollected", "name": "Item collected" },
            { "id": "itemDisposed", "name": "Item expires" }
          ]
        }
      },
      "maxOnMap": 100,
      "initialMemoryCost": 250,
      "subsequentMemoryCost": 250
    },
    {
      "id": "damageBoost",
      "name": "Damage Boost",
      "description": "Increase the amount of damage a player deals",
      "optionSchema": {
        "options": [
          {
            "key": "multiplier",
            "option": {
              "label": "Boost Amount",
              "description": "When a deals damage, multiply the amount by this value",
              "type": "select",
              "validators": [null],
              "defaultValue": 2,
              "props": {
                "options": [
                  { "name": "0.25x", "value": 0.25 },
                  { "name": "0.5x", "value": 0.5 },
                  { "name": "0.75x", "value": 0.75 },
                  { "name": "1x", "value": 1 },
                  { "name": "1.25x", "value": 1.25 },
                  { "name": "1.5x", "value": 1.5 },
                  { "name": "1.75x", "value": 1.75 },
                  { "name": "2x", "value": 2 },
                  { "name": "2.5x", "value": 2.5 },
                  { "name": "3x", "value": 3 },
                  { "name": "4x", "value": 4 },
                  { "name": "5x", "value": 5 },
                  { "name": "6x", "value": 6 },
                  { "name": "7x", "value": 7 },
                  { "name": "8x", "value": 8 },
                  { "name": "9x", "value": 9 },
                  { "name": "10x", "value": 10 }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "durationMS",
            "option": {
              "label": "Boost Duration",
              "description": "How long the boost lasts for",
              "type": "select",
              "validators": [null],
              "defaultValue": 30000,
              "props": {
                "options": [
                  { "name": "Forever", "value": -1 },
                  { "name": "5 Seconds", "value": 5000 },
                  { "name": "10 Seconds", "value": 10000 },
                  { "name": "20 Seconds", "value": 20000 },
                  { "name": "30 Seconds", "value": 30000 },
                  { "name": "1 Minute", "value": 60000 },
                  { "name": "2 Minutes", "value": 120000 },
                  { "name": "3 Minutes", "value": 180000 },
                  { "name": "5 Minutes", "value": 300000 }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate boost when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the damage boost when the device receives a signal from the selected channel"
            }
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate boost when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the damage boost when the device receives a signal from the selected channel"
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate damage boost" },
            { "id": "deactivate", "name": "Deactivate damage boost" }
          ]
        }
      },
      "maxOnMap": 32,
      "initialMemoryCost": 30,
      "subsequentMemoryCost": 30
    },
    {
      "id": "damager",
      "name": "Damager",
      "description": "Deal a specific amount of a damage to a player",
      "optionSchema": {
        "options": [
          {
            "key": "amount",
            "option": {
              "label": "Damage Amount",
              "description": "The amount of damage to deal to the player",
              "type": "numberInput",
              "defaultValue": 15,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 10000,
                "step": 1,
                "allowEmpty": false
              }
            }
          },
          {
            "key": "damageOnChannel",
            "option": {
              "label": "Damage player when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Damage the triggering player when the device receives a signal from the selected channel"
            }
          },
          {
            "key": "knockoutActivityFeedMessage",
            "option": {
              "label": "Knockout Activity Feed Message",
              "description": "When the damage applied knocks out a player, this message will be displayed in the activity feed. Use {name} to insert the player's name.",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": true,
        "triggers": [{ "type": "wire", "name": "On wire pulse..." }],
        "customBlocks": ["damage_custom"]
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "damage", "name": "Damage player" },
            { "id": "codeGrid", "name": "Run wire pulse block" }
          ]
        }
      },
      "maxOnMap": 128,
      "initialMemoryCost": 30,
      "subsequentMemoryCost": 30
    },
    {
      "id": "dialogue",
      "name": "Dialogue",
      "description": "A dialogue box that can be interacted with to create rich conversations",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "actions", "name": "Actions" },
            { "id": "appearance", "name": "Appearance" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "message",
            "option": {
              "label": "Message",
              "description": "Text content to display in the dialogue box",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 512 }
            },
            "categories": ["featured"]
          },
          {
            "key": "group",
            "option": {
              "label": "Dialogue Group",
              "description": "Set a group to show actions from matching Dialogue Action Devices",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "category": "dialogue" }
            },
            "categories": ["featured"]
          },
          {
            "key": "action1Text",
            "option": {
              "label": "Action #1",
              "description": "Text to display on action button #1",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 64 }
            },
            "categories": ["featured", "actions"]
          },
          {
            "key": "action1Channel",
            "option": {
              "label": "Action #1 Channel",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the first action button is clicked, the device sends a signal on the selected channel"
            },
            "categories": ["featured", "actions"]
          },
          {
            "key": "action2Text",
            "option": {
              "label": "Action #2",
              "description": "Text to display on action button #2",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 64 }
            },
            "categories": ["actions"]
          },
          {
            "key": "action2Channel",
            "option": {
              "label": "Action #2 Channel",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the second action button is clicked, the device sends a signal on the selected channel"
            },
            "categories": ["actions"]
          },
          {
            "key": "action3Text",
            "option": {
              "label": "Action #3",
              "description": "Text to display on action button #3",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 64 }
            },
            "categories": ["actions"]
          },
          {
            "key": "action3Channel",
            "option": {
              "label": "Action #3 Channel",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the third action button is clicked, the device sends a signal on the selected channel"
            },
            "categories": ["actions"]
          },
          {
            "key": "action4Text",
            "option": {
              "label": "Action #4",
              "description": "Text to display on action button #4",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 64 }
            },
            "categories": ["actions"]
          },
          {
            "key": "action4Channel",
            "option": {
              "label": "Action #4 Channel",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the fourth action button is clicked, the device sends a signal on the selected channel"
            },
            "categories": ["actions"]
          },
          {
            "key": "font",
            "option": {
              "label": "Font",
              "description": "Select the font for the text",
              "type": "select",
              "validators": [null],
              "defaultValue": "Rubik",
              "props": {
                "options": [
                  { "value": "Rubik", "name": "Rubik" },
                  { "value": "Roboto", "name": "Roboto" },
                  { "value": "Staatliches", "name": "Staatliches" },
                  { "value": "Galindo", "name": "Galindo" },
                  { "value": "Kalam", "name": "Kalam" },
                  { "value": "Bangers", "name": "Bangers" },
                  { "value": "Fugaz One", "name": "Fugaz One" },
                  { "value": "Outfit", "name": "Outfit" },
                  { "value": "PT Mono", "name": "PT Mono" },
                  { "value": "Space Grotesk", "name": "Space Grotesk" },
                  { "value": "Lobster", "name": "Lobster" },
                  { "value": "Zeyada", "name": "Zeyada" },
                  { "value": "Titan One", "name": "Titan One" },
                  { "value": "Rye", "name": "Rye" },
                  { "value": "Caprasimo", "name": "Caprasimo" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["appearance"]
          },
          {
            "key": "character",
            "option": {
              "label": "Gim",
              "description": "Set a Gim speaking the dialogue",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            },
            "categories": ["appearance"],
            "minimumRoleLevel": 90
          },
          {
            "key": "typewriter",
            "option": {
              "label": "Typewriter Effect",
              "type": "select",
              "description": "Write out the message with a typewriter effect",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["appearance"]
          },
          {
            "key": "darkenBackground",
            "option": {
              "label": "Darken Background",
              "type": "select",
              "description": "Darken the background behind the dialogue box",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["appearance"]
          },
          {
            "key": "openChannel",
            "option": {
              "label": "Open when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Open when the device receives a signal from the selected channel"
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "closeChannel",
            "option": {
              "label": "Close when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Close when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "whenClosedChannel",
            "option": {
              "label": "When when closed, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When when the dialogue is closed, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "open", "name": "Open dialogue" },
            { "id": "close", "name": "Close dialogue" }
          ]
        },
        "out": {
          "connections": [
            { "id": "callToAction1", "name": "First call to action clicked" },
            { "id": "callToAction2", "name": "Second call to action clicked" },
            { "id": "callToAction3", "name": "Third call to action clicked" },
            { "id": "callToAction4", "name": "Fourth call to action clicked" },
            { "id": "closed", "name": "Dialogue closed" }
          ]
        }
      },
      "minimumRoleLevel": 90,
      "maxOnMap": 200,
      "initialMemoryCost": 50,
      "subsequentMemoryCost": 50
    },
    {
      "id": "dialogueAction",
      "name": "Dialogue Action",
      "description": "An action button that can be clicked on in the Dialogue Device",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "activeAndScope", "name": "Active and Scope" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "text",
            "option": {
              "label": "Action Text",
              "description": "Text displayed on the action button",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 64 }
            },
            "categories": ["featured"]
          },
          {
            "key": "group",
            "option": {
              "label": "Dialogue Group",
              "description": "This action will be displayed on all Dialogue devices with the same group name",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "category": "dialogue" }
            },
            "categories": ["featured"]
          },
          {
            "key": "selectChannel",
            "option": {
              "label": "When action clicked, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the action is clicked, the device sends a signal on the selected channel"
            },
            "categories": ["featured"]
          },
          {
            "key": "scope",
            "option": {
              "label": "Active Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the action is activated/deactivated, who does it apply to?"
            },
            "categories": ["activeAndScope"]
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active on Game Start",
              "type": "select",
              "description": "Is this action active when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["activeAndScope"]
          },
          {
            "key": "deactivateAfterUse",
            "option": {
              "label": "Deactivate After Use",
              "type": "select",
              "description": "Deactivate the action after it is clicked",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["activeAndScope"]
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the action when the device receives a signal from the selected channel"
            },
            "categories": ["activeAndScope"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the action when the device receives a signal from the selected channel"
            },
            "categories": ["activeAndScope"]
          }
        ]
      },
      "defaultState": { "active": false },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate action" },
            { "id": "deactivate", "name": "Deactivate action" }
          ]
        },
        "out": {
          "connections": [{ "id": "selected", "name": "Action clicked" }]
        }
      },
      "minimumRoleLevel": 90,
      "maxOnMap": 512,
      "initialMemoryCost": 25,
      "subsequentMemoryCost": 25
    },
    {
      "id": "droppedItem",
      "name": "Dropped Item",
      "optionSchema": {
        "options": [
          {
            "key": "itemId",
            "option": {
              "label": "Item",
              "type": "itemId",
              "validators": [null],
              "props": {}
            }
          },
          {
            "key": "amount",
            "option": {
              "label": "Amount",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "allowEmpty": false }
            }
          },
          {
            "key": "placedByCharacterId",
            "option": {
              "label": "Placed By Character ID",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "useCurrentClipCount",
            "option": {
              "label": "Use Current Clip Count",
              "type": "select",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "currentClip",
            "option": {
              "label": "Amount",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "allowEmpty": false }
            }
          },
          {
            "key": "useCurrentDurability",
            "option": {
              "label": "Use Current Durability",
              "type": "select",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "currentDurability",
            "option": {
              "label": "Amount",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "allowEmpty": false }
            }
          },
          {
            "key": "decay",
            "option": {
              "label": "Amount",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "allowEmpty": false }
            }
          }
        ]
      },
      "defaultState": {
        "visible": false,
        "amount": 0,
        "canBeCollected": false,
        "alreadyCollected": false,
        "fallY": 0
      },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      }
    },
    {
      "id": "endGame",
      "name": "End Game",
      "description": "Nothing lasts forever. End the game with this device",
      "optionSchema": {
        "options": [
          {
            "key": "activateWhenReceivingFrom",
            "option": {
              "label": "End the game when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "End the game when the device receives a signal from the selected channel"
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": { "connections": [{ "id": "endGame", "name": "End the game" }] }
      },
      "maxOnMap": 16
    },
    {
      "id": "endOfGameWidget",
      "name": "End of Game Widget",
      "description": "Create widgets to show information at the end of the game",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "channelsAndActive", "name": "Channels & Active" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "widgetType",
            "option": {
              "label": "Widget Type",
              "description": "What type of the widget should be display?",
              "type": "select",
              "validators": [null],
              "defaultValue": "Statistic",
              "props": {
                "options": [
                  { "value": "Statistic", "name": "Statistic" },
                  { "value": "Image", "name": "Image", "minimumRoleLevel": 90 },
                  { "value": "Game Time", "name": "Game Time" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "widgetPlacement",
            "option": {
              "label": "Widget Placement",
              "description": "Featured widgets sit above all content. Primary widgets sit above the leaderboard. Secondary widgets sit beneath the leaderboard.",
              "type": "select",
              "validators": [null],
              "defaultValue": "Primary",
              "props": {
                "options": [
                  { "value": "Featured", "name": "Featured" },
                  { "value": "Primary", "name": "Primary" },
                  { "value": "Secondary", "name": "Secondary" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "statisticProperty",
            "option": {
              "label": "Property",
              "description": "Name of the property used for the statistic. Should match up with a Property Device.",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Text here...",
                "category": "property"
              },
              "hideIf": [
                [
                  {
                    "key": "widgetType",
                    "compare": "NOT_EQUAL",
                    "value": "Statistic"
                  }
                ]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "gameTimeLabel",
            "option": {
              "label": "Label",
              "description": "Text to display alongside the game time",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." },
              "hideIf": [
                [
                  {
                    "key": "widgetType",
                    "compare": "NOT_EQUAL",
                    "value": "Game Time"
                  }
                ]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "statisticLabel",
            "option": {
              "label": "Label",
              "description": "Text to display alongside the statistic",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." },
              "hideIf": [
                [
                  {
                    "key": "widgetType",
                    "compare": "NOT_EQUAL",
                    "value": "Statistic"
                  }
                ]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "imageStyle",
            "option": {
              "label": "Image Style",
              "description": "How to display the image?",
              "type": "select",
              "validators": [null],
              "defaultValue": "Contain",
              "props": {
                "options": [
                  { "value": "Contain", "name": "Contain" },
                  { "value": "Cover", "name": "Cover" },
                  { "value": "fullWidth", "name": "Full Width" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "widgetType",
                    "compare": "NOT_EQUAL",
                    "value": "Image"
                  }
                ]
              ]
            },
            "minimumRoleLevel": 90
          },
          {
            "key": "imageUrl",
            "option": {
              "label": "Image URL",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." },
              "hideIf": [
                [
                  {
                    "key": "widgetType",
                    "compare": "NOT_EQUAL",
                    "value": "Image"
                  }
                ]
              ]
            },
            "minimumRoleLevel": 90
          },
          {
            "key": "imageHeight",
            "option": {
              "label": "Image Height",
              "description": "How to display the image?",
              "type": "numberInput",
              "defaultValue": 100,
              "validators": [null],
              "props": {
                "min": 50,
                "max": 300,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "widgetType",
                    "compare": "NOT_EQUAL",
                    "value": "Image"
                  }
                ],
                [
                  {
                    "key": "imageStyle",
                    "compare": "EQUAL",
                    "value": "fullWidth"
                  }
                ]
              ]
            },
            "minimumRoleLevel": 90
          },
          {
            "key": "imageBackgroundColor",
            "option": {
              "label": "Image Color",
              "type": "color",
              "defaultValue": "#ffffff",
              "validators": [null],
              "hideIf": [
                [
                  {
                    "key": "widgetType",
                    "compare": "NOT_EQUAL",
                    "value": "Image"
                  }
                ],
                [
                  {
                    "key": "imageStyle",
                    "compare": "EQUAL",
                    "value": "fullWidth"
                  }
                ]
              ]
            },
            "minimumRoleLevel": 90
          },
          {
            "key": "showTo",
            "option": {
              "label": "Show To",
              "description": "Who should see the widget at the end of the game?",
              "type": "select",
              "validators": [null],
              "defaultValue": "all",
              "props": {
                "options": [
                  { "value": "all", "name": "Everybody" },
                  { "value": "nonGameOwners", "name": "Players" },
                  { "value": "gameOwners", "name": "Game Host Only" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "showForModeType",
            "option": {
              "label": "Allowed Mode Type",
              "description": "Will only show when the mode type matches",
              "type": "select",
              "validators": [null],
              "defaultValue": "all",
              "props": {
                "options": [
                  { "name": "All", "value": "all" },
                  { "name": "Live Game", "value": "liveGame" },
                  { "name": "Assignment", "value": "assignment" }
                ],
                "allowEmpty": false
              }
            },
            "minimumRoleLevel": 90
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Is this widget ready to be shown at the end of the game by default?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["channelsAndActive"]
          },
          {
            "key": "scope",
            "option": {
              "label": "Active Scope",
              "type": "select",
              "defaultValue": "player",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When activated/deactivated, who does it apply to?"
            },
            "categories": ["channelsAndActive"]
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the widget when the device receives a signal from the selected channel"
            },
            "categories": ["channelsAndActive"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the widget when the device receives a signal from the selected channel"
            },
            "categories": ["channelsAndActive"]
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate widget" },
            { "id": "deactivate", "name": "Deactivate widget" }
          ]
        }
      },
      "maxOnMap": 24
    },
    {
      "id": "flag",
      "name": "Flag",
      "description": "A flag that can be carried around and used for Capture The Flag games",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "customization", "name": "Customization" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "flagColor",
            "option": {
              "label": "Flag Color",
              "description": "The color of the flag that is spawned",
              "type": "select",
              "validators": [null],
              "defaultValue": "black",
              "props": {
                "options": [
                  { "name": "Black", "value": "black" },
                  { "name": "Blue", "value": "blue" },
                  { "name": "Green", "value": "green" },
                  { "name": "Orange", "value": "orange" },
                  { "name": "Purple", "value": "purple" },
                  { "name": "Red", "value": "red" },
                  { "name": "White", "value": "white" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "owningTeamId",
            "option": {
              "label": "Protecting Team",
              "description": "The team that this flag belongs to. Players on this team won't be able to pick up the flag.",
              "type": "select",
              "validators": [null],
              "defaultValue": "1",
              "props": {
                "options": [
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "useSafeZone",
            "option": {
              "label": "Use Safe Zone",
              "type": "select",
              "description": "If enabled, an area will exist around the flag that will prevent the protecting team from entering it",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "automaticBackToBaseAfterSeconds",
            "option": {
              "label": "Automatic Return To Base",
              "description": "How long (in seconds) the flag will return to the base after it is dropped",
              "type": "numberInput",
              "defaultValue": 15,
              "validators": [null],
              "props": { "min": 1, "max": 999, "step": 1, "allowEmpty": false }
            },
            "categories": ["customization"]
          },
          {
            "key": "otherTeamPickupAlerts",
            "option": {
              "label": "Pickup Alert",
              "type": "select",
              "description": "Send an alert to the protecting team when the flag is picked up",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["customization"]
          },
          {
            "key": "onCapturedBroadcastOnChannel",
            "option": {
              "label": "When flag captured, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the flag is captured, the device sends a signal on the selected channel"
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "captureWhenReceiveFromChannel",
            "option": {
              "label": "Capture the flag when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Capture the flag and return it to the base when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "onPickupBroadcastOnChannel",
            "option": {
              "label": "When flag picked up, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the flag is picked up, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "onPickupFromBaseBroadcastOnChannel",
            "option": {
              "label": "When flag picked up from the base, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the flag is picked up from the base, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "onDropBroadcastOnChannel",
            "option": {
              "label": "When flag dropped, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the flag is dropped, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "dropWhenReceiveFromChannel",
            "option": {
              "label": "Drop the flag when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Force the flag to drop when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "onBackToBaseBroadcastOnChannel",
            "option": {
              "label": "When flag returned to base, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the flag is returned to base, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "onBackToBaseManuallyBroadcastOnChannel",
            "option": {
              "label": "When flag returned to the base manually, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the flag is returned to the base manually, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "backToBaseWhenReceiveFromChannel",
            "option": {
              "label": "Return flag to base when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Force the flag to return to base when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "radius",
            "option": {
              "label": "Hidden Zone Radius",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": {
                "min": 150,
                "max": 1000,
                "step": 1,
                "allowEmpty": false
              },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": { "currentState": "idle", "x": 0, "y": 0 },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "captured", "name": "Flag captured" },
            { "id": "dropped", "name": "Flag dropped" },
            { "id": "pickedUp", "name": "Flag picked up" },
            { "id": "returnedToBase", "name": "Flag returned to base" },
            {
              "id": "returnedToBaseManually",
              "name": "Flag manually returned to base"
            },
            { "id": "pickedUpFromBase", "name": "Flag picked up from base" }
          ]
        },
        "in": {
          "connections": [
            { "id": "capture", "name": "Capture flag" },
            { "id": "drop", "name": "Drop flag" },
            { "id": "backToBase", "name": "Return flag to base" }
          ]
        }
      },
      "maxOnMap": 6,
      "initialMemoryCost": 450,
      "subsequentMemoryCost": 450,
      "supportedMapStyles": ["topDown"]
    },
    {
      "id": "captureFlagZone",
      "name": "Flag Capture Zone",
      "description": "Automatically capture a flag when a player enters the zone with one",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "Featured", "name": "Featured" },
            { "name": "Channels", "id": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "flagColor",
            "option": {
              "label": "Flag Color",
              "description": "The color of the flag the zone listens for. When a player enters the zone with a flag of this color, the flag is captured.",
              "type": "select",
              "validators": [null],
              "defaultValue": "black",
              "props": {
                "options": [
                  { "name": "Black", "value": "black" },
                  { "name": "Blue", "value": "blue" },
                  { "name": "Green", "value": "green" },
                  { "name": "Orange", "value": "orange" },
                  { "name": "Purple", "value": "purple" },
                  { "name": "Red", "value": "red" },
                  { "name": "White", "value": "white" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Featured"]
          },
          {
            "key": "activeOnStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "If enabled, the zone will be active when the game starts",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Featured"]
          },
          {
            "key": "visibleInGame",
            "option": {
              "label": "Visible In Game",
              "type": "select",
              "description": "Is the zone visible to players during the game?",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Featured"]
          },
          {
            "key": "color",
            "option": {
              "label": "Background Color",
              "type": "color",
              "defaultValue": "#FFFFFF",
              "validators": [null]
            }
          },
          {
            "key": "whenCapturedTransmitOnChannel",
            "option": {
              "label": "When flag is captured in the zone, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the flag is captured in the zone, the device sends a signal on the selected channel"
            },
            "categories": ["Featured", "Channels"]
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate zone when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the zone when the device receives a signal from the selected channel"
            },
            "categories": ["Channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate zone when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the zone when the device receives a signal from the selected channel"
            },
            "categories": ["Channels"]
          },
          {
            "key": "width",
            "option": {
              "label": "Width",
              "type": "numberInput",
              "defaultValue": 400,
              "validators": [null],
              "props": { "min": 100, "max": 7000, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Height",
              "type": "numberInput",
              "defaultValue": 300,
              "validators": [null],
              "props": { "min": 100, "max": 7000, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "rotation",
            "option": {
              "label": "Angle",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "allowEmpty": false },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [{ "id": "captured", "name": "Flag captured" }]
        },
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate zone" },
            { "id": "deactivate", "name": "Deactivate zone" }
          ]
        }
      },
      "maxOnMap": 64,
      "initialMemoryCost": 300,
      "subsequentMemoryCost": 200,
      "supportedMapStyles": ["topDown"]
    },
    {
      "id": "guiDevice",
      "name": "Game Overlay",
      "description": "Display text or a button on-screen for players during the game",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "channels", "name": "Channels" },
            { "id": "scope", "name": "Scope" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "type",
            "option": {
              "label": "Overlay Type",
              "description": "Type of overlay to show",
              "type": "select",
              "validators": [null],
              "defaultValue": "Text",
              "props": {
                "options": [
                  { "name": "Text", "value": "Text" },
                  { "name": "Button", "value": "Button" },
                  { "name": "Tracked Item", "value": "Tracked Item" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "position",
            "option": {
              "label": "Overlay Position",
              "description": "Which corner of the screen the overlay will appear in",
              "type": "select",
              "validators": [null],
              "defaultValue": "Top Left",
              "props": {
                "options": [
                  { "name": "Top Left", "value": "Top Left" },
                  { "name": "Top Right", "value": "Top Right" },
                  { "name": "Bottom Left", "value": "Bottom Left" },
                  { "name": "Bottom Right", "value": "Bottom Right" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "text",
            "option": {
              "label": "Overlay Text",
              "description": "The default text shown on the overlay",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 64 },
              "hideIf": [
                [{ "key": "type", "compare": "EQUAL", "value": "Tracked Item" }]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "trackedItemId",
            "option": {
              "label": "Tracked Item",
              "description": "The item & amount to show on the overlay",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "type",
                    "compare": "NOT_EQUAL",
                    "value": "Tracked Item"
                  }
                ]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "showTrackedItemMaximumAmount",
            "option": {
              "label": "Show Tracked Item Maximum Amount",
              "type": "select",
              "description": "If enabled, the maximum amount of the tracked item will be shown (e.g: 70/100)",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "type",
                    "compare": "NOT_EQUAL",
                    "value": "Tracked Item"
                  }
                ]
              ]
            }
          },
          {
            "key": "whenButtonClickedTransmitOnChannel",
            "option": {
              "label": "When button clicked, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When a player clicks the overlay button, the device sends a signal on the selected channel",
              "hideIf": [
                [{ "key": "type", "compare": "NOT_EQUAL", "value": "Button" }]
              ]
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "showOnGameStart",
            "option": {
              "label": "Visible On Game Start",
              "type": "select",
              "description": "Is the overlay visible when the game begins?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "color",
            "option": {
              "label": "Overlay Color",
              "description": "Background color of the overlay",
              "type": "color",
              "defaultValue": "#ffffff",
              "validators": [null],
              "hideIf": [
                [{ "key": "type", "compare": "EQUAL", "value": "Button" }]
              ]
            }
          },
          {
            "key": "contentScope",
            "option": {
              "label": "Content Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the overlay content is updated, who is it applied to?",
              "hideIf": [
                [{ "key": "type", "compare": "EQUAL", "value": "Tracked Item" }]
              ]
            },
            "categories": ["scope"]
          },
          {
            "key": "visibilityScope",
            "option": {
              "label": "Visibility Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the overlay is shown/hidden, who does it apply to?"
            },
            "categories": ["scope"]
          },
          {
            "key": "showWhenReceivingFromChannel",
            "option": {
              "label": "Show overlay when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Show the overlay when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "hideWhenReceivingFromChannel",
            "option": {
              "label": "Hide overlay when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Hide the overlay when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          }
        ]
      },
      "defaultState": { "activationTime": null, "text": "" },
      "codeGridSchema": {
        "allowChannelGrids": true,
        "triggers": [],
        "customBlocks": ["set_gui_text"]
      },
      "wireConfig": {
        "out": {
          "connections": [{ "id": "buttonPressed", "name": "Button pressed" }]
        },
        "in": {
          "connections": [
            { "id": "show", "name": "Show overlay" },
            { "id": "hide", "name": "Hide overlay" }
          ]
        }
      },
      "maxOnMap": 32,
      "initialMemoryCost": 175,
      "subsequentMemoryCost": 175
    },
    {
      "id": "healthGranter",
      "name": "Health Granter",
      "description": "Grant a player health & shield",
      "optionSchema": {
        "options": [
          {
            "key": "amount",
            "option": {
              "label": "Amount",
              "description": "Amount of health or shield to grant",
              "type": "numberInput",
              "defaultValue": 25,
              "validators": [null],
              "props": { "min": 1, "max": 200, "step": 1, "allowEmpty": false }
            }
          },
          {
            "key": "grantType",
            "option": {
              "label": "Grant Type",
              "description": "Grant just health, just shield, or health first, then shield (if leftovers)",
              "type": "select",
              "validators": [null],
              "defaultValue": "health",
              "props": {
                "options": [
                  { "value": "health", "name": "Health" },
                  { "value": "shield", "name": "Shield" },
                  { "value": "healthFirst", "name": "Health, Then Shield" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "grantChannel",
            "option": {
              "label": "Grant health when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Grant health to the triggering player when the device receives a signal from the selected channel"
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [{ "id": "grant", "name": "Grant player health" }]
        }
      },
      "maxOnMap": 100,
      "initialMemoryCost": 20,
      "subsequentMemoryCost": 20
    },
    {
      "id": "imageBillboard",
      "name": "Image",
      "description": "Place down images from the web",
      "optionSchema": {
        "options": [
          {
            "key": "imageUrl",
            "option": {
              "label": "Image URL",
              "type": "textInput",
              "defaultValue": "https://images.pexels.com/photos/189349/pexels-photo-189349.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=100&w=600",
              "validators": [null],
              "props": { "placeholder": "Enter image url here..." }
            }
          },
          {
            "key": "frameColor",
            "option": {
              "label": "Frame Color",
              "type": "select",
              "validators": [],
              "defaultValue": "#212121",
              "props": {
                "options": [
                  { "name": "Dark Gray", "value": "#212121" },
                  { "name": "White", "value": "#fafafa" },
                  { "name": "Blue Gray", "value": "#455a64" },
                  { "name": "Purple", "value": "#8A24E0" },
                  { "name": "Green", "value": "#1b5e20" },
                  { "name": "Blue", "value": "#01579b" },
                  { "name": "Red", "value": "#c62828" },
                  { "name": "Transparent", "value": "Transparent" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "scope",
            "option": {
              "label": "Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "alpha",
            "option": {
              "label": "Alpha",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0.1,
                "max": 1,
                "step": 0.01,
                "allowEmpty": false
              }
            }
          },
          {
            "key": "visibleOnGameStart",
            "option": {
              "label": "Visible On Game Start",
              "type": "select",
              "validators": [null],
              "defaultValue": "Yes",
              "props": {
                "options": [
                  { "name": "Yes", "value": "Yes" },
                  { "name": "No", "value": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "showWhenReceivingFrom",
            "option": {
              "label": "Show When Receiving From...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "hideWhenReceivingFrom",
            "option": {
              "label": "Hide When Receiving From...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "visibleDuringPhase",
            "option": {
              "label": "Visible During Phase",
              "type": "select",
              "validators": [null],
              "defaultValue": "all",
              "props": {
                "options": [
                  { "name": "All", "value": "all" },
                  { "name": "Game", "value": "game" },
                  { "name": "Pre-Game", "value": "preGame" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "width",
            "option": {
              "label": "Width",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": { "min": 50, "max": 800 },
              "hidden": true
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Height",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": { "min": 50, "max": 800 },
              "hidden": true
            }
          },
          {
            "key": "rotation",
            "option": {
              "label": "Rotation",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "min": -360, "max": 360 },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": { "imageUrl": "", "frameColor": "", "visible": true },
      "codeGridSchema": {
        "allowChannelGrids": true,
        "triggers": [{ "type": "wire", "name": "On wire pulse..." }],
        "customBlocks": ["set_image", "set_frame_color"]
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "show", "name": "Show image" },
            { "id": "hide", "name": "Hide image" },
            { "id": "codeGrid", "name": "Run wire pulse block" }
          ]
        }
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "inventoryItemManager",
      "name": "Inventory Item Manager",
      "description": "Keep track of how much of a certain item a player has",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "behavior", "name": "Behavior" },
            { "id": "property", "name": "Properties" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "itemId",
            "option": {
              "label": "Item",
              "description": "The item this device manages",
              "type": "itemId",
              "validators": [null],
              "props": {}
            },
            "categories": ["featured"]
          },
          {
            "key": "useAsDefault",
            "option": {
              "label": "Use By Default",
              "type": "select",
              "description": "Is this manager active for players by default?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "activateWhenReceivingFrom",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate this manager for the triggering player when the device receives a signal from the selected channel"
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "useMaxAmount",
            "option": {
              "label": "Set Maximum Amount",
              "type": "select",
              "description": "Set a specific maximum amount a player is allowed to hold of this item",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["behavior"]
          },
          {
            "key": "maxAmount",
            "option": {
              "label": "Maximum Amount",
              "description": "The maximum amount a player is allowed to hold of this item",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "useMaxAmount",
                    "value": true,
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            },
            "categories": ["behavior"]
          },
          {
            "key": "overrideRespawnBehavior",
            "option": {
              "label": "Override Respawn Behavior",
              "type": "select",
              "description": "Override the default respawn behavior of the item",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["behavior"]
          },
          {
            "key": "respawnBehavior",
            "option": {
              "label": "Respawn Behavior",
              "description": "Decide if the item should be deleted or kept when a player respawns",
              "type": "select",
              "validators": [null],
              "defaultValue": "Keep",
              "props": {
                "options": [
                  { "name": "Keep", "value": "Keep" },
                  { "name": "Delete", "value": "Delete" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "overrideRespawnBehavior",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["behavior"]
          },
          {
            "key": "showAlert",
            "option": {
              "label": "Show Item Alerts",
              "type": "select",
              "description": "When a user collects this item, is an alert shown?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "customItemName",
            "option": {
              "label": "Custom Item Name",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            },
            "minimumRoleLevel": 90
          },
          {
            "key": "customItemDescription",
            "option": {
              "label": "Custom Item Description",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            },
            "minimumRoleLevel": 90
          },
          {
            "key": "clearItemFromInventoryOnChannel",
            "option": {
              "label": "Clear item from inventory when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Remove all of this item from a player's inventory when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "updateProperty",
            "option": {
              "label": "Update Property",
              "type": "select",
              "description": "When the item amount changes, update a property",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["property"]
          },
          {
            "key": "property",
            "option": {
              "label": "Property To Update",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Property...",
                "category": "property",
                "maxLength": 64
              },
              "description": "The name of the property to update. Must be a number property to work correctly.",
              "hideIf": [
                [
                  {
                    "key": "updateProperty",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["property"]
          }
        ]
      },
      "defaultState": { "active": false },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [
          {
            "type": "WHEN_AMOUNT_OF_ITEM_CHANGES",
            "name": "When amount of item changes..."
          }
        ],
        "customBlocks": ["get_amount"]
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate manager" },
            { "id": "clearFromInventory", "name": "Clear item from inventory" }
          ]
        }
      },
      "maxOnMap": 75,
      "initialMemoryCost": 215,
      "subsequentMemoryCost": 215
    },
    {
      "id": "itemGranter",
      "name": "Item Granter",
      "description": "Grant/remove items from a player's inventory",
      "optionSchema": {
        "categories": {
          "categories": [{ "id": "featured", "name": "Featured" }],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "itemId",
            "option": {
              "label": "Item To Grant",
              "description": "Select the item granted to the player",
              "type": "itemId",
              "validators": [null],
              "props": {}
            },
            "categories": ["featured"]
          },
          {
            "key": "itemChange",
            "option": {
              "label": "Amount To Grant",
              "description": "How much of the selected item should be granted/taken away?",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": -999999999999999,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "grantWhenReceivingFromChannel",
            "option": {
              "label": "Grant item when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Grant the item to the triggering player when the device receives a signal from the selected channel"
            },
            "categories": ["featured"]
          },
          {
            "key": "fullStrategy",
            "option": {
              "label": "Grant Strategy",
              "description": "When the inventory is full, how should the item be granted?",
              "type": "select",
              "validators": [null],
              "defaultValue": "overflow",
              "props": {
                "options": [
                  { "name": "Overflow", "value": "overflow" },
                  { "name": "Grant Safe Amount", "value": "safeAmount" },
                  { "name": "Don't Grant", "value": "noGrant" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "initialWeaponAmmo",
            "option": {
              "label": "Initial Gadget Projectiles",
              "description": "If granting a gadget, set a custom amount of projectiles loaded into the gadget by default. If left empty, the gadget's default amount will be used.",
              "type": "numberInput",
              "validators": [null],
              "props": { "min": 0, "max": 999, "step": 1, "allowEmpty": true }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": true,
        "triggers": [
          {
            "type": "WHEN_GRANTED",
            "name": "When item granted to player...",
            "blockedCustomBlocks": ["grant", "grant_custom"]
          },
          { "type": "wire", "name": "On wire pulse..." }
        ],
        "customBlocks": ["grant", "grant_custom"]
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "grant", "name": "Grant item" },
            { "id": "codeGrid", "name": "Run wire pulse block" }
          ]
        }
      },
      "maxOnMap": 300,
      "initialMemoryCost": 35,
      "subsequentMemoryCost": 35
    },
    {
      "id": "itemImage",
      "name": "Item Image",
      "description": "Display an image of an item on the map",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "availability", "name": "Availability" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "itemId",
            "option": {
              "label": "Item",
              "description": "Select an item to display an image of",
              "type": "itemId",
              "validators": [null],
              "props": {}
            },
            "categories": ["featured"]
          },
          {
            "key": "outline",
            "option": {
              "label": "Outline",
              "type": "select",
              "description": "Show an outline around the item",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "outlineColor",
            "option": {
              "label": "Outline Color",
              "description": "Set the color of item's outline",
              "type": "color",
              "defaultValue": "#ffffff",
              "validators": [null],
              "hideIf": [
                [{ "key": "outline", "compare": "NOT_EQUAL", "value": true }]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "outlineSize",
            "option": {
              "label": "Outline Size",
              "description": "Select what strategy to use for the size of the outline",
              "type": "select",
              "validators": [null],
              "defaultValue": "automatic",
              "props": {
                "options": [
                  { "value": "automatic", "name": "Automatic" },
                  { "value": "custom", "name": "Custom" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "outline", "compare": "NOT_EQUAL", "value": true }]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "customOutlineSize",
            "option": {
              "label": "Custom Outline Size",
              "description": "Set the size of the item outline",
              "type": "numberInput",
              "defaultValue": 3,
              "validators": [null],
              "props": { "min": 1, "max": 50, "step": 1, "allowEmpty": false },
              "hideIf": [
                [{ "key": "outline", "compare": "NOT_EQUAL", "value": true }],
                [
                  {
                    "key": "outlineSize",
                    "compare": "NOT_EQUAL",
                    "value": "custom"
                  }
                ]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "visibleOnGameStart",
            "option": {
              "label": "Visible On Game Start",
              "type": "select",
              "description": "Is the item image visible when the game begins?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["availability"]
          },
          {
            "key": "scope",
            "option": {
              "label": "Visibility Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the item image is shown/hidden, who does it apply to?"
            },
            "categories": ["availability"]
          },
          {
            "key": "showChannel",
            "option": {
              "label": "Show when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Show the item image when the device receives a signal from the selected channel"
            },
            "categories": ["availability"]
          },
          {
            "key": "hideChannel",
            "option": {
              "label": "Hide when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Hide the item image when the device receives a signal from the selected channel"
            },
            "categories": ["availability"]
          },
          {
            "key": "size",
            "option": {
              "label": "Size",
              "type": "numberInput",
              "defaultValue": 64,
              "validators": [null],
              "props": { "min": 32, "max": 512, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "angle",
            "option": {
              "label": "Angle",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "allowEmpty": false },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": { "visible": true },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "show", "name": "Show item image" },
            { "id": "hide", "name": "Hide item image" }
          ]
        }
      },
      "maxOnMap": 1024,
      "initialMemoryCost": 15,
      "subsequentMemoryCost": 15
    },
    {
      "id": "itemSpawner",
      "name": "Item Spawner",
      "description": "Spawn items for players to collect",
      "optionSchema": {
        "categories": {
          "categories": [{ "id": "featured", "name": "Featured" }],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "itemId",
            "option": {
              "label": "Item",
              "description": "The item to spawn for players to collect",
              "type": "itemId",
              "validators": [null],
              "props": {}
            },
            "categories": ["featured"]
          },
          {
            "key": "itemAmount",
            "option": {
              "label": "Amount Of Item",
              "description": "The amount of the selected item player receive when they collect it",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "msTimeBetweenSpawns",
            "option": {
              "label": "Time Between Spawns",
              "description": "When the item is collected, how long should it take before the item respawns?",
              "type": "select",
              "validators": [null],
              "defaultValue": 1000,
              "props": {
                "options": [
                  { "name": "Instant", "value": 0 },
                  { "name": "1 Second", "value": 1000 },
                  { "name": "3 Seconds", "value": 3000 },
                  { "name": "5 Seconds", "value": 5000 },
                  { "name": "10 Seconds", "value": 10000 },
                  { "name": "30 Seconds", "value": 30000 },
                  { "name": "1 Minute", "value": 60000 },
                  { "name": "2 Minutes", "value": 120000 },
                  { "name": "3 Minutes", "value": 180000 },
                  { "name": "5 Minutes", "value": 300000 },
                  { "name": "10 Minutes", "value": 600000 }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "scope",
            "option": {
              "label": "Respawn Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "The time between spawns is applied to who?"
            }
          }
        ]
      },
      "defaultState": { "itemAvailableTimestamp": 0 },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "maxOnMap": 100,
      "initialMemoryCost": 20,
      "subsequentMemoryCost": 8
    },
    {
      "id": "knockoutManager",
      "name": "Knockout Manager",
      "description": "Drop items and run actions when knockouts occur",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "itemDrop", "name": "Items" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "target",
            "option": {
              "label": "Knockout Target",
              "description": "What entity to listen for knockouts",
              "type": "select",
              "validators": [null],
              "defaultValue": "player",
              "props": {
                "options": [
                  { "name": "Player", "value": "player" },
                  { "name": "Sentry", "value": "sentry" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "onKnockoutChannel",
            "option": {
              "label": "When target knocked out, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the specified target is knocked out, the device sends a signal on the selected channel"
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "grantItem",
            "option": {
              "label": "Grant Item",
              "type": "select",
              "description": "Grant an item to the player when they are knocked out",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["itemDrop"]
          },
          {
            "key": "itemId",
            "option": {
              "label": "Item To Grant",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [{ "key": "grantItem", "compare": "NOT_EQUAL", "value": true }]
              ]
            },
            "categories": ["itemDrop"]
          },
          {
            "key": "itemAmount",
            "option": {
              "label": "Item Amount",
              "description": "The amount of the item to grant",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "grantItem", "compare": "NOT_EQUAL", "value": true }]
              ]
            },
            "categories": ["itemDrop"]
          },
          {
            "key": "grantStrategy",
            "option": {
              "label": "Grant Strategy",
              "description": "How to grant the dropped item",
              "type": "select",
              "validators": [null],
              "defaultValue": "grant",
              "props": {
                "options": [
                  { "name": "Grant Into Inventory", "value": "grant" },
                  { "name": "Drop On Player", "value": "onPlayer" },
                  {
                    "name": "Drop On Knocked Out Player",
                    "value": "onKnockedOutLocation"
                  }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "grantItem", "compare": "NOT_EQUAL", "value": true }]
              ]
            },
            "categories": ["itemDrop"]
          },
          {
            "key": "dropChance",
            "option": {
              "label": "Use Drop Chance",
              "type": "select",
              "description": "Randomly determine if the item should be dropped",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "grantItem", "compare": "NOT_EQUAL", "value": true }]
              ]
            },
            "categories": ["itemDrop"]
          },
          {
            "key": "dropPercentage",
            "option": {
              "label": "Drop Chance",
              "description": "The percentage chance of dropping the item",
              "type": "numberInput",
              "defaultValue": 50,
              "validators": [null],
              "props": { "min": 1, "max": 99, "step": 1, "allowEmpty": false },
              "hideIf": [
                [{ "key": "grantItem", "compare": "NOT_EQUAL", "value": true }],
                [{ "key": "dropChance", "compare": "NOT_EQUAL", "value": true }]
              ]
            },
            "categories": ["itemDrop"]
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Is this knockout manager active when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "scope",
            "option": {
              "label": "Active Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When activated/deactivated, who does it apply to?"
            }
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [{ "type": "onKnockout", "name": "On knockout..." }],
        "customBlocks": [
          "knockout_manager_other_character_message_broadcaster",
          "knockout_manager_other_character_get_property",
          "knockout_manager_other_character_name",
          "knockout_manager_other_character_set_property",
          "knockout_manager_other_character_team_number"
        ]
      },
      "wireConfig": {
        "out": {
          "connections": [{ "id": "knockout", "name": "Target knocked out" }]
        },
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate manager" },
            { "id": "deactivate", "name": "Deactivate manager" }
          ]
        }
      },
      "maxOnMap": 10
    },
    {
      "id": "laserBeam",
      "name": "Laser Beam",
      "description": "A laser that deals damage to players that touch it",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "damageToDeal",
            "option": {
              "label": "Damage Dealt",
              "description": "Amount of damage dealt to players when hit by the laser beam",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 500000,
                "step": 1,
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "appearance",
            "option": {
              "label": "Style",
              "description": "Change the style of the laser beam emitters",
              "type": "select",
              "validators": [null],
              "defaultValue": "Standard",
              "props": {
                "options": [
                  { "name": "Standard", "value": "Standard" },
                  { "name": "Plant", "value": "Plant" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "laserColor",
            "option": {
              "label": "Laser Color",
              "type": "color",
              "defaultValue": "#ff0000",
              "validators": [null]
            },
            "categories": ["featured"]
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Is the laser on when the game begins?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "laserGroup",
            "option": {
              "label": "Laser Group",
              "description": "Set the name of a group this laser belongs to",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Group name...",
                "category": "laserGroup"
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "scope",
            "option": {
              "label": "Laser Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the laser is activated/deactivated, who does it apply to?"
            }
          },
          {
            "key": "transmitOnWhenHitPlayer",
            "option": {
              "label": "When player hit, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When a player is hit, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "activateOnChannel",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the laser when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "deactivateOnChannel",
            "option": {
              "label": "Deactivate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the laser when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "angle",
            "option": {
              "label": "Angle",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "distance",
            "option": {
              "label": "Distance",
              "type": "numberInput",
              "defaultValue": 350,
              "validators": [null],
              "props": { "min": 75, "max": 3500, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "showPath",
            "option": {
              "label": "Show Path",
              "type": "select",
              "description": "When the laser is inactive, show a dotted path showing the start & end points",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "showOrigin",
            "option": {
              "label": "Show Start Point",
              "type": "select",
              "description": "Show the starting point of the laser beam",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "showEndPoint",
            "option": {
              "label": "Show End Point",
              "type": "select",
              "description": "Show the ending point of the laser beam",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          }
        ]
      },
      "defaultState": { "active": true },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [{ "id": "hitPlayer", "name": "Player hit by laser" }]
        },
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate laser" },
            { "id": "deactivate", "name": "Deactivate laser" }
          ]
        }
      },
      "maxOnMap": 100,
      "initialMemoryCost": 250,
      "subsequentMemoryCost": 75
    },
    {
      "id": "laserBeamManager",
      "name": "Laser Beam Manager",
      "description": "Activate/deactivate multiple lasers at the same time",
      "optionSchema": {
        "options": [
          {
            "key": "laserGroup",
            "option": {
              "label": "Laser Group",
              "description": "The group of lasers the manager will update. Leave empty to update all lasers without a group.",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Group name...",
                "category": "laserGroup"
              }
            }
          },
          {
            "key": "autoSwitch",
            "option": {
              "label": "Auto-Switch",
              "type": "select",
              "description": "Automatically active & deactivate lasers at a set interval",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "activatedDuration",
            "option": {
              "label": "Activated Duration",
              "description": "How long (in seconds) the lasers will be activated",
              "type": "numberInput",
              "defaultValue": 2,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 60,
                "step": 0.1,
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "autoSwitch", "value": false, "compare": "EQUAL" }]
              ]
            }
          },
          {
            "key": "deactivatedDuration",
            "option": {
              "label": "Deactivated Duration",
              "description": "How long (in seconds) the lasers will be deactivated",
              "type": "numberInput",
              "defaultValue": 3,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 60,
                "step": 0.1,
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "autoSwitch", "value": false, "compare": "EQUAL" }]
              ]
            }
          },
          {
            "key": "activateOnChannel",
            "option": {
              "label": "Activate lasers when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the managed lasers when the device receives a signal from the selected channel"
            }
          },
          {
            "key": "deactivateOnChannel",
            "option": {
              "label": "Deactivate lasers when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the managed lasers when the device receives a signal from the selected channel"
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate managed lasers" },
            { "id": "deactivate", "name": "Deactivate managed lasers" }
          ]
        }
      },
      "maxOnMap": 16,
      "initialMemoryCost": 32,
      "subsequentMemoryCost": 32
    },
    {
      "id": "lifecycle",
      "name": "Lifecycle",
      "description": "Run actions when lifecycle events occur in-game",
      "optionSchema": {
        "options": [
          {
            "key": "event",
            "option": {
              "label": "Event",
              "description": "Event the device listens for",
              "type": "select",
              "validators": [null],
              "defaultValue": "Game Starts",
              "props": {
                "options": [
                  { "name": "Game Start", "value": "Game Starts" },
                  {
                    "name": "Player Starts Moving",
                    "value": "characterStartsMoving",
                    "minimumRoleLevel": 90
                  },
                  {
                    "name": "Player Stops Moving",
                    "value": "characterStopsMoving",
                    "minimumRoleLevel": 90
                  },
                  {
                    "name": "Player Joins Late",
                    "value": "characterJoinsLate"
                  },
                  {
                    "name": "Player Knocks Out",
                    "value": "characterKnocksOut"
                  },
                  {
                    "name": "Player Knocked Out",
                    "value": "characterKnockedOut"
                  },
                  {
                    "name": "Player Fires Gadget",
                    "value": "characterFiresGadget"
                  },
                  {
                    "name": "Player Destroys Terrain",
                    "value": "characterDestroysTerrain",
                    "minimumRoleLevel": 90
                  },
                  {
                    "name": "Player Places Terrain",
                    "value": "characterPlacesTerrain",
                    "minimumRoleLevel": 90
                  }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "transmitOnChannel",
            "option": {
              "label": "When event occurs, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When when the event occurs, the device sends a signal on the selected channel"
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [{ "id": "eventOccurs", "name": "Event occurs" }]
        }
      },
      "maxOnMap": 16,
      "initialMemoryCost": 50,
      "subsequentMemoryCost": 50
    },
    {
      "id": "mapOptions",
      "name": "Map Options",
      "description": "Modify core game options",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "teams", "name": "Teams" },
            { "id": "healthAndShield", "name": "Health & Shield" },
            { "id": "score", "name": "Score" },
            { "id": "items", "name": "Items" },
            { "id": "ui", "name": "UI" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "backgroundTerrain",
            "option": {
              "label": "Background Terrain",
              "description": "Set the background of the map",
              "type": "terrainId",
              "defaultValue": "Grass",
              "props": { "allowEmpty": false },
              "validators": [null]
            },
            "categories": ["featured"],
            "supportedMapStyles": ["topDown"]
          },
          {
            "key": "platformerBackground",
            "option": {
              "label": "Background",
              "description": "Set the background of the map",
              "type": "select",
              "validators": [null],
              "defaultValue": "sky",
              "props": {
                "options": [
                  { "name": "Sky", "value": "sky" },
                  { "name": "Pixel Galaxy", "value": "pixelStar" }
                ],
                "allowEmpty": false
              }
            },
            "minimumRoleLevel": 90,
            "categories": ["featured"]
          },
          {
            "key": "bottomTerrain",
            "option": {
              "label": "Floor Terrain",
              "description": "Set the floor of the map",
              "type": "terrainId",
              "defaultValue": "platformer_grass",
              "props": { "allowEmpty": false },
              "validators": [null]
            },
            "categories": ["featured"],
            "supportedMapStyles": ["platformer"]
          },
          {
            "key": "gameClockMode",
            "option": {
              "label": "Game Clock",
              "description": "Set the game clock mode",
              "type": "select",
              "validators": [null],
              "defaultValue": "Off",
              "props": {
                "options": [
                  { "name": "Off", "value": "Off" },
                  { "name": "Count Down", "value": "Count Down" },
                  { "name": "Count Up", "value": "Count Up" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "countdownTimeMinutes",
            "option": {
              "label": "Countdown Duration",
              "description": "How long (in minutes) the game will last. The game automatically ends when the countdown completes.",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": { "min": 1, "max": 60, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "gameClockMode",
                    "compare": "NOT_EQUAL",
                    "value": "Count Down"
                  }
                ]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "allowedGameClockModeType",
            "option": {
              "label": "Use Game Clock For Mode Type",
              "description": "Will only use the game clock when the mode type matches",
              "type": "select",
              "validators": [null],
              "defaultValue": "liveGame",
              "props": {
                "options": [
                  { "name": "All", "value": "all" },
                  { "name": "Live Game", "value": "liveGame" },
                  { "name": "Assignment", "value": "assignment" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "gameClockMode", "compare": "EQUAL", "value": "Off" }]
              ]
            },
            "categories": ["featured"],
            "minimumRoleLevel": 90
          },
          {
            "key": "musicUrl",
            "option": {
              "label": "Game Music URL",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Music URL here..." }
            },
            "categories": ["featured"],
            "minimumRoleLevel": 90
          },
          {
            "key": "presetMusicId",
            "option": {
              "label": "Music Track",
              "description": "Select the music track played when the game begins",
              "type": "select",
              "validators": [null],
              "defaultValue": "the_shakedown",
              "props": {
                "options": [
                  { "name": "None", "value": "NONE" },
                  { "name": "Creative Funk", "value": "the_shakedown" },
                  { "name": "Spy", "value": "anchor_crawl" },
                  { "name": "Jazz Club", "value": "stay_up_high" },
                  { "name": "Peaceful Guitar", "value": "whisperer" },
                  { "name": "Epic Battle", "value": "heroes_are_back" },
                  { "name": "Hip Hop - Neon", "value": "all_out" },
                  { "name": "Hip Hop - Movement", "value": "four_am" },
                  { "name": "Rock Band", "value": "inferno" },
                  { "name": "Spooky", "value": "demogorgon" },
                  { "name": "Wild West", "value": "surfin_versailles" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "musicVolume",
            "option": {
              "label": "Music Volume",
              "type": "numberInput",
              "defaultValue": 100,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [[{ "key": "musicUrl", "compare": "EQUAL" }]]
            },
            "categories": ["featured"],
            "minimumRoleLevel": 90
          },
          {
            "key": "minPlayers",
            "option": {
              "label": "Allow Solo Play",
              "description": "Can the game host start the game with only themselves?",
              "type": "select",
              "validators": [null],
              "defaultValue": 1,
              "props": {
                "options": [
                  { "name": "Yes", "value": 1 },
                  { "name": "No", "value": 2 }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "teams",
            "option": {
              "label": "Teams",
              "description": "Set the team mode",
              "type": "select",
              "validators": [null],
              "defaultValue": "Free For All",
              "props": {
                "options": [
                  { "name": "Free For All", "value": "Free For All" },
                  { "name": "Cooperative", "value": "Cooperative" },
                  { "name": "Split Into Size", "value": "Split Into Size" },
                  {
                    "name": "Specific Team Amount",
                    "value": "Specific Team Amount"
                  }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["teams"]
          },
          {
            "key": "teamSize",
            "option": {
              "label": "Team Size",
              "description": "Set the number of players per team",
              "type": "select",
              "validators": [null],
              "defaultValue": 4,
              "props": {
                "options": [
                  { "name": "2", "value": 2 },
                  { "name": "3", "value": 3 },
                  { "name": "4", "value": 4 },
                  { "name": "5", "value": 5 },
                  { "name": "6", "value": 6 },
                  { "name": "7", "value": 7 },
                  { "name": "8", "value": 8 },
                  { "name": "9", "value": 9 },
                  { "name": "10", "value": 10 },
                  { "name": "11", "value": 11 },
                  { "name": "12", "value": 12 },
                  { "name": "13", "value": 13 },
                  { "name": "14", "value": 14 },
                  { "name": "15", "value": 15 },
                  { "name": "16", "value": 16 },
                  { "name": "17", "value": 17 },
                  { "name": "18", "value": 18 },
                  { "name": "19", "value": 19 },
                  { "name": "20", "value": 20 },
                  { "name": "21", "value": 21 },
                  { "name": "22", "value": 22 },
                  { "name": "23", "value": 23 },
                  { "name": "24", "value": 24 },
                  { "name": "25", "value": 25 },
                  { "name": "26", "value": 26 },
                  { "name": "27", "value": 27 },
                  { "name": "28", "value": 28 },
                  { "name": "29", "value": 29 },
                  { "name": "30", "value": 30 }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "teams",
                    "compare": "NOT_EQUAL",
                    "value": "Split Into Size"
                  }
                ]
              ]
            },
            "categories": ["teams"]
          },
          {
            "key": "teamsNumber",
            "option": {
              "label": "Number Of Teams",
              "description": "Set the number of teams players are split into",
              "type": "select",
              "validators": [null],
              "defaultValue": 4,
              "props": {
                "options": [
                  { "name": "2", "value": 2 },
                  { "name": "3", "value": 3 },
                  { "name": "4", "value": 4 },
                  { "name": "5", "value": 5 },
                  { "name": "6", "value": 6 },
                  { "name": "7", "value": 7 },
                  { "name": "8", "value": 8 },
                  { "name": "9", "value": 9 },
                  { "name": "10", "value": 10 },
                  { "name": "11", "value": 11 },
                  { "name": "12", "value": 12 },
                  { "name": "13", "value": 13 },
                  { "name": "14", "value": 14 },
                  { "name": "15", "value": 15 },
                  { "name": "16", "value": 16 },
                  { "name": "17", "value": 17 },
                  { "name": "18", "value": 18 },
                  { "name": "19", "value": 19 },
                  { "name": "20", "value": 20 },
                  { "name": "21", "value": 21 },
                  { "name": "22", "value": 22 },
                  { "name": "23", "value": 23 },
                  { "name": "24", "value": 24 },
                  { "name": "25", "value": 25 },
                  { "name": "26", "value": 26 },
                  { "name": "27", "value": 27 },
                  { "name": "28", "value": 28 },
                  { "name": "29", "value": 29 },
                  { "name": "30", "value": 30 }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "teams",
                    "compare": "NOT_EQUAL",
                    "value": "Specific Team Amount"
                  }
                ]
              ]
            },
            "categories": ["teams"]
          },
          {
            "key": "splitModeForSpecificTeamAmount",
            "option": {
              "label": "Team Placement",
              "description": "How are players split into teams?",
              "type": "select",
              "validators": [null],
              "defaultValue": "Split Evenly",
              "props": {
                "options": [
                  { "name": "Split Evenly", "value": "Split Evenly" },
                  {
                    "name": "Randomly (Possible Uneven Teams)",
                    "value": "Random"
                  },
                  {
                    "name": "Custom",
                    "value": "Custom",
                    "minimumRoleLevel": 90
                  }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "teams",
                    "compare": "NOT_EQUAL",
                    "value": "Specific Team Amount"
                  }
                ]
              ]
            },
            "categories": ["teams"]
          },
          {
            "key": "latePlayersJoinAsSpectators",
            "option": {
              "label": "Late Players Join Spectators",
              "type": "select",
              "description": "For players that join after the game has started, should they join as spectators?",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["teams"]
          },
          {
            "key": "allyIndicator",
            "option": {
              "label": "Ally Indicators",
              "description": "Are ally indicators enabled? The ally indicator show friendly players with green text, and puts an arrow over their Gims.",
              "type": "select",
              "validators": [null],
              "defaultValue": "Disabled",
              "props": {
                "options": [
                  { "value": "Disabled", "name": "Disabled" },
                  { "value": "Enabled", "name": "Enabled" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["teams"]
          },
          {
            "key": "enemyIndicator",
            "option": {
              "label": "Enemy Indicators",
              "description": "Are enemy indicators enabled? The enemy indicator shows enemy players with red text.",
              "type": "select",
              "validators": [null],
              "defaultValue": "Disabled",
              "props": {
                "options": [
                  { "value": "Disabled", "name": "Disabled" },
                  { "value": "Enabled", "name": "Enabled" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["teams"]
          },
          {
            "key": "allowGameOwnerToSpectate",
            "option": {
              "label": "Allow Game Host to Spectate",
              "type": "select",
              "description": "Is the game host allowed to spectate or are they forced to join?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["teams"]
          },
          {
            "key": "healthMode",
            "option": {
              "label": "Health Mode",
              "description": "Set the health mode for the game",
              "type": "select",
              "validators": [null],
              "defaultValue": "healthAndShield",
              "props": {
                "options": [
                  { "name": "Health & Shield", "value": "healthAndShield" },
                  { "name": "Fragility", "value": "fragility" }
                ],
                "allowEmpty": false
              }
            },
            "minimumRoleLevel": 90,
            "categories": ["healthAndShield"]
          },
          {
            "key": "maxHealth",
            "option": {
              "label": "Max Health",
              "description": "Maximum amount of health a player can have",
              "type": "select",
              "validators": [null],
              "defaultValue": 100,
              "props": {
                "options": [
                  { "name": "1", "value": 1 },
                  { "name": "10", "value": 10 },
                  { "name": "15", "value": 15 },
                  { "name": "20", "value": 20 },
                  { "name": "25", "value": 25 },
                  { "name": "30", "value": 30 },
                  { "name": "40", "value": 40 },
                  { "name": "50", "value": 50 },
                  { "name": "60", "value": 60 },
                  { "name": "75", "value": 75 },
                  { "name": "100", "value": 100 },
                  { "name": "125", "value": 125 },
                  { "name": "150", "value": 150 },
                  { "name": "200", "value": 200 },
                  { "name": "250", "value": 250 },
                  { "name": "300", "value": 300 },
                  { "name": "350", "value": 350 },
                  { "name": "400", "value": 400 },
                  { "name": "450", "value": 450 },
                  { "name": "500", "value": 500 },
                  { "name": "750", "value": 750 },
                  { "name": "1000", "value": 1000 },
                  { "name": "2000", "value": 2000 },
                  { "name": "5000", "value": 5000 }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "healthMode",
                    "compare": "NOT_EQUAL",
                    "value": "healthAndShield"
                  }
                ]
              ]
            },
            "categories": ["healthAndShield"]
          },
          {
            "key": "maxShield",
            "option": {
              "label": "Max Shield",
              "description": "Maximum amount of shield a player can have",
              "type": "select",
              "validators": [null],
              "defaultValue": 100,
              "props": {
                "options": [
                  { "name": "1", "value": 1 },
                  { "name": "10", "value": 10 },
                  { "name": "15", "value": 15 },
                  { "name": "20", "value": 20 },
                  { "name": "25", "value": 25 },
                  { "name": "30", "value": 30 },
                  { "name": "40", "value": 40 },
                  { "name": "50", "value": 50 },
                  { "name": "60", "value": 60 },
                  { "name": "75", "value": 75 },
                  { "name": "100", "value": 100 },
                  { "name": "125", "value": 125 },
                  { "name": "150", "value": 150 },
                  { "name": "200", "value": 200 },
                  { "name": "250", "value": 250 },
                  { "name": "300", "value": 300 },
                  { "name": "350", "value": 350 },
                  { "name": "400", "value": 400 },
                  { "name": "450", "value": 450 },
                  { "name": "500", "value": 500 },
                  { "name": "750", "value": 750 },
                  { "name": "1000", "value": 1000 },
                  { "name": "2000", "value": 2000 },
                  { "name": "5000", "value": 5000 }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "healthMode",
                    "compare": "NOT_EQUAL",
                    "value": "healthAndShield"
                  }
                ]
              ]
            },
            "categories": ["healthAndShield"]
          },
          {
            "key": "startingHealth",
            "option": {
              "label": "Starting Health",
              "description": "What percentage of max health a player has at the start of the game",
              "type": "select",
              "validators": [null],
              "defaultValue": 100,
              "props": {
                "options": [
                  { "name": "1%", "value": 1 },
                  { "name": "25%", "value": 25 },
                  { "name": "50%", "value": 50 },
                  { "name": "75%", "value": 75 },
                  { "name": "100%", "value": 100 }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "healthMode",
                    "compare": "NOT_EQUAL",
                    "value": "healthAndShield"
                  }
                ]
              ]
            },
            "categories": ["healthAndShield"]
          },
          {
            "key": "startingShield",
            "option": {
              "label": "Starting Shield",
              "description": "What percentage of max shield a player has at the start of the game",
              "type": "select",
              "validators": [null],
              "defaultValue": 100,
              "props": {
                "options": [
                  { "name": "0%", "value": 0 },
                  { "name": "25%", "value": 25 },
                  { "name": "50%", "value": 50 },
                  { "name": "75%", "value": 75 },
                  { "name": "100%", "value": 100 }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "healthMode",
                    "compare": "NOT_EQUAL",
                    "value": "healthAndShield"
                  }
                ]
              ]
            },
            "categories": ["healthAndShield"]
          },
          {
            "key": "startingFragility",
            "option": {
              "label": "Starting Fragility",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "min": 0, "max": 999, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "healthMode",
                    "compare": "NOT_EQUAL",
                    "value": "fragility"
                  }
                ]
              ]
            },
            "minimumRoleLevel": 90,
            "categories": ["healthAndShield"]
          },
          {
            "key": "showHealthAndShield",
            "option": {
              "label": "Show Health and Shield",
              "type": "select",
              "description": "Show the health & shield bar",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "healthMode",
                    "compare": "EQUAL",
                    "value": "fragility"
                  }
                ]
              ]
            },
            "categories": ["healthAndShield"]
          },
          {
            "key": "spawnImmunity",
            "option": {
              "label": "Spawn Immunity",
              "description": "How long (in seconds) players are immune after respawning",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": { "min": 0, "max": 120, "step": 1, "allowEmpty": false }
            },
            "categories": ["healthAndShield"]
          },
          {
            "key": "playerVsPlayerDamageEnabled",
            "option": {
              "label": "PvP Damage Enabled",
              "type": "select",
              "description": "Are players allowed to damage each other?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["healthAndShield"]
          },
          {
            "key": "interactiveItemsSlots",
            "option": {
              "label": "Item Slots",
              "description": "How many slots players have for gadgets & usable items",
              "type": "select",
              "validators": [null],
              "defaultValue": 3,
              "props": {
                "options": [
                  { "name": "None", "value": 0 },
                  { "name": "1", "value": 1 },
                  { "name": "2", "value": 2 },
                  { "name": "3", "value": 3 },
                  { "name": "4", "value": 4 },
                  { "name": "5", "value": 5 }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["items"]
          },
          {
            "key": "infiniteAmmo",
            "option": {
              "label": "Infinite Refills",
              "type": "select",
              "description": "Can players refill gadgets without having the required resource?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["items"]
          },
          {
            "key": "instantReload",
            "option": {
              "label": "Refill Duration",
              "description": "When players need to refill their gadgets, how long does it take?",
              "type": "select",
              "validators": [null],
              "defaultValue": false,
              "props": {
                "options": [
                  { "name": "Instant", "value": true },
                  { "name": "Default", "value": false }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["items"]
          },
          {
            "key": "allowWeaponDrop",
            "option": {
              "label": "Allow Gadget Drop",
              "type": "select",
              "description": "Are players allowed to drop gadgets from their inventory?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["items"]
          },
          {
            "key": "allowItemDrop",
            "option": {
              "label": "Allow Usable Drop",
              "type": "select",
              "description": "Are players allowed to drop usable items from their inventory?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["items"]
          },
          {
            "key": "allowResourceDrop",
            "option": {
              "label": "Allow Resource Drop",
              "type": "select",
              "description": "Are players allowed to drop resources from their inventory?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["items"]
          },
          {
            "key": "weaponRespawnBehavior",
            "option": {
              "label": "Gadget Respawn Behavior",
              "description": "Set what happens to a player's gadget when they respawn",
              "type": "select",
              "validators": [null],
              "defaultValue": "Keep",
              "props": {
                "options": [
                  { "name": "Keep", "value": "Keep" },
                  { "name": "Delete", "value": "Delete" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["items"]
          },
          {
            "key": "itemRespawnBehavior",
            "option": {
              "label": "Item Respawn Behavior",
              "description": "Set what happens to a player's usable items when they respawn",
              "type": "select",
              "validators": [null],
              "defaultValue": "Keep",
              "props": {
                "options": [
                  { "name": "Keep", "value": "Keep" },
                  { "name": "Delete", "value": "Delete" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["items"]
          },
          {
            "key": "resourceRespawnBehavior",
            "option": {
              "label": "Resource Respawn Behavior",
              "description": "Set what happens to a player's resources when they respawn",
              "type": "select",
              "validators": [null],
              "defaultValue": "Keep",
              "props": {
                "options": [
                  { "name": "Keep", "value": "Keep" },
                  { "name": "Delete", "value": "Delete" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["items"]
          },
          {
            "key": "infiniteDurability",
            "option": {
              "label": "Infinite Durability",
              "type": "select",
              "description": "Are gadgets that use durability, such as pickaxes, indestructible?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["items"]
          },
          {
            "key": "droppedItemScope",
            "option": {
              "label": "Dropped Item Visibility",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When a player drops an item, who is it visible to?",
              "hideIf": [
                [{ "key": "allowItemDrop", "compare": "EQUAL", "value": false }]
              ]
            },
            "categories": ["items"]
          },
          {
            "key": "useScoreboard",
            "option": {
              "label": "Use Leaderboard",
              "type": "select",
              "description": "Is the leaderboard enabled & visible in-game?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["score"]
          },
          {
            "key": "scoreType",
            "option": {
              "label": "Score Type",
              "description": "Set what the leaderboard tracks",
              "type": "select",
              "validators": [null],
              "defaultValue": "Knockout",
              "props": {
                "options": [
                  { "name": "Knockouts", "value": "Knockout" },
                  { "name": "Amount Of Specific Item", "value": "Resource" },
                  { "name": "Property", "value": "Property" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "useScoreboard",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["score"]
          },
          {
            "key": "scoreResource",
            "option": {
              "label": "Score Item",
              "description": "The tracked item which determines a player's ranking on the leaderboard",
              "type": "itemId",
              "defaultValue": "cash",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "scoreType",
                    "compare": "NOT_EQUAL",
                    "value": "Resource"
                  }
                ],
                [
                  {
                    "key": "useScoreboard",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["score"]
          },
          {
            "key": "propertyResource",
            "option": {
              "label": "Score Property",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Property...",
                "category": "property",
                "maxLength": 64
              },
              "description": "The tracked property which determines a player's ranking on the leaderboard",
              "hideIf": [
                [
                  {
                    "key": "scoreType",
                    "compare": "NOT_EQUAL",
                    "value": "Property"
                  }
                ],
                [
                  {
                    "key": "useScoreboard",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["score"]
          },
          {
            "key": "scoreName",
            "option": {
              "label": "Score Name",
              "type": "textInput",
              "defaultValue": "Score",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 24 },
              "hideIf": [
                [
                  {
                    "key": "useScoreboard",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["score"]
          },
          {
            "key": "scoreGroup",
            "option": {
              "label": "Score Group",
              "description": "How is the leaderboard sorted, by player or by team?",
              "type": "select",
              "validators": [null],
              "defaultValue": "team",
              "props": {
                "options": [
                  { "name": "Player", "value": "player" },
                  { "name": "Team", "value": "team" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "useScoreboard",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["score"]
          },
          {
            "key": "sortMode",
            "option": {
              "label": "Leaderboard Sort Mode",
              "description": "Are players sorted from lowest to highest, or highest to lowest?",
              "type": "select",
              "validators": [null],
              "defaultValue": "Highest to lowest",
              "props": {
                "options": [
                  { "name": "High to low", "value": "Highest to lowest" },
                  { "name": "Low to high", "value": "Lowest to Highest" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "useScoreboard",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["score"]
          },
          {
            "key": "showScoreboardOnGameEnd",
            "option": {
              "label": "Show Leaderboard On Game End",
              "type": "select",
              "description": "Show the leaderboard when the game ends",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "useScoreboard",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["score"]
          },
          {
            "key": "showPlayersPlacement",
            "option": {
              "label": "Show Placement",
              "type": "select",
              "description": "Show a player's placement ranking at the end of a game",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "useScoreboard",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["score"]
          },
          {
            "key": "knockoutActivityFeedDisabled",
            "option": {
              "label": "Disable Knockouts From Activity Feed",
              "type": "select",
              "description": "Prevent knockout messages from appearing in the activity feed",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["ui"]
          },
          {
            "key": "dynamicBuildingAllowFloatingBuilds",
            "option": {
              "label": "Allow Floating Dynamic Builds",
              "type": "select",
              "description": "When players build structures, and then their connection to a solid base is removed, should the builds float?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "supportedMapStyles": ["platformer"]
          }
        ]
      },
      "defaultState": {
        "countdownActive": false,
        "countdownEndTimestamp": 0,
        "countupActive": false,
        "countupStartTimestamp": 0,
        "gameMusicState": "stopped",
        "allowedToAddTimeToEndCountdown": false
      },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "maxOnMap": 1,
      "initialMemoryCost": 0,
      "subsequentMemoryCost": 0
    },
    {
      "id": "mood",
      "name": "Mood",
      "description": "Apply effects & filters to the player's camera",
      "optionSchema": {
        "options": [
          {
            "key": "useVignette",
            "option": {
              "label": "Use Vignette",
              "type": "select",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "vignetteStrength",
            "option": {
              "label": "Vignette Strength",
              "type": "numberInput",
              "defaultValue": 50,
              "validators": [null],
              "props": { "min": 0, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "useVignette",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            }
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "useVignette",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            }
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate On Channel",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate On Channel",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          }
        ]
      },
      "defaultState": { "active": true },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate mood" },
            { "id": "deactivate", "name": "Deactivate mood" }
          ]
        }
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "movementMeter",
      "name": "Movement Meter",
      "description": "Require a player to have an item to move around",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "waring", "name": "Warning" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "itemToTrack",
            "option": {
              "label": "Tracked Item",
              "description": "The item tied to a player's movement speed",
              "type": "itemId",
              "validators": [null],
              "props": {}
            },
            "categories": ["featured"]
          },
          {
            "key": "drainAmount",
            "option": {
              "label": "Item Drain Per Tick",
              "description": "The amount of the tracked item to remove from the player's inventory",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 1000000000,
                "step": 1,
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "drainIntervalMs",
            "option": {
              "label": "Drain Interval",
              "description": "How often to drain the tracked item from the player's inventory",
              "type": "select",
              "validators": [null],
              "defaultValue": 500,
              "props": {
                "options": [
                  { "value": 250, "name": "Every 0.25 Seconds" },
                  { "value": 500, "name": "Every 0.5 Seconds" },
                  { "value": 1000, "name": "Every 1 Second" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "outOfItemChannel",
            "option": {
              "label": "When player runs out of tracked resource, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the player runs out of the tracked resource, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "speedWhenOutOfItem",
            "option": {
              "label": "Player Speed When Out Of Tracked Item",
              "description": "When the player runs out of the tracked item, what should their speed be set to? 1 is default speed, 0.5 is half speed, 2 is double speed, etc.",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "min": 0, "max": 4, "step": 0.01, "allowEmpty": false }
            }
          },
          {
            "key": "useAsDefault",
            "option": {
              "label": "Use As Default",
              "type": "select",
              "description": "Use this Movement Meter for all players by default",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "warningAmount",
            "option": {
              "label": "Warning Amount",
              "description": "Transmit when the player has reaches than this amount or less of the tracked item",
              "type": "numberInput",
              "defaultValue": 5,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 1000000000,
                "step": 1,
                "allowEmpty": false
              }
            },
            "categories": ["waring"]
          },
          {
            "key": "warningChannel",
            "option": {
              "label": "When warning amount reached, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the amount of the tracked item reaches the warning amount, the device sends a signal on the selected channel"
            },
            "categories": ["waring", "channels"]
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the movement meter when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the movement meter when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate Movement Meter" },
            { "id": "deactivate", "name": "Deactivate Movement Meter" }
          ]
        },
        "out": {
          "connections": [
            {
              "id": "outOfResource",
              "name": "Player runs out of movement resource"
            },
            {
              "id": "warningReached",
              "name": "Player reaches warning amount of movement resource"
            }
          ]
        }
      },
      "maxOnMap": 10,
      "initialMemoryCost": 400,
      "subsequentMemoryCost": 100
    },
    {
      "id": "music",
      "name": "Music",
      "description": "Play music in the background",
      "optionSchema": {
        "options": [
          {
            "key": "audioUrl",
            "option": {
              "label": "Audio URL",
              "type": "textInput",
              "defaultValue": "https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_1MG.mp3",
              "validators": [null],
              "props": { "placeholder": "Enter audio url here..." }
            }
          },
          {
            "key": "volume",
            "option": {
              "label": "Volume",
              "type": "numberInput",
              "defaultValue": 50,
              "validators": [null],
              "props": { "min": 1, "max": 50, "step": 1, "allowEmpty": false }
            }
          },
          {
            "key": "playWhenReceivingFrom",
            "option": {
              "label": "Play When Receiving From...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "stopWhenReceivingFrom",
            "option": {
              "label": "Stop When Receiving From...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          }
        ]
      },
      "defaultState": { "currentState": "stopped" },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "play", "name": "Play music" },
            { "id": "stop", "name": "Stop music" }
          ]
        }
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "notification",
      "name": "Notification",
      "description": "Send an important message/alert to players",
      "optionSchema": {
        "categories": {
          "categories": [{ "id": "featured", "name": "Featured" }],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "title",
            "option": {
              "label": "Notification Title",
              "description": "Text shown on the notification in larger text",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 128 }
            },
            "categories": ["featured"]
          },
          {
            "key": "description",
            "option": {
              "label": "Notification Content",
              "description": "Text shown on the notification in smaller text",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 512 }
            },
            "categories": ["featured"]
          },
          {
            "key": "notifyChannel",
            "option": {
              "label": "Send notification when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Send the notification when the device receives a signal from the selected channel"
            },
            "categories": ["featured"]
          },
          {
            "key": "notificationType",
            "option": {
              "label": "Notification Type",
              "type": "select",
              "validators": [null],
              "defaultValue": "none",
              "props": {
                "options": [
                  { "name": "None", "value": "none" },
                  { "name": "Info", "value": "info" },
                  { "name": "Success", "value": "success" },
                  { "name": "Warning", "value": "warning" },
                  { "name": "Error", "value": "error" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "notificationPlacement",
            "option": {
              "label": "Notification Placement",
              "description": "Which corner of the screen the notification will appear in",
              "type": "select",
              "validators": [null],
              "defaultValue": "topRight",
              "props": {
                "options": [
                  { "name": "Top Right", "value": "topRight" },
                  { "name": "Top Left", "value": "topLeft" },
                  { "name": "Bottom Right", "value": "bottomRight" },
                  { "name": "Bottom Left", "value": "bottomLeft" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "notificationDurationStrategy",
            "option": {
              "label": "Notification Duration",
              "description": "Set a manual duration or let the notification disappear automatically based off the length of the content",
              "type": "select",
              "validators": [null],
              "defaultValue": "auto",
              "props": {
                "options": [
                  { "name": "Auto", "value": "auto" },
                  { "name": "Specific Time Amount", "value": "manual" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "customDurationSeconds",
            "option": {
              "label": "Notification Duration",
              "description": "How long (in seconds) the notification sticks around",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": { "min": 1, "max": 30, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "notificationDurationStrategy",
                    "compare": "NOT_EQUAL",
                    "value": "manual"
                  }
                ]
              ]
            }
          },
          {
            "key": "sendTo",
            "option": {
              "label": "Send Notification To",
              "type": "select",
              "validators": [null],
              "defaultValue": "characterTriggering",
              "props": {
                "options": [
                  {
                    "name": "Triggering Player",
                    "value": "characterTriggering"
                  },
                  {
                    "name": "All On Triggering Player's Team",
                    "value": "allOnTeam"
                  },
                  {
                    "name": "All On Triggering Player's Team, Except Triggering Player",
                    "value": "allOnTeamExceptTriggeringPlayer"
                  },
                  { "name": "Everybody", "value": "allCharacters" }
                ],
                "allowEmpty": false
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": true,
        "triggers": [{ "type": "wire", "name": "On wire pulse..." }],
        "customBlocks": ["send_custom_notification"]
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "notify", "name": "Send notification" },
            { "id": "codeGrid", "name": "Run wire pulse block" }
          ]
        }
      },
      "initialMemoryCost": 15,
      "subsequentMemoryCost": 15
    },
    {
      "id": "outline",
      "name": "Outline",
      "description": "Draws an outline",
      "optionSchema": {
        "options": [
          {
            "key": "shape",
            "option": {
              "label": "Outline Shape",
              "description": "Set the shape of the outline",
              "type": "select",
              "validators": [null],
              "defaultValue": "rectangle",
              "props": {
                "options": [
                  { "value": "rectangle", "name": "Line" },
                  { "value": "circle", "name": "Circle" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "lineLength",
            "option": {
              "label": "Line Length",
              "description": "How long (in pixels) is the line making the outline?",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 10000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "shape",
                    "compare": "NOT_EQUAL",
                    "value": "rectangle"
                  }
                ]
              ]
            }
          },
          {
            "key": "circleRadius",
            "option": {
              "label": "Circle Radius",
              "description": "What is the value of the circle radius for cirle making the outline?",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 10000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "shape", "compare": "NOT_EQUAL", "value": "circle" }]
              ]
            }
          },
          {
            "key": "circlePercentage",
            "option": {
              "label": "Circle Percentage",
              "description": "What percentage of the circle we show for the outline?",
              "type": "numberInput",
              "defaultValue": 100,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 100,
                "step": 0.1,
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "shape", "compare": "NOT_EQUAL", "value": "circle" }]
              ]
            }
          },
          {
            "key": "circleFill",
            "option": {
              "label": "Fill Circle",
              "type": "select",
              "description": "Should the circle be fully filled? The style (dashed or not) does not make a difference then.",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "shape", "compare": "NOT_EQUAL", "value": "circle" }]
              ]
            }
          },
          {
            "key": "thickness",
            "option": {
              "label": "Outline Thickness",
              "description": "How thick is the line making up the outline (in pixels)?",
              "type": "numberInput",
              "defaultValue": 5,
              "validators": [null],
              "props": { "min": 1, "max": 50, "step": 1, "allowEmpty": false }
            }
          },
          {
            "key": "angle",
            "option": {
              "label": "Outline Angle",
              "description": "How is the outline rotated (in degrees)?",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": {
                "min": -360,
                "max": 360,
                "step": 1,
                "allowEmpty": false
              }
            }
          },
          {
            "key": "color",
            "option": {
              "label": "Outline Color",
              "description": "Set the color of the outline",
              "type": "color",
              "defaultValue": "#ffffff",
              "validators": [null]
            }
          },
          {
            "key": "alpha",
            "option": {
              "label": "Alpha",
              "description": "Set the transparency of the outline. 0 is completely transparent, 1 is completely visible.",
              "type": "numberInput",
              "defaultValue": 0.8,
              "validators": [null],
              "props": {
                "min": 0.01,
                "max": 1,
                "step": 0.01,
                "allowEmpty": false
              }
            }
          },
          {
            "key": "style",
            "option": {
              "label": "Outline Style",
              "description": "Set the style of the outline",
              "type": "select",
              "validators": [null],
              "defaultValue": "solid",
              "props": {
                "options": [
                  { "value": "solid", "name": "Solid" },
                  { "value": "dashed", "name": "Dashed" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "dashLength",
            "option": {
              "label": "Dash Lenght",
              "description": "How long is the dash for the dashed outline (in pixels)?",
              "type": "numberInput",
              "defaultValue": 35,
              "validators": [null],
              "props": { "min": 0, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [{ "key": "style", "compare": "NOT_EQUAL", "value": "dashed" }]
              ]
            }
          },
          {
            "key": "dashSpacing",
            "option": {
              "label": "Dash Spacing",
              "description": "What is the space between dashes for the dashed outline (in pixels)?",
              "type": "numberInput",
              "defaultValue": 15,
              "validators": [null],
              "props": { "min": 0, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [{ "key": "style", "compare": "NOT_EQUAL", "value": "dashed" }]
              ]
            }
          },
          {
            "key": "visibleOnGameStart",
            "option": {
              "label": "Visible On Game Start",
              "type": "select",
              "description": "Is the outline visible when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "showChannel",
            "option": {
              "label": "Show when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Show the outline when the device receives a signal from the selected channel"
            }
          },
          {
            "key": "hideChannel",
            "option": {
              "label": "Hide when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Hide the outline when the device receives a signal from the selected channel"
            }
          },
          {
            "key": "scope",
            "option": {
              "label": "Visible Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the outline is shown/hidden, who does that apply to?"
            }
          }
        ]
      },
      "defaultState": { "visible": true },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "show", "name": "Show outline" },
            { "id": "hide", "name": "Hide outline" }
          ]
        }
      },
      "minimumRoleLevel": 90,
      "maxOnMap": 500,
      "initialMemoryCost": 20,
      "subsequentMemoryCost": 20
    },
    {
      "id": "passwordLock",
      "name": "Password Lock",
      "description": "Restrict access with a password players must enter!",
      "optionSchema": {
        "options": [
          {
            "key": "password",
            "option": {
              "label": "Password",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Enter a password" }
            }
          },
          {
            "key": "onSuccessChannel",
            "option": {
              "label": "When correct password entered, transmit on channel...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "openChannel",
            "option": {
              "label": "Open interface when receiving on channel...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "useMaxAttempts",
            "option": {
              "label": "Limit Guess Attempts",
              "type": "select",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "maxAttempts",
            "option": {
              "label": "Max Guess Attempts",
              "type": "numberInput",
              "defaultValue": 3,
              "validators": [null],
              "props": { "min": 1, "max": 999999, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "useMaxAttempts",
                    "value": false,
                    "compare": "EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "maxAttemptsScope",
            "option": {
              "label": "Max Guess Attempts Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "useMaxAttempts",
                    "value": false,
                    "compare": "EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "outOfAttemptsChannel",
            "option": {
              "label": "When max attempts reached, transmit on channel...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "hideIf": [
                [
                  {
                    "key": "useMaxAttempts",
                    "value": false,
                    "compare": "EQUAL"
                  }
                ]
              ]
            }
          }
        ]
      },
      "defaultState": { "attempts": 0 },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "success", "name": "Correct password entered" },
            { "id": "outOfAttempts", "name": "Player out of guess attempts" }
          ]
        },
        "in": {
          "connections": [
            { "id": "open", "name": "Open password entry screen" }
          ]
        }
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "placedSticker",
      "name": "Placed Sticker",
      "optionSchema": {
        "options": [
          {
            "key": "stickerId",
            "option": {
              "label": "Sticker ID",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "depth",
            "option": {
              "label": "Depth",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 0, "max": 10, "step": 1, "allowEmpty": false }
            }
          },
          {
            "key": "scale",
            "option": {
              "label": "Scale",
              "type": "numberInput",
              "defaultValue": 0.15,
              "validators": [null],
              "props": { "min": 0, "max": 1, "allowEmpty": false }
            }
          },
          {
            "key": "placedByCharacterId",
            "option": {
              "label": "Character ID",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "placedAtTimeStamp",
            "option": {
              "label": "Time Stamp",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "step": 1, "allowEmpty": false }
            }
          }
        ]
      },
      "defaultState": { "beingRemoved": false },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "initialMemoryCost": 0,
      "subsequentMemoryCost": 0
    },
    {
      "id": "playerAppearanceModifier",
      "name": "Player Appearance Modifier",
      "description": "Modify the color and transparency of a player",
      "optionSchema": {
        "options": [
          {
            "key": "modifyTransparency",
            "option": {
              "label": "Modify Transparency",
              "type": "select",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "transparencyAmount",
            "option": {
              "label": "Transparency Amount",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1,
                "step": 0.01,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "modifyTransparency",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            }
          },
          {
            "key": "selfTransparency",
            "option": {
              "label": "Self Transparency",
              "type": "select",
              "validators": [null],
              "defaultValue": "match",
              "props": {
                "options": [
                  { "name": "Match", "value": "match" },
                  { "name": "Custom", "value": "custom" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "modifyTransparency",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            }
          },
          {
            "key": "selfTransparencyAmount",
            "option": {
              "label": "Transparency Amount",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1,
                "step": 0.01,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "modifyTransparency",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ],
                [
                  {
                    "key": "selfTransparency",
                    "compare": "NOT_EQUAL",
                    "value": "custom"
                  }
                ]
              ]
            }
          },
          {
            "key": "modifyTint",
            "option": {
              "label": "Modify Tint",
              "type": "select",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "tint",
            "option": {
              "label": "Tint",
              "type": "color",
              "defaultValue": "#ffffff",
              "validators": [null],
              "hideIf": [
                [{ "key": "modifyTint", "compare": "NOT_EQUAL", "value": true }]
              ]
            }
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate when receiving on channel...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate when receiving on channel...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          }
        ]
      },
      "defaultState": { "activeCharacters": [] },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate appearance" },
            { "id": "deactivate", "name": "Deactivate appearance" }
          ]
        }
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "playerPositionDetector",
      "name": "Player Coordinates",
      "description": "Detect when a player's position changes and get their coordinates",
      "optionSchema": {
        "options": [
          {
            "key": "whenPositionChangeDetectedTransmitOn",
            "option": {
              "label": "When player position changes, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When a player's position changes, the device sends a signal on the selected channel"
            }
          },
          {
            "key": "updateProperties",
            "option": {
              "label": "Update Properties",
              "type": "select",
              "description": "When a player's position changes, update a property",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "xProperty",
            "option": {
              "label": "X Position Property",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Property...",
                "category": "property",
                "maxLength": 64
              },
              "description": "The name of the property to update when the X position changes. Must be a number property to work correctly.",
              "hideIf": [
                [
                  {
                    "key": "updateProperties",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            }
          },
          {
            "key": "yProperty",
            "option": {
              "label": "Y Position Property",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Property...",
                "category": "property",
                "maxLength": 64
              },
              "description": "The name of the property to update when the Y position changes. Must be a number property to work correctly.",
              "hideIf": [
                [
                  {
                    "key": "updateProperties",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [
          {
            "type": "On Player Position Change",
            "name": "When player position changes..."
          }
        ],
        "customBlocks": [
          "player_position_detector_player_x_position",
          "player_position_detector_player_y_position"
        ]
      },
      "wireConfig": {
        "out": {
          "connections": [
            {
              "id": "positionChangeDetected",
              "name": "Position Change Detected"
            }
          ]
        }
      },
      "maxOnMap": 1,
      "initialMemoryCost": 3500,
      "subsequentMemoryCost": 3500
    },
    {
      "id": "characterProximity",
      "name": "Player Proximity",
      "description": "Detect when two players are within proximity of one another",
      "optionSchema": {
        "options": [
          {
            "key": "detectionArea",
            "option": {
              "label": "Detection Area",
              "type": "select",
              "validators": [null],
              "defaultValue": "everywhere",
              "props": {
                "options": [
                  { "name": "Entire Map", "value": "everywhere" },
                  { "name": "Zone", "value": "zone" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "allowedMatch",
            "option": {
              "label": "Detect For...",
              "description": "A match should only be found for which kind of players?",
              "type": "select",
              "validators": [null],
              "defaultValue": "everybody",
              "props": {
                "options": [
                  { "name": "All Players", "value": "everybody" },
                  { "name": "Players On Same Team", "value": "sameTeam" },
                  {
                    "name": "Players On Different Teams",
                    "value": "differentTeam"
                  }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "channelFound",
            "option": {
              "label": "When found, transmit on channel",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "channelLost",
            "option": {
              "label": "When lost, transmit on channel",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "broadcastAs",
            "option": {
              "label": "Broadcast As",
              "description": "When a match/loss occurs, the message should be broadcasted as?",
              "type": "select",
              "validators": [null],
              "defaultValue": "everybody",
              "props": {
                "options": [
                  {
                    "name": "Everyone (2 Messages Sent Per Match/Loss)",
                    "value": "everybody"
                  },
                  {
                    "name": "Single Person (1 Message Sent Per Match/Loss)",
                    "value": "firstPerson"
                  }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active on Game Start",
              "type": "select",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "activateWhenReceivingFrom",
            "option": {
              "label": "Activate when receiving from channel...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "deactivateWhenReceivingFrom",
            "option": {
              "label": "Deactivate when receiving from channel...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "detectionDistance",
            "option": {
              "label": "Detection Distance",
              "description": "How far away (in tiles) must two players be for a match to be found",
              "type": "numberInput",
              "defaultValue": 1.5,
              "validators": [null],
              "props": {
                "min": 0.1,
                "max": 6,
                "step": 0.1,
                "allowEmpty": false
              }
            }
          },
          {
            "key": "width",
            "option": {
              "label": "Zone Width",
              "type": "numberInput",
              "defaultValue": 300,
              "validators": [null],
              "props": { "min": 100, "max": 5000, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Zone Height",
              "type": "numberInput",
              "defaultValue": 300,
              "validators": [null],
              "props": { "min": 100, "max": 7500, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "delay",
            "option": {
              "label": "Wait",
              "description": "How long (in seconds) two players need to be within proximity for a match to be found",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "min": 0, "max": 5, "step": 1, "allowEmpty": false }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [
          { "type": "onFound", "name": "On match found..." },
          { "type": "onLost", "name": "On match lost..." }
        ],
        "customBlocks": [
          "other_character_name",
          "other_character_team_number",
          "other_character_get_property",
          "other_character_set_property",
          "other_character_message_broadcaster"
        ]
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "found", "name": "Match Found (Players Within Proximity)" },
            {
              "id": "lost",
              "name": "Match Lost (Players No Longer Within Proximity)"
            }
          ]
        },
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate Player Proximity Detection" },
            {
              "id": "deactivate",
              "name": "Deactivate Player Proximity Detection"
            }
          ]
        }
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "textExplainer",
      "name": "Popup",
      "description": "Create modals & banners",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "Featured", "name": "Featured" },
            { "id": "Look & Behavior", "name": "Look & Behavior" },
            { "id": "Call To Action", "name": "Call To Action" },
            { "id": "Channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "header",
            "option": {
              "label": "Header Text",
              "description": "Content shown in larger text",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 256 }
            },
            "categories": ["Featured"]
          },
          {
            "key": "content",
            "option": {
              "label": "Content Text",
              "description": "Content shown in smaller text. Use for descriptions & additional info.",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 512 }
            },
            "categories": ["Featured"]
          },
          {
            "key": "openWhenReceivingFrom",
            "option": {
              "label": "Open popup when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Open the popup when the device receives a signal from the selected channel"
            },
            "categories": ["Featured", "Channels"]
          },
          {
            "key": "iconImage",
            "option": {
              "label": "Icon Image",
              "description": "Small icon image shown above the header & content. Custom images are not allowed. Refer to the Gimkit Creative documentation for usage of icon images.",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 128 }
            }
          },
          {
            "key": "style",
            "option": {
              "label": "Popup Style",
              "description": "Modal: a large popup the obstructs the center of the screen. Banner: a smaller popup that slides up from the bottom.",
              "type": "select",
              "validators": [null],
              "defaultValue": "modal",
              "props": {
                "options": [
                  { "name": "Modal", "value": "modal" },
                  { "name": "Banner", "value": "banner" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Featured", "Look & Behavior"]
          },
          {
            "key": "callToActionLabel",
            "option": {
              "label": "Call To Action Label",
              "description": "Label shown on call to action button. Leave empty for no call to action.",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 32 }
            },
            "categories": ["Call To Action"]
          },
          {
            "key": "callToActionChannel",
            "option": {
              "label": "Call To Action Channel",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Channel to transmit on when call to action is clicked"
            },
            "categories": ["Call To Action", "Channels"]
          },
          {
            "key": "secondaryCallToActionLabel",
            "option": {
              "label": "Secondary Call To Action Label",
              "description": "Label shown on secondary call to action button. Leave empty for no secondary call to action.",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 32 }
            },
            "categories": ["Call To Action"]
          },
          {
            "key": "secondaryCallToActionChannel",
            "option": {
              "label": "Secondary Call To Action Channel",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Channel to transmit on when secondary call to action is clicked"
            },
            "categories": ["Call To Action", "Channels"]
          },
          {
            "key": "scope",
            "option": {
              "label": "Content Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the content of the popup is updated, who does it apply to?"
            },
            "categories": ["Look & Behavior"]
          },
          {
            "key": "backgroundColor",
            "option": {
              "label": "Background Color",
              "description": "Background color of the popup. The text color will automatically adapt to be readable",
              "type": "color",
              "defaultValue": "#FFFFFF",
              "validators": [null]
            },
            "categories": ["Look & Behavior"]
          },
          {
            "key": "fontFamily",
            "option": {
              "label": "Font",
              "description": "Select a font that fits the style of your popup",
              "type": "select",
              "validators": [null],
              "defaultValue": "Rubik",
              "props": {
                "options": [
                  { "name": "Rubik", "value": "Rubik" },
                  { "name": "Roboto", "value": "Roboto" },
                  { "name": "Staatliches", "value": "Staatliches" },
                  { "name": "Galindo", "value": "Galindo" },
                  { "name": "Kalam", "value": "Kalam" },
                  { "name": "Bangers", "value": "Bangers" },
                  { "name": "Fugaz One", "value": "Fugaz One" },
                  { "name": "Outfit", "value": "Outfit" },
                  { "name": "PT Mono", "value": "PT Mono" },
                  { "name": "Space Grotesk", "value": "Space Grotesk" },
                  { "name": "Lobster", "value": "Lobster" },
                  { "name": "Zeyada", "value": "Zeyada" },
                  { "name": "Titan One", "value": "Titan One" },
                  { "name": "Rye", "value": "Rye" },
                  { "name": "Caprasimo", "value": "Caprasimo" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Look & Behavior"]
          },
          {
            "key": "closableByUser",
            "option": {
              "label": "Closable By Player",
              "type": "select",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "description": "Are players allowed to close the popup once opened?"
            }
          },
          {
            "key": "closeWhenReceivingFrom",
            "option": {
              "label": "Close popup when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Close the popup when the device receives a signal from the selected channel"
            },
            "categories": ["Channels"]
          },
          {
            "key": "whenClosedTransmitOn",
            "option": {
              "label": "When popup closed, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When popup closed, the device sends a signal on the selected channel"
            },
            "categories": ["Channels"]
          }
        ]
      },
      "defaultState": { "textColor": "#000000", "header": "", "content": "" },
      "codeGridSchema": {
        "allowChannelGrids": true,
        "triggers": [{ "type": "wire", "name": "On wire pulse..." }],
        "customBlocks": ["set_header", "set_content"]
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "closed", "name": "Popup closed" },
            { "id": "callToAction", "name": "Primary call to action clicked" },
            {
              "id": "secondaryCallToAction",
              "name": "Secondary call to action clicked"
            }
          ]
        },
        "in": {
          "connections": [
            { "id": "open", "name": "Open popup" },
            { "id": "close", "name": "Close popup" },
            { "id": "codeGrid", "name": "Run wire pulse block" }
          ]
        }
      },
      "maxOnMap": 200,
      "initialMemoryCost": 50,
      "subsequentMemoryCost": 50
    },
    {
      "id": "proceduralTerrainZone",
      "name": "Procedural Terrain Zone",
      "optionSchema": {
        "options": [
          {
            "key": "width",
            "option": {
              "label": "Width",
              "type": "numberInput",
              "defaultValue": 320,
              "validators": [null],
              "props": { "step": 1, "allowEmpty": false }
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Height",
              "type": "numberInput",
              "defaultValue": 320,
              "validators": [null],
              "props": { "step": 1, "allowEmpty": false }
            }
          },
          {
            "key": "variability",
            "option": {
              "label": "Variability Score",
              "description": "Lower means more variability in terrain. Higher means less variability.",
              "type": "numberInput",
              "defaultValue": 5,
              "validators": [null],
              "props": {
                "min": 0.1,
                "max": 100,
                "step": 0.01,
                "allowEmpty": false
              }
            }
          },
          {
            "key": "seed",
            "option": {
              "label": "Seed",
              "description": "Set a seed to produce the same terrain every time. Leave blank for random.",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 16 }
            }
          },
          {
            "key": "collision",
            "option": {
              "label": "Collision",
              "type": "select",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "depth",
            "option": {
              "label": "Depth",
              "type": "select",
              "validators": [null],
              "defaultValue": 1,
              "props": {
                "options": [
                  { "name": "1", "value": 1 },
                  { "name": "2", "value": 2 },
                  { "name": "3", "value": 3 },
                  { "name": "4", "value": 4 },
                  { "name": "5", "value": 5 }
                ],
                "allowEmpty": false
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "minimumRoleLevel": 90,
      "initialMemoryCost": 0,
      "subsequentMemoryCost": 0
    },
    {
      "id": "proceduralTerrainZoneZoneInstruction",
      "name": "Procedural Terrain Zone Instruction",
      "optionSchema": {
        "options": [
          {
            "key": "terrain",
            "option": {
              "label": "Terrain",
              "type": "terrainId",
              "props": { "allowEmpty": true },
              "validators": [null]
            }
          },
          {
            "key": "weight",
            "option": {
              "label": "Weight",
              "description": "Increase the weight to make this terrain more likely to be placed",
              "type": "numberInput",
              "defaultValue": 100,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 1000000,
                "step": 1,
                "allowEmpty": false
              }
            }
          },
          {
            "key": "constraint1",
            "option": {
              "label": "Constraint #1",
              "description": "A constraint to apply on this terrain",
              "type": "select",
              "validators": [null],
              "defaultValue": "none",
              "props": {
                "options": [
                  { "name": "None", "value": "none" },
                  { "name": "Above Row", "value": "above" },
                  { "name": "Below Row", "value": "below" },
                  { "name": "Left Of Column", "value": "left" },
                  { "name": "Right Of Column", "value": "right" },
                  { "name": "Between Columns", "value": "betweenHorizontal" },
                  { "name": "Between Rows", "value": "betweenVertical" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "constraint1Column",
            "option": {
              "label": "Column Number",
              "description": "Column #1 is the leftmost column",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "constraint1",
                    "value": "left",
                    "compare": "NOT_EQUAL"
                  },
                  {
                    "key": "constraint1",
                    "value": "right",
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "constraint1Row",
            "option": {
              "label": "Row Number",
              "description": "Row #1 is the topmost row",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "constraint1",
                    "value": "above",
                    "compare": "NOT_EQUAL"
                  },
                  {
                    "key": "constraint1",
                    "value": "below",
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "constraint1Column1",
            "option": {
              "label": "Start Column",
              "description": "Column #1 is the leftmost column",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "constraint1",
                    "value": "betweenHorizontal",
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "constraint1Column2",
            "option": {
              "label": "End Column",
              "description": "Column #1 is the leftmost column",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "constraint1",
                    "value": "betweenHorizontal",
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "constraint1Row1",
            "option": {
              "label": "Start Row",
              "description": "Row #1 is the topmost row",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "constraint1",
                    "value": "betweenVertical",
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "constraint1Row2",
            "option": {
              "label": "End Row",
              "description": "Row #1 is the topmost row",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "constraint1",
                    "value": "betweenVertical",
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "constraint2",
            "option": {
              "label": "Constraint #2",
              "description": "A constraint to apply on this terrain",
              "type": "select",
              "validators": [null],
              "defaultValue": "none",
              "props": {
                "options": [
                  { "name": "None", "value": "none" },
                  { "name": "Above Row", "value": "above" },
                  { "name": "Below Row", "value": "below" },
                  { "name": "Left Of Column", "value": "left" },
                  { "name": "Right Of Column", "value": "right" },
                  { "name": "Between Columns", "value": "betweenHorizontal" },
                  { "name": "Between Rows", "value": "betweenVertical" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "constraint2Column",
            "option": {
              "label": "Column Number",
              "description": "Column #1 is the leftmost column",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "constraint2",
                    "value": "left",
                    "compare": "NOT_EQUAL"
                  },
                  {
                    "key": "constraint2",
                    "value": "right",
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "constraint2Row",
            "option": {
              "label": "Row Number",
              "description": "Row #1 is the topmost row",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "constraint2",
                    "value": "above",
                    "compare": "NOT_EQUAL"
                  },
                  {
                    "key": "constraint2",
                    "value": "below",
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "constraint2Column1",
            "option": {
              "label": "Start Column",
              "description": "Column #1 is the leftmost column",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "constraint2",
                    "value": "betweenHorizontal",
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "constraint2Column2",
            "option": {
              "label": "End Column",
              "description": "Column #1 is the leftmost column",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "constraint2",
                    "value": "betweenHorizontal",
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "constraint2Row1",
            "option": {
              "label": "Start Row",
              "description": "Row #1 is the topmost row",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "constraint2",
                    "value": "betweenVertical",
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            }
          },
          {
            "key": "constraint2Row2",
            "option": {
              "label": "End Row",
              "description": "Row #1 is the topmost row",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "constraint2",
                    "value": "betweenVertical",
                    "compare": "NOT_EQUAL"
                  }
                ]
              ]
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "minimumRoleLevel": 90,
      "initialMemoryCost": 0,
      "subsequentMemoryCost": 0
    },
    {
      "id": "prop",
      "name": "Prop",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "appearance", "name": "Appearance" },
            { "id": "availability", "name": "Availability" },
            { "id": "damage", "name": "Damage" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "propId",
            "option": {
              "label": "Prop ID",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." },
              "hidden": true
            }
          },
          {
            "key": "shadowsEnabled",
            "option": {
              "label": "Shadows Enabled",
              "type": "select",
              "description": "Does this prop cast a shadow?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "Angle", "compare": "NOT_EQUAL", "value": 0 }]
              ]
            },
            "categories": ["featured"],
            "supportedMapStyles": ["topDown"]
          },
          {
            "key": "shadowsPlacement",
            "option": {
              "label": "Shadows Placement",
              "description": "Are shadows cast to the floor or beneath the prop?",
              "type": "select",
              "validators": [null],
              "defaultValue": "Floor",
              "props": {
                "options": [
                  { "name": "Floor", "value": "Floor" },
                  { "name": "Beneath Prop", "value": "Beneath Prop" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "shadowsEnabled",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ],
                [{ "key": "Angle", "compare": "NOT_EQUAL", "value": 0 }]
              ]
            },
            "categories": ["featured"],
            "supportedMapStyles": ["topDown"]
          },
          {
            "key": "UseColliders",
            "option": {
              "label": "Collision Enabled",
              "type": "select",
              "description": "Does this prop have collision?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "Scale",
            "option": {
              "label": "Scale",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": -10, "max": 10, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "Angle",
            "option": {
              "label": "Angle",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "min": -360, "max": 360, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "Tint",
            "option": {
              "label": "Tint",
              "description": "Adjust the color tint of the prop",
              "type": "color",
              "defaultValue": "#FFFFFF",
              "validators": [null]
            },
            "categories": ["appearance"]
          },
          {
            "key": "FlipX",
            "option": {
              "label": "Flip",
              "type": "select",
              "description": "Flip the prop to face the other direction",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["appearance"]
          },
          {
            "key": "Alpha",
            "option": {
              "label": "Alpha",
              "description": "Adjust the transparency of the prop. 0 is invisible, 1 is fully visible.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 0.15, "step": 0.01, "allowEmpty": false }
            },
            "categories": ["appearance"]
          },
          {
            "key": "visibleOnGameStart",
            "option": {
              "label": "Visible On Game Start",
              "type": "select",
              "description": "Is this prop visible when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["availability"]
          },
          {
            "key": "visibilityScope",
            "option": {
              "label": "Visibility Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the prop is shown/hidden, who is it applied to?"
            },
            "categories": ["availability"]
          },
          {
            "key": "showWhenReceivingFrom",
            "option": {
              "label": "Show prop when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Show prop when the device receives a signal from the selected channel"
            },
            "categories": ["availability"]
          },
          {
            "key": "hideWhenReceivingFrom",
            "option": {
              "label": "Hide prop when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Hide prop when the device receives a signal from the selected channel"
            },
            "categories": ["availability"]
          },
          {
            "key": "canBeDamaged",
            "option": {
              "label": "Prop Damage Enabled",
              "type": "select",
              "description": "If enabled, the prop can be damaged by player gadgets",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "visibilityScope",
                    "compare": "NOT_EQUAL",
                    "value": "global"
                  }
                ]
              ]
            },
            "categories": ["damage"]
          },
          {
            "key": "health",
            "option": {
              "label": "Prop Health",
              "description": "How much health does the prop have?",
              "type": "numberInput",
              "defaultValue": 100,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "visibilityScope",
                    "compare": "NOT_EQUAL",
                    "value": "global"
                  }
                ],
                [
                  {
                    "key": "canBeDamaged",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["damage"]
          },
          {
            "key": "onDestroyedChannel",
            "option": {
              "label": "When prop destroyed, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the prop is destroyed, the device sends a signal on the selected channel",
              "hideIf": [
                [
                  {
                    "key": "visibilityScope",
                    "compare": "NOT_EQUAL",
                    "value": "global"
                  }
                ],
                [
                  {
                    "key": "canBeDamaged",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["damage"]
          },
          {
            "key": "useAdaptiveHealth",
            "option": {
              "label": "Use Adaptive Health",
              "type": "select",
              "description": "If enabled, the prop will increase in health with each player in-game.",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "visibilityScope",
                    "compare": "NOT_EQUAL",
                    "value": "global"
                  }
                ],
                [
                  {
                    "key": "canBeDamaged",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["damage"]
          },
          {
            "key": "adaptiveHealthPerPlayer",
            "option": {
              "label": "Adaptive Health Per Player",
              "description": "Amount of health to give the prop per additional player.",
              "type": "numberInput",
              "defaultValue": 25,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "visibilityScope",
                    "compare": "NOT_EQUAL",
                    "value": "global"
                  }
                ],
                [
                  {
                    "key": "canBeDamaged",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ],
                [
                  {
                    "key": "useAdaptiveHealth",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["damage"]
          }
        ]
      },
      "defaultState": { "visible": true, "healthPercent": 1 },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "madeVisible", "name": "Prop made visible" },
            { "id": "madeHidden", "name": "Prop made hidden" },
            { "id": "destroyed", "name": "Prop destroyed" }
          ]
        },
        "in": {
          "connections": [
            { "id": "show", "name": "Show prop" },
            { "id": "hide", "name": "Hide prop" }
          ]
        }
      }
    },
    {
      "id": "property",
      "name": "Property",
      "description": "Core device to store data used in blocks",
      "optionSchema": {
        "options": [
          {
            "key": "propertyName",
            "option": {
              "label": "Property Name",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Property...",
                "category": "property",
                "maxLength": 64
              },
              "description": "Provide a unique name for this property"
            }
          },
          {
            "key": "valueType",
            "option": {
              "label": "Property Type",
              "description": "Select a data type for this property",
              "type": "select",
              "validators": [null],
              "defaultValue": "string",
              "props": {
                "options": [
                  { "name": "Text", "value": "string" },
                  { "name": "Number", "value": "number" },
                  { "name": "True/False", "value": "boolean" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "defaultValueText",
            "option": {
              "label": "Default Value",
              "description": "The default value for this property",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 256 },
              "hideIf": [
                [
                  {
                    "key": "valueType",
                    "compare": "NOT_EQUAL",
                    "value": "string"
                  }
                ]
              ]
            }
          },
          {
            "key": "defaultValueNumber",
            "option": {
              "label": "Default Value",
              "description": "The default value for this property",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": {
                "min": -99999999999,
                "max": 99999999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "valueType",
                    "compare": "NOT_EQUAL",
                    "value": "number"
                  }
                ]
              ]
            }
          },
          {
            "key": "defaultValueBoolean",
            "option": {
              "label": "Default Value",
              "description": "The default value for this property",
              "type": "select",
              "validators": [null],
              "defaultValue": true,
              "props": {
                "options": [
                  { "name": "True", "value": true },
                  { "name": "False", "value": false }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "valueType",
                    "compare": "NOT_EQUAL",
                    "value": "boolean"
                  }
                ]
              ]
            }
          },
          {
            "key": "propertyType",
            "option": {
              "label": "Property Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When this property is updated, the value is applied to who?"
            }
          },
          {
            "key": "whenValueChangesBroadcastOnChannel",
            "option": {
              "label": "When property value changes, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the value of the property changes, the device sends a signal on the selected channel"
            }
          },
          {
            "key": "broadcastValueChangesOnGameStart",
            "option": {
              "label": "Broadcast value change on game start",
              "type": "select",
              "description": "When the game begins, should the property be marked as changed?",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "triggered", "name": "Property value changed" }
          ]
        }
      },
      "maxOnMap": 128
    },
    {
      "id": "gimkitLiveQuestion",
      "name": "Questioner",
      "description": "Bring in a kit for players to answer multiple choice questions",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "channels", "name": "Channels" },
            { "id": "interface", "name": "Interface" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "kitId",
            "option": {
              "label": "Kit Link",
              "description": "Paste in the link of the kit you want players to answer questions from",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "https://www.gimkit.com/view/5be31abedf23350022e7d871",
                "maxLength": 128
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "whenAnsweredCorrectlyTransmitOn",
            "option": {
              "label": "When question answered correctly, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When a player answers a question correctly, the device sends a signal on the selected channel"
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "whenAnsweredIncorrectlyTransmitOn",
            "option": {
              "label": "When question answered incorrectly, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When a player answers a question incorrectly, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "openWhenReceivingOn",
            "option": {
              "label": "Open answering screen when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Open the question answering screen when the device receives a signal from the selected channel"
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "closable",
            "option": {
              "label": "Closable by player",
              "type": "select",
              "description": "Once the answering screen is opened, can it be closed by the player?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["interface"]
          },
          {
            "key": "textShownWhenAnsweringCorrectly",
            "option": {
              "label": "Correct Answer Message",
              "description": "The message shown to the player when they answer correctly",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Correct!", "maxLength": 48 }
            },
            "categories": ["interface"]
          },
          {
            "key": "textShownWhenAnsweringIncorrectly",
            "option": {
              "label": "Incorrect Answer Message",
              "description": "The message shown to the player when they answer incorrectly",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Incorrect!", "maxLength": 48 }
            },
            "categories": ["interface"]
          },
          {
            "key": "textShownWhenAnsweringScope",
            "option": {
              "label": "Message Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the correct/incorrect message is updated from within Blocks, who does it apply to?"
            },
            "categories": ["interface"]
          },
          {
            "key": "closeWhenReceivingOn",
            "option": {
              "label": "Close answering screen when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Close the question answering screen when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "enableWhenReceivingOn",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "disableWhenReceivingOn",
            "option": {
              "label": "Deactivate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "whenOpenedChannel",
            "option": {
              "label": "When answering screen opened, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the question answering screen is opened, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "whenClosedChannel",
            "option": {
              "label": "When answering screen closed, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the question answering screen is closed, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "sound",
            "option": {
              "label": "Sound",
              "description": "Sounds played when a player answers a question correctly or incorrectly",
              "type": "select",
              "validators": [null],
              "defaultValue": "default",
              "props": {
                "options": [
                  { "value": "none", "name": "None" },
                  { "value": "default", "name": "Default" },
                  { "value": "gimkitLive", "name": "Gimkit (Classic)" },
                  {
                    "name": "Advanced",
                    "value": "advanced",
                    "minimumRoleLevel": 90
                  }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["sound"]
          },
          {
            "key": "correctSound",
            "option": {
              "label": "Correct Sound",
              "type": "select",
              "defaultValue": "default",
              "validators": [null],
              "hideIf": [
                [
                  {
                    "key": "sound",
                    "compare": "NOT_EQUAL",
                    "value": "advanced"
                  }
                ]
              ],
              "props": {
                "options": [
                  { "value": "none", "name": "None" },
                  { "value": "default", "name": "Default" },
                  { "value": "gimkitLive", "name": "Gimkit (Classic)" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["sound"],
            "minimumRoleLevel": 90
          },
          {
            "key": "incorrectSound",
            "option": {
              "label": "Incorrect Sound",
              "type": "select",
              "defaultValue": "default",
              "validators": [null],
              "hideIf": [
                [
                  {
                    "key": "sound",
                    "compare": "NOT_EQUAL",
                    "value": "advanced"
                  }
                ]
              ],
              "props": {
                "options": [
                  { "value": "none", "name": "None" },
                  { "value": "default", "name": "Default" },
                  { "value": "gimkitLive", "name": "Gimkit (Classic)" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["sound"],
            "minimumRoleLevel": 90
          },
          {
            "key": "actionSound",
            "option": {
              "label": "Click Sound",
              "type": "select",
              "defaultValue": "default",
              "validators": [null],
              "hideIf": [
                [
                  {
                    "key": "sound",
                    "compare": "NOT_EQUAL",
                    "value": "advanced"
                  }
                ]
              ],
              "props": {
                "options": [
                  { "value": "none", "name": "None" },
                  { "value": "default", "name": "Default" },
                  { "value": "gimkitLive", "name": "Gimkit (Classic)" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["sound"],
            "minimumRoleLevel": 90
          },
          {
            "key": "useCustomAction",
            "option": {
              "label": "Use Custom Action",
              "type": "select",
              "description": "Once a player answers a question correctly, replace the close button with a custom call to action?",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "minimumRoleLevel": 90,
            "categories": ["interface"]
          },
          {
            "key": "customActionText",
            "option": {
              "label": "Custom Action Button Label",
              "description": "Text shown on the button after a player answers a question correctly",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 48 },
              "hideIf": [
                [
                  {
                    "key": "useCustomAction",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "minimumRoleLevel": 90,
            "categories": ["interface"]
          },
          {
            "key": "channelToTriggerCustomAction",
            "option": {
              "label": "When custom action button clicked, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When a player clicks the custom action button, the device sends a signal on the selected channel",
              "hideIf": [
                [
                  {
                    "key": "useCustomAction",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "minimumRoleLevel": 90,
            "categories": ["interface"]
          },
          {
            "key": "size",
            "option": {
              "label": "Size",
              "type": "numberInput",
              "defaultValue": 48,
              "validators": [null],
              "props": { "min": 25, "max": 100, "allowEmpty": false },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": {
        "enabled": false,
        "questions": "[]",
        "currentQuestionId": "",
        "nextQuestionId": "",
        "correctText": "Correct!",
        "incorrectText": "Incorrect!"
      },
      "codeGridSchema": {
        "allowChannelGrids": true,
        "triggers": [
          {
            "type": "whenQuestionAnsweredCorrectly",
            "name": "When question answered correctly...",
            "customBlocks": ["question_answering_streak"]
          },
          {
            "type": "whenQuestionAnsweredIncorrectly",
            "name": "When question answered incorrectly..."
          },
          { "type": "wire", "name": "On wire pulse..." }
        ],
        "customBlocks": ["message_correct_answer", "message_incorrect_answer"]
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "questionCorrect", "name": "Question answered correctly" },
            {
              "id": "questionIncorrect",
              "name": "Question answered incorrectly"
            },
            { "id": "opened", "name": "Question answering screen opened" },
            { "id": "closed", "name": "Question answering screen closed" }
          ]
        },
        "in": {
          "connections": [
            { "id": "open", "name": "Open question answering screen" },
            { "id": "close", "name": "Close question answering screen" },
            { "id": "enable", "name": "Enable Questioner" },
            { "id": "disable", "name": "Disable Questioner" },
            { "id": "codeGrid", "name": "Run wire pulse block" }
          ]
        }
      },
      "maxOnMap": 6,
      "initialMemoryCost": 250,
      "subsequentMemoryCost": 250
    },
    {
      "id": "relay",
      "name": "Relay",
      "description": "Trigger events on behalf of other players",
      "optionSchema": {
        "options": [
          {
            "key": "relayAs",
            "option": {
              "label": "Relay Audience",
              "description": "Select the audience to relay the message on behalf of",
              "type": "select",
              "validators": [null],
              "defaultValue": "All Players",
              "props": {
                "options": [
                  { "name": "All Players", "value": "All Players" },
                  { "name": "All Other Players", "value": "All Other Players" },
                  {
                    "name": "All Players On My Team",
                    "value": "All Players On My Team"
                  },
                  { "name": "Random Player", "value": "Random Player" },
                  {
                    "name": "All Players On Specific Team",
                    "value": "All Players On Team..."
                  },
                  {
                    "name": "Random Player On Specific Team",
                    "value": "Random Player On Team"
                  },
                  {
                    "name": "Single Player On Each Team",
                    "value": "Single Player On Each Team"
                  }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "team",
            "option": {
              "label": "Team",
              "description": "Set the configured team for the audience",
              "type": "select",
              "validators": [null],
              "defaultValue": "1",
              "props": {
                "options": [
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "relayAs",
                    "compare": "NOT_EQUAL",
                    "value": "All Players On Team..."
                  },
                  {
                    "key": "relayAs",
                    "compare": "NOT_EQUAL",
                    "value": "Random Player On Team"
                  }
                ]
              ]
            }
          },
          {
            "key": "channelToTrigger",
            "option": {
              "label": "Relay channel",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "The channel the relayed message will be transmitted on for each player in the selected audience"
            }
          },
          {
            "key": "triggerWhenReceivingOnChannel",
            "option": {
              "label": "Relay when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Relay when the device receives a signal from the selected channel"
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [{ "id": "triggered", "name": "Relay trigger" }]
        },
        "in": { "connections": [{ "id": "trigger", "name": "Trigger relay" }] }
      },
      "maxOnMap": 128,
      "initialMemoryCost": 20,
      "subsequentMemoryCost": 20
    },
    {
      "id": "repeater",
      "name": "Repeater",
      "description": "Repeat a task at a set interval",
      "optionSchema": {
        "categories": {
          "categories": [{ "id": "featured", "name": "Featured" }],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "startChannel",
            "option": {
              "label": "Start repeater when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Start the repeater when the device receives a signal from the selected channel"
            },
            "categories": ["featured"]
          },
          {
            "key": "actionChannel",
            "option": {
              "label": "When task occurs, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the repeater runs the task, the device sends a signal on the selected channel"
            },
            "categories": ["featured"]
          },
          {
            "key": "repeatInterval",
            "option": {
              "label": "Task Interval",
              "description": "How often (in seconds) the task will run",
              "type": "numberInput",
              "defaultValue": 5,
              "validators": [null],
              "props": {
                "min": 0.5,
                "max": 600,
                "step": 0.5,
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "stopRepeatingStrategy",
            "option": {
              "label": "Stop Strategy",
              "description": "When the repeater will stop repeating the task",
              "type": "select",
              "validators": [null],
              "defaultValue": "time",
              "props": {
                "options": [
                  { "name": "After period of time", "value": "time" },
                  {
                    "name": "After number of repetitions",
                    "value": "numberOfRepetitions"
                  },
                  { "name": "After receiving on a channel", "value": "channel" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "timePeriod",
            "option": {
              "label": "Time To Run",
              "description": "How long (in seconds) the repeater will run",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": {
                "min": 3,
                "max": 1800,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "stopRepeatingStrategy",
                    "compare": "NOT_EQUAL",
                    "value": "time"
                  }
                ]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "numberOfRepetitions",
            "option": {
              "label": "Number of Repetitions",
              "description": "How many times the repeater will run a task before stopping",
              "type": "numberInput",
              "defaultValue": 5,
              "validators": [null],
              "props": { "min": 2, "max": 100, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "stopRepeatingStrategy",
                    "compare": "NOT_EQUAL",
                    "value": "numberOfRepetitions"
                  }
                ]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "stopChannel",
            "option": {
              "label": "Stop repeater when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Stop the repeater when the device receives a signal from the selected channel",
              "hideIf": [
                [
                  {
                    "key": "stopRepeatingStrategy",
                    "compare": "NOT_EQUAL",
                    "value": "channel"
                  }
                ]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "maxConcurrentTasksPerPlayer",
            "option": {
              "label": "Max Concurrent Tasks Per Player",
              "description": "The maximum number of tasks that can be running at the same time for each player",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 8, "step": 1, "allowEmpty": false }
            }
          },
          {
            "key": "triggerTaskOnStart",
            "option": {
              "label": "Trigger Task On Start",
              "type": "select",
              "description": "If enabled, the task will run when the repeater starts. If disabled, it will wait until the first interval to run the task",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [{ "id": "action", "name": "Repeater runs task" }]
        },
        "in": {
          "connections": [
            { "id": "start", "name": "Start repeater" },
            { "id": "stop", "name": "Stop repeater" }
          ]
        }
      },
      "maxOnMap": 10,
      "initialMemoryCost": 500,
      "subsequentMemoryCost": 400
    },
    {
      "id": "respawn",
      "name": "Respawn",
      "description": "Force a player to respawn",
      "optionSchema": {
        "options": [
          {
            "key": "respawnOnChannel",
            "option": {
              "label": "Respawn player when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Respawn the triggering player when the device receives a signal from the selected channel"
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": { "connections": [{ "id": "respawn", "name": "Respawn player" }] }
      },
      "maxOnMap": 16
    },
    {
      "id": "scorebar",
      "name": "Scorebar",
      "description": "Shows Scorebar UI at the top",
      "optionSchema": {
        "options": [
          {
            "key": "numberOfTeams",
            "option": {
              "label": "Number of Teams",
              "description": "How many teams to show in Scorebar",
              "type": "select",
              "validators": [null],
              "defaultValue": 1,
              "props": {
                "options": [
                  { "value": 1, "name": "1" },
                  { "value": 2, "name": "2" },
                  { "value": 3, "name": "3" },
                  { "value": 4, "name": "4" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "team1",
            "option": {
              "label": "Team 1",
              "type": "select",
              "validators": [null],
              "defaultValue": "1",
              "props": {
                "options": [
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "colorTeam1",
            "option": {
              "label": "Team 1 Color",
              "type": "color",
              "defaultValue": "#e93d37",
              "validators": [null]
            }
          },
          {
            "key": "team2",
            "option": {
              "label": "Team 2",
              "type": "select",
              "validators": [null],
              "defaultValue": "2",
              "props": {
                "options": [
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "numberOfTeams", "compare": "LESS_THAN", "value": 2 }]
              ]
            }
          },
          {
            "key": "colorTeam2",
            "option": {
              "label": "Team 2 Color",
              "type": "color",
              "defaultValue": "#4d56f3",
              "validators": [null],
              "hideIf": [
                [{ "key": "numberOfTeams", "compare": "LESS_THAN", "value": 2 }]
              ]
            }
          },
          {
            "key": "team3",
            "option": {
              "label": "Team 3",
              "type": "select",
              "validators": [null],
              "defaultValue": "3",
              "props": {
                "options": [
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "numberOfTeams", "compare": "LESS_THAN", "value": 3 }]
              ]
            }
          },
          {
            "key": "colorTeam3",
            "option": {
              "label": "Team 3 Color",
              "type": "color",
              "defaultValue": "#3ce634",
              "validators": [null],
              "hideIf": [
                [{ "key": "numberOfTeams", "compare": "LESS_THAN", "value": 3 }]
              ]
            }
          },
          {
            "key": "team4",
            "option": {
              "label": "Team 4",
              "type": "select",
              "validators": [null],
              "defaultValue": "4",
              "props": {
                "options": [
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "numberOfTeams", "compare": "LESS_THAN", "value": 4 }]
              ]
            }
          },
          {
            "key": "colorTeam4",
            "option": {
              "label": "Team 4 Color",
              "type": "color",
              "defaultValue": "#9d34e6",
              "validators": [null],
              "hideIf": [
                [{ "key": "numberOfTeams", "compare": "LESS_THAN", "value": 4 }]
              ]
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {},
      "minimumRoleLevel": 90,
      "maxOnMap": 1,
      "initialMemoryCost": 20,
      "subsequentMemoryCost": 20
    },
    {
      "id": "sentry",
      "name": "Sentry",
      "description": "An AI enemy that will attempt to knockout other players",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "difficulty", "name": "Difficulty" },
            { "id": "health", "name": "Health" },
            { "id": "knockout", "name": "Knockout" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "weapon",
            "option": {
              "label": "Gadget",
              "description": "The gadget the sentry will use to fire at players",
              "type": "itemId",
              "defaultValue": "zapper_common",
              "validators": [null],
              "props": {
                "blockedItems": [
                  "pickaxe_common",
                  "pickaxe_uncommon",
                  "pickaxe_rare",
                  "pickaxe_epic",
                  "pickaxe_legendary",
                  "pixel_common",
                  "pixel_uncommon",
                  "pixel_rare",
                  "pixel_epic",
                  "pixel_legendary"
                ],
                "allowedItemsCategories": ["weapon"]
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "aimAccuracy",
            "option": {
              "label": "Aim Accuracy",
              "description": "Customize how accurate the sentry is when aiming at players",
              "type": "select",
              "validators": [null],
              "defaultValue": 0.5,
              "props": {
                "options": [
                  { "name": "Very Low", "value": 0 },
                  { "name": "Low", "value": 0.25 },
                  { "name": "Medium", "value": 0.5 },
                  { "name": "High", "value": 0.7 },
                  { "name": "Very High", "value": 0.9 },
                  { "name": "Max", "value": 1 }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["difficulty"]
          },
          {
            "key": "fireRate",
            "option": {
              "label": "Fire Rate",
              "description": "How quickly does the sentry fire projectiles?",
              "type": "select",
              "validators": [null],
              "defaultValue": 0.5,
              "props": {
                "options": [
                  { "name": "Super Slow", "value": 0 },
                  { "name": "Very Slow", "value": 0.1 },
                  { "name": "Slow", "value": 0.25 },
                  { "name": "Medium", "value": 0.5 },
                  { "name": "Fast", "value": 0.75 },
                  { "name": "Very Fast", "value": 0.9 },
                  { "name": "Fastest", "value": 1 }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["difficulty"]
          },
          {
            "key": "baseHealth",
            "option": {
              "label": "Sentry Health",
              "description": "How much health does the sentry have?",
              "type": "numberInput",
              "defaultValue": 100,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 100000,
                "step": 1,
                "allowEmpty": false
              }
            },
            "categories": ["featured", "health"]
          },
          {
            "key": "baseShield",
            "option": {
              "label": "Sentry Shield",
              "description": "How much shield does the sentry have?",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 100000,
                "step": 1,
                "allowEmpty": false
              }
            },
            "categories": ["health"]
          },
          {
            "key": "useAdaptiveHealth",
            "option": {
              "label": "Use Adaptive Health",
              "type": "select",
              "description": "If enabled, the sentry will increase its health and shield based on the number of players in the game.",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["health"]
          },
          {
            "key": "adaptiveHealth",
            "option": {
              "label": "Adaptive Health Amount",
              "description": "How much health should the sentry gain per player?",
              "type": "numberInput",
              "defaultValue": 5,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 10000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "useAdaptiveHealth",
                    "compare": "EQUAL",
                    "value": false
                  }
                ]
              ]
            },
            "categories": ["health"]
          },
          {
            "key": "adaptiveShield",
            "option": {
              "label": "Adaptive Shield Amount",
              "description": "How much shield should the sentry gain per player?",
              "type": "numberInput",
              "defaultValue": 5,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 10000,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "useAdaptiveHealth",
                    "compare": "EQUAL",
                    "value": false
                  }
                ]
              ]
            },
            "categories": ["health"]
          },
          {
            "key": "skinId",
            "option": {
              "label": "Sentry Appearance",
              "description": "Change the appearance of the sentry",
              "type": "select",
              "validators": [null],
              "defaultValue": "character_sentryRobot",
              "props": {
                "options": [
                  { "name": "Sentry Robot", "value": "character_sentryRobot" },
                  {
                    "name": "Green Evil Plant",
                    "value": "character_evilPlantGreen"
                  },
                  {
                    "name": "Pink Evil Plant",
                    "value": "character_evilPlantPink"
                  },
                  { "name": "Bonesy", "value": "character_skeleton" },
                  { "name": "Captain Buck", "value": "character_pirate" },
                  {
                    "name": "Chompz Costume",
                    "value": "character_redDinoCostume"
                  },
                  { "name": "Detective Baka", "value": "character_detective" },
                  { "name": "Echo Agent", "value": "character_echoAgent" },
                  { "name": "Kynami", "value": "character_redNinja" },
                  { "name": "Libre", "value": "character_luchador" },
                  { "name": "Ozi", "value": "character_mummy" },
                  { "name": "Raveena", "value": "character_witch" },
                  { "name": "Stache", "value": "character_mustache" },
                  { "name": "Vortex Agent", "value": "character_vortexAgent" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "team",
            "option": {
              "label": "Sentry Team",
              "description": "Set the team the Sentry belongs to. The Sentry will not attack other players/sentries on the same team.",
              "type": "select",
              "validators": [null],
              "defaultValue": "__SENTRY_TEAM",
              "props": {
                "options": [
                  { "value": "__SENTRY_TEAM", "name": "Team Sentry" },
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "doesRespawn",
            "option": {
              "label": "Respawn Enabled",
              "type": "select",
              "description": "Does the sentry respawn after getting knocked out?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured", "difficulty"]
          },
          {
            "key": "respawnDurationSeconds",
            "option": {
              "label": "Respawn Duration (Seconds)",
              "description": "When knocked out, how many seconds does the sentry take to respawn?",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": { "min": 0, "max": 600, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "doesRespawn",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["featured", "difficulty"]
          },
          {
            "key": "characterName",
            "option": {
              "label": "Sentry Name",
              "description": "Set a custom name for this sentry, shown when a player causes it to get knocked out",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Sentry", "maxLength": 24 }
            },
            "categories": ["featured"]
          },
          {
            "key": "rangeRadius",
            "option": {
              "label": "Range Radius",
              "description": "How far away can the sentry detect players?",
              "type": "numberInput",
              "defaultValue": 1000,
              "validators": [null],
              "props": {
                "min": 250,
                "max": 5000,
                "step": 1,
                "allowEmpty": false
              },
              "hidden": true
            }
          },
          {
            "key": "dropItem",
            "option": {
              "label": "Item Drop",
              "type": "select",
              "description": "Does this sentry drop an item when knocked out?",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["knockout"]
          },
          {
            "key": "itemId",
            "option": {
              "label": "Dropped Item",
              "description": "What item does this sentry drop when knocked out?",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [{ "key": "dropItem", "compare": "NOT_EQUAL", "value": true }]
              ]
            },
            "categories": ["knockout"]
          },
          {
            "key": "itemAmount",
            "option": {
              "label": "Dropped Item Amount",
              "description": "How many of the item does this sentry drop when knocked out?",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "dropItem", "compare": "NOT_EQUAL", "value": true }]
              ]
            },
            "categories": ["knockout"]
          },
          {
            "key": "onKnockoutChannel",
            "option": {
              "label": "When sentry knocked out, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When the sentry is knocked out, the device sends a signal on the selected channel"
            },
            "categories": ["knockout", "channels"]
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active on Game Start",
              "type": "select",
              "description": "Is the sentry spawned in when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate sentry when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the sentry when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate sentry when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the sentry when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [{ "id": "knockedOut", "name": "Sentry knocked out" }]
        },
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate sentry" },
            { "id": "deactivate", "name": "Deactivate sentry" }
          ]
        }
      },
      "maxOnMap": 100,
      "initialMemoryCost": 1000,
      "subsequentMemoryCost": 500
    },
    {
      "id": "shadow",
      "name": "Shadow",
      "description": "Create more realistic lighting by casting shadows",
      "optionSchema": {
        "options": [
          {
            "key": "width",
            "option": {
              "label": "Width",
              "type": "numberInput",
              "defaultValue": 300,
              "validators": [null],
              "props": { "min": 15, "max": 500 },
              "hidden": true
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Height",
              "type": "numberInput",
              "defaultValue": 130,
              "validators": [null],
              "props": { "min": 15, "max": 500 },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "soundEffect",
      "name": "Sound Effect",
      "description": "Play a sound effect",
      "optionSchema": {
        "options": [
          {
            "key": "audioUrl",
            "option": {
              "label": "Audio URL",
              "type": "textInput",
              "defaultValue": "https://www.soundjay.com/mechanical/sounds/empty-bullet-shell-fall-02.mp3",
              "validators": [null],
              "props": { "placeholder": "Enter audio url here..." }
            }
          },
          {
            "key": "volume",
            "option": {
              "label": "Volume",
              "type": "numberInput",
              "defaultValue": 50,
              "validators": [null],
              "props": { "min": 1, "max": 100, "step": 1, "allowEmpty": false }
            }
          },
          {
            "key": "playWhenReceivingFrom",
            "option": {
              "label": "Play When Receiving From...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "characterType",
            "option": {
              "label": "Allowed Player Type",
              "description": "Which kinds of players can this sound play for?",
              "type": "select",
              "validators": [null],
              "defaultValue": "all",
              "props": {
                "options": [
                  { "value": "all", "name": "Everybody" },
                  { "value": "gameOwner", "name": "Game Host" }
                ],
                "allowEmpty": false
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": { "connections": [{ "id": "play", "name": "Play sound effect" }] }
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "characterSpawnPad",
      "name": "Spawn Pad",
      "description": "Set where players should be when the game begins",
      "optionSchema": {
        "options": [
          {
            "key": "visibleInGame",
            "option": {
              "label": "Visible In-Game",
              "type": "select",
              "description": "Is the spawn pad visible when the game starts?",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "phase",
            "option": {
              "label": "Use During Phase",
              "description": "Which phase of the game should this spawn pad be used?",
              "type": "select",
              "validators": [null],
              "defaultValue": "All",
              "props": {
                "options": [
                  { "value": "All", "name": "All" },
                  { "value": "Game", "name": "Game" },
                  { "value": "Pre-Game", "name": "Pre-Game" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "teamId",
            "option": {
              "label": "Allowed Team",
              "description": "Which team can spawn at this spawn pad?",
              "type": "select",
              "validators": [null],
              "defaultValue": "__ANY_TEAM__",
              "props": {
                "options": [
                  { "name": "Any Team", "value": "__ANY_TEAM__" },
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "characterType",
            "option": {
              "label": "Allowed Player Type",
              "description": "Which kinds of players can spawn at this spawn pad?",
              "type": "select",
              "validators": [null],
              "defaultValue": "all",
              "props": {
                "options": [
                  { "value": "all", "name": "Everybody" },
                  { "value": "gameOwner", "name": "Game Host" },
                  { "value": "nonGameOwner", "name": "Players" }
                ],
                "allowEmpty": false
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "maxOnMap": 200
    },
    {
      "id": "speed",
      "name": "Speed Modifier",
      "description": "Change how fast a player moves",
      "optionSchema": {
        "options": [
          {
            "key": "speed",
            "option": {
              "label": "Speed",
              "description": "Speed the player will move at. 1 is default speed, 0.5 is half speed, 2 is double speed, etc.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 0, "max": 4, "step": 0.01, "allowEmpty": false }
            }
          },
          {
            "key": "activateWhenReceivingFrom",
            "option": {
              "label": "Set player to configured speed when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Set the triggering player to the configured speed when the device receives a signal from the selected channel"
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "setSpeed", "name": "Set player to configured speed" }
          ]
        }
      },
      "maxOnMap": 32
    },
    {
      "id": "startingInventory",
      "name": "Starting Inventory",
      "description": "Give players items when the game begins",
      "optionSchema": {
        "options": [
          {
            "key": "itemId",
            "option": {
              "label": "Item To Grant",
              "description": "The item that will be granted to the player at the start of the game",
              "type": "itemId",
              "validators": [null],
              "props": {}
            }
          },
          {
            "key": "itemAmount",
            "option": {
              "label": "Granted Item Amount",
              "description": "The amount of the item that will be granted to the player at the start of the game",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              }
            }
          },
          {
            "key": "equipOnGrant",
            "option": {
              "label": "Equip When Granted",
              "type": "select",
              "description": "If the item is a gadget or usable, should it be automatically equipped when granted?",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "grantDuringPhase",
            "option": {
              "label": "Grant During Phase",
              "description": "The phase the player gets the item.",
              "type": "select",
              "validators": [null],
              "defaultValue": "game",
              "props": {
                "options": [
                  { "name": "All", "value": "all" },
                  { "name": "Game", "value": "game" },
                  { "name": "Pre-Game", "value": "preGame" }
                ],
                "allowEmpty": false
              }
            },
            "minimumRoleLevel": 90
          },
          {
            "key": "grantForSavedCharacters",
            "option": {
              "label": "Grant For Saved Players",
              "type": "select",
              "description": "Should the item still be granted for players that have a save? This could allow players to duplicate the item by loading in, leaving, and then rejoining.",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "minimumRoleLevel": 90
          },
          {
            "key": "enabled",
            "option": {
              "label": "Enabled",
              "type": "select",
              "description": "If disabled, then this item will not be granted to the player.",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "minimumRoleLevel": 90
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "maxOnMap": 64
    },
    {
      "id": "tagZone",
      "name": "Tag Zone",
      "description": "Allow players to tag each-other!",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "channels", "name": "Channels" },
            { "id": "availability", "name": "Availability" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "taggingTeam",
            "option": {
              "label": "Tagging Team",
              "description": "The team that is allowed to tag other players",
              "type": "select",
              "validators": [null],
              "defaultValue": "1",
              "props": {
                "options": [
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "whenTaggedTransmitOn",
            "option": {
              "label": "When player tagged, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When a player is tagged, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "whenTagsTransmitOn",
            "option": {
              "label": "When player tags another player, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When a player tags another player, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "respawnWhenTagged",
            "option": {
              "label": "Respawn When Tagged",
              "type": "select",
              "description": "Respawn the tagged player when they are tagged",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "detectionArea",
            "option": {
              "label": "Tag Area",
              "description": "Set up tagging across the entire map or within a specific area",
              "type": "select",
              "validators": [null],
              "defaultValue": "everywhere",
              "props": {
                "options": [
                  { "name": "Entire Map", "value": "everywhere" },
                  { "name": "Zone", "value": "zone" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "detectionDistance",
            "option": {
              "label": "Tag Distance",
              "description": "Distance (in tiles) two players can be apart before a tag is registered",
              "type": "numberInput",
              "defaultValue": 1.5,
              "validators": [null],
              "props": {
                "min": 0.5,
                "max": 3,
                "step": 0.1,
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active on Game Start",
              "type": "select",
              "description": "Whether the tag zone is active when the game starts",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["availability"]
          },
          {
            "key": "activateWhenReceivingFrom",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the tag zone when the device receives a signal from the selected channel"
            },
            "categories": ["availability", "channels"]
          },
          {
            "key": "deactivateWhenReceivingFrom",
            "option": {
              "label": "Deactivate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the tag zone when the device receives a signal from the selected channel"
            },
            "categories": ["availability", "channels"]
          },
          {
            "key": "width",
            "option": {
              "label": "Zone Width",
              "type": "numberInput",
              "defaultValue": 500,
              "validators": [null],
              "props": { "min": 350, "max": 100000, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Zone Height",
              "type": "numberInput",
              "defaultValue": 500,
              "validators": [null],
              "props": { "min": 350, "max": 100000, "allowEmpty": false },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [
          { "type": "onTags", "name": "On player tags someone..." },
          { "type": "onTagged", "name": "On player tagged by someone else..." }
        ],
        "customBlocks": [
          "tag_zone_other_character_name",
          "tag_zone_other_character_team_number"
        ]
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "tags", "name": "Player tags someone" },
            { "id": "tagged", "name": "Player gets tagged by someone else" }
          ]
        },
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate Tag Zone Device" },
            { "id": "deactivate", "name": "Deactivate Tag Zone Device" }
          ]
        }
      },
      "maxOnMap": 6,
      "initialMemoryCost": 1500,
      "subsequentMemoryCost": 1500
    },
    {
      "id": "teamSettings",
      "name": "Team Settings",
      "description": "Set a team's name and modify other settings",
      "optionSchema": {
        "options": [
          {
            "key": "team",
            "option": {
              "label": "Team",
              "type": "select",
              "validators": [null],
              "defaultValue": "1",
              "props": {
                "options": [
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "teamName",
            "option": {
              "label": "Team Name",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "whenPlayerJoinsTransmitOn",
            "option": {
              "label": "When player joins team, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When a player joins this team, the device sends a signal on the selected channel"
            }
          },
          {
            "key": "maxPlayers",
            "option": {
              "label": "Max Players",
              "type": "select",
              "validators": [null],
              "defaultValue": 4,
              "props": {
                "options": [
                  { "name": "1", "value": 1 },
                  { "name": "2", "value": 2 },
                  { "name": "3", "value": 3 },
                  { "name": "4", "value": 4 },
                  { "name": "5", "value": 5 },
                  { "name": "6", "value": 6 },
                  { "name": "7", "value": 7 },
                  { "name": "8", "value": 8 },
                  { "name": "9", "value": 9 },
                  { "name": "10", "value": 10 },
                  { "name": "11", "value": 11 },
                  { "name": "12", "value": 12 },
                  { "name": "13", "value": 13 },
                  { "name": "14", "value": 14 },
                  { "name": "15", "value": 15 },
                  { "name": "16", "value": 16 },
                  { "name": "17", "value": 17 },
                  { "name": "18", "value": 18 },
                  { "name": "19", "value": 19 },
                  { "name": "20", "value": 20 },
                  { "name": "21", "value": 21 },
                  { "name": "22", "value": 22 },
                  { "name": "23", "value": 23 },
                  { "name": "24", "value": 24 },
                  { "name": "25", "value": 25 },
                  { "name": "26", "value": 26 },
                  { "name": "27", "value": 27 },
                  { "name": "28", "value": 28 },
                  { "name": "29", "value": 29 },
                  { "name": "30", "value": 30 },
                  { "name": "31", "value": 31 },
                  { "name": "32", "value": 32 },
                  { "name": "33", "value": 33 },
                  { "name": "34", "value": 34 },
                  { "name": "35", "value": 35 },
                  { "name": "36", "value": 36 },
                  { "name": "37", "value": 37 },
                  { "name": "38", "value": 38 },
                  { "name": "39", "value": 39 },
                  { "name": "40", "value": 40 },
                  { "name": "41", "value": 41 },
                  { "name": "42", "value": 42 },
                  { "name": "43", "value": 43 },
                  { "name": "44", "value": 44 },
                  { "name": "45", "value": 45 },
                  { "name": "46", "value": 46 },
                  { "name": "47", "value": 47 },
                  { "name": "48", "value": 48 },
                  { "name": "49", "value": 49 },
                  { "name": "50", "value": 50 },
                  { "name": "51", "value": 51 },
                  { "name": "52", "value": 52 },
                  { "name": "53", "value": 53 },
                  { "name": "54", "value": 54 },
                  { "name": "55", "value": 55 },
                  { "name": "56", "value": 56 },
                  { "name": "57", "value": 57 },
                  { "name": "58", "value": 58 },
                  { "name": "59", "value": 59 },
                  { "name": "60", "value": 60 }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "placementPriorityOnGameStart",
            "option": {
              "label": "Placement Priority On Game Start",
              "type": "select",
              "validators": [null],
              "defaultValue": 30,
              "props": {
                "options": [
                  { "name": "1st", "value": 1 },
                  { "name": "2nd", "value": 2 },
                  { "name": "3rd", "value": 3 },
                  { "name": "4th", "value": 4 },
                  { "name": "5th", "value": 5 },
                  { "name": "6th", "value": 6 },
                  { "name": "7th", "value": 7 },
                  { "name": "8th", "value": 8 },
                  { "name": "9th", "value": 9 },
                  { "name": "10th", "value": 10 },
                  { "name": "11th", "value": 11 },
                  { "name": "12th", "value": 12 },
                  { "name": "13th", "value": 13 },
                  { "name": "14th", "value": 14 },
                  { "name": "15th", "value": 15 },
                  { "name": "16th", "value": 16 },
                  { "name": "17th", "value": 17 },
                  { "name": "18th", "value": 18 },
                  { "name": "19th", "value": 19 },
                  { "name": "20th", "value": 20 },
                  { "name": "21st", "value": 21 },
                  { "name": "22nd", "value": 22 },
                  { "name": "23rd", "value": 23 },
                  { "name": "24th", "value": 24 },
                  { "name": "25th", "value": 25 },
                  { "name": "26th", "value": 26 },
                  { "name": "27th", "value": 27 },
                  { "name": "28th", "value": 28 },
                  { "name": "29th", "value": 29 },
                  { "name": "30th", "value": 30 },
                  { "name": "31st", "value": 31 },
                  { "name": "32nd", "value": 32 },
                  { "name": "33rd", "value": 33 },
                  { "name": "34th", "value": 34 },
                  { "name": "35th", "value": 35 },
                  { "name": "36th", "value": 36 },
                  { "name": "37th", "value": 37 },
                  { "name": "38th", "value": 38 },
                  { "name": "39th", "value": 39 },
                  { "name": "40th", "value": 40 },
                  { "name": "41st", "value": 41 },
                  { "name": "42nd", "value": 42 },
                  { "name": "43rd", "value": 43 },
                  { "name": "44th", "value": 44 },
                  { "name": "45th", "value": 45 },
                  { "name": "46th", "value": 46 },
                  { "name": "47th", "value": 47 },
                  { "name": "48th", "value": 48 },
                  { "name": "49th", "value": 49 },
                  { "name": "50th", "value": 50 },
                  { "name": "51st", "value": 51 },
                  { "name": "52nd", "value": 52 },
                  { "name": "53rd", "value": 53 },
                  { "name": "54th", "value": 54 },
                  { "name": "55th", "value": 55 },
                  { "name": "56th", "value": 56 },
                  { "name": "57th", "value": 57 },
                  { "name": "58th", "value": 58 },
                  { "name": "59th", "value": 59 },
                  { "name": "60th", "value": 60 }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "placementPriorityDuringGame",
            "option": {
              "label": "Placement Priority During Game",
              "type": "select",
              "validators": [null],
              "defaultValue": 30,
              "props": {
                "options": [
                  { "name": "1st", "value": 1 },
                  { "name": "2nd", "value": 2 },
                  { "name": "3rd", "value": 3 },
                  { "name": "4th", "value": 4 },
                  { "name": "5th", "value": 5 },
                  { "name": "6th", "value": 6 },
                  { "name": "7th", "value": 7 },
                  { "name": "8th", "value": 8 },
                  { "name": "9th", "value": 9 },
                  { "name": "10th", "value": 10 },
                  { "name": "11th", "value": 11 },
                  { "name": "12th", "value": 12 },
                  { "name": "13th", "value": 13 },
                  { "name": "14th", "value": 14 },
                  { "name": "15th", "value": 15 },
                  { "name": "16th", "value": 16 },
                  { "name": "17th", "value": 17 },
                  { "name": "18th", "value": 18 },
                  { "name": "19th", "value": 19 },
                  { "name": "20th", "value": 20 },
                  { "name": "21st", "value": 21 },
                  { "name": "22nd", "value": 22 },
                  { "name": "23rd", "value": 23 },
                  { "name": "24th", "value": 24 },
                  { "name": "25th", "value": 25 },
                  { "name": "26th", "value": 26 },
                  { "name": "27th", "value": 27 },
                  { "name": "28th", "value": 28 },
                  { "name": "29th", "value": 29 },
                  { "name": "30th", "value": 30 },
                  { "name": "31st", "value": 31 },
                  { "name": "32nd", "value": 32 },
                  { "name": "33rd", "value": 33 },
                  { "name": "34th", "value": 34 },
                  { "name": "35th", "value": 35 },
                  { "name": "36th", "value": 36 },
                  { "name": "37th", "value": 37 },
                  { "name": "38th", "value": 38 },
                  { "name": "39th", "value": 39 },
                  { "name": "40th", "value": 40 },
                  { "name": "41st", "value": 41 },
                  { "name": "42nd", "value": 42 },
                  { "name": "43rd", "value": 43 },
                  { "name": "44th", "value": 44 },
                  { "name": "45th", "value": 45 },
                  { "name": "46th", "value": 46 },
                  { "name": "47th", "value": 47 },
                  { "name": "48th", "value": 48 },
                  { "name": "49th", "value": 49 },
                  { "name": "50th", "value": 50 },
                  { "name": "51st", "value": 51 },
                  { "name": "52nd", "value": 52 },
                  { "name": "53rd", "value": 53 },
                  { "name": "54th", "value": 54 },
                  { "name": "55th", "value": 55 },
                  { "name": "56th", "value": 56 },
                  { "name": "57th", "value": 57 },
                  { "name": "58th", "value": 58 },
                  { "name": "59th", "value": 59 },
                  { "name": "60th", "value": 60 }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "allowCustomHostPlacement",
            "option": {
              "label": "Allow custom host placement",
              "type": "select",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [
          {
            "type": "WHEN_PLAYER_COUNT_CHANGES",
            "name": "When player count changes..."
          }
        ],
        "customBlocks": ["get_player_count"]
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "characterJoinsTeam", "name": "Player joins team" }
          ]
        }
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "teamSwitcher",
      "name": "Team Switcher",
      "description": "Switch a player to a different team",
      "optionSchema": {
        "options": [
          {
            "key": "switchToStrategy",
            "option": {
              "label": "Switch Strategy",
              "description": "How to choose which team to switch to",
              "type": "select",
              "validators": [null],
              "defaultValue": "randomTeam",
              "props": {
                "options": [
                  { "name": "Random Team", "value": "randomTeam" },
                  { "name": "Specific Team", "value": "specificTeam" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "specificTeam",
            "option": {
              "label": "Team",
              "description": "The team the player will switch to",
              "type": "select",
              "validators": [null],
              "defaultValue": "__SPECTATORS_TEAM",
              "props": {
                "options": [
                  { "name": "Spectators", "value": "__SPECTATORS_TEAM" },
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "switchToStrategy",
                    "compare": "NOT_EQUAL",
                    "value": "specificTeam"
                  }
                ]
              ]
            }
          },
          {
            "key": "switchChannel",
            "option": {
              "label": "Switch to configured team when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Switch to configured team when the device receives a signal from the selected channel"
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "switch", "name": "Switch player to configured team" }
          ]
        }
      },
      "maxOnMap": 100,
      "initialMemoryCost": 7,
      "subsequentMemoryCost": 7
    },
    {
      "id": "teleporter",
      "name": "Teleporter",
      "description": "Teleport players from one location to another",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "group",
            "option": {
              "label": "Group",
              "description": "The group this teleporter belongs to",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Group here...",
                "category": "teleporter-group",
                "maxLength": 64
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "targetGroup",
            "option": {
              "label": "Target Group",
              "description": "When a player enters, they will teleport to a teleporter with this group",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Group here...",
                "category": "teleporter-group",
                "maxLength": 64
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "whenTeleportedHereChannel",
            "option": {
              "label": "When teleported here, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When a player is teleported here, the device sends a signal on the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "teleportToOnChannel",
            "option": {
              "label": "Teleport here when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Teleport to this teleporter when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "teleportToTargetChannel",
            "option": {
              "label": "Teleport to target when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Teleport to the teleporter's target when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "visibleInGame",
            "option": {
              "label": "Visible In-Game",
              "type": "select",
              "description": "Whether the teleporter is visible in-game",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "teleportedHere", "name": "Player teleported here" }
          ]
        },
        "in": {
          "connections": [
            { "id": "teleportHere", "name": "Teleport player here" },
            { "id": "teleportToTarget", "name": "Teleport player to target" }
          ]
        }
      },
      "maxOnMap": 300,
      "initialMemoryCost": 50,
      "subsequentMemoryCost": 50
    },
    {
      "id": "terrainLayerAppearance",
      "name": "Terrain Layer Appearance",
      "optionSchema": {
        "options": [
          {
            "key": "layer",
            "option": {
              "label": "Layer",
              "type": "select",
              "validators": [null],
              "defaultValue": "AdditionalBackground1",
              "props": {
                "options": [
                  { "name": "Background 1", "value": "AdditionalBackground1" },
                  { "name": "Background 2", "value": "AdditionalBackground2" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "modifyTint",
            "option": {
              "label": "Modify Tint",
              "type": "select",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "tint",
            "option": {
              "label": "Tint",
              "type": "color",
              "defaultValue": "#ffffff",
              "validators": [null],
              "hideIf": [
                [{ "key": "modifyTint", "compare": "NOT_EQUAL", "value": true }]
              ]
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "minimumRoleLevel": 90,
      "initialMemoryCost": 0,
      "subsequentMemoryCost": 0
    },
    {
      "id": "textBillboard",
      "name": "Text",
      "description": "Place down text with your content & style",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "appearance", "name": "Appearance" },
            { "id": "availability", "name": "Availability" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "text",
            "option": {
              "label": "Text",
              "description": "Set the text to display",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Enter text here...",
                "textArea": true,
                "maxLength": 256
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "fontSize",
            "option": {
              "label": "Text Size",
              "description": "Set the font size",
              "type": "numberInput",
              "defaultValue": 22,
              "validators": [null],
              "props": { "min": 6, "max": 144, "step": 1, "allowEmpty": false }
            },
            "categories": ["featured", "appearance"]
          },
          {
            "key": "scope",
            "option": {
              "label": "Content Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the content of the text changes, who does it apply to?"
            },
            "categories": ["featured"]
          },
          {
            "key": "googleFont",
            "option": {
              "label": "Font",
              "description": "Select the font for the text",
              "type": "select",
              "validators": [null],
              "defaultValue": "Rubik",
              "props": {
                "options": [
                  { "value": "Rubik", "name": "Rubik" },
                  { "value": "Roboto", "name": "Roboto" },
                  { "value": "Staatliches", "name": "Staatliches" },
                  { "value": "Galindo", "name": "Galindo" },
                  { "value": "Kalam", "name": "Kalam" },
                  { "value": "Bangers", "name": "Bangers" },
                  { "value": "Fugaz One", "name": "Fugaz One" },
                  { "value": "Outfit", "name": "Outfit" },
                  { "value": "PT Mono", "name": "PT Mono" },
                  { "value": "Space Grotesk", "name": "Space Grotesk" },
                  { "value": "Lobster", "name": "Lobster" },
                  { "value": "Zeyada", "name": "Zeyada" },
                  { "value": "Titan One", "name": "Titan One" },
                  { "value": "Rye", "name": "Rye" },
                  { "value": "Caprasimo", "name": "Caprasimo" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["appearance"]
          },
          {
            "key": "color",
            "option": {
              "label": "Text Color",
              "type": "color",
              "defaultValue": "#000000",
              "validators": [null]
            },
            "categories": ["appearance"]
          },
          {
            "key": "alpha",
            "option": {
              "label": "Alpha",
              "description": "Set the transparency of the text. 1 is fully visible, 0 is invisible.",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0.2,
                "max": 1,
                "step": 0.01,
                "allowEmpty": false
              }
            },
            "categories": ["appearance"]
          },
          {
            "key": "strokeThickness",
            "option": {
              "label": "Stroke Width",
              "description": "Add a stroke traced around each letter",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "min": 0, "max": 36, "step": 1, "allowEmpty": false }
            },
            "categories": ["appearance"]
          },
          {
            "key": "strokeColor",
            "option": {
              "label": "Stroke Color",
              "description": "The color of the stroke around each letter",
              "type": "color",
              "defaultValue": "#FFFFFF",
              "validators": [null],
              "hideIf": [
                [{ "key": "strokeThickness", "compare": "EQUAL", "value": 0 }]
              ]
            },
            "categories": ["appearance"]
          },
          {
            "key": "rotation",
            "option": {
              "label": "Rotation",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "min": -360, "max": 360, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "visibleOnGameStart",
            "option": {
              "label": "Visible On Game Start",
              "description": "Should the text be visible when the game starts?",
              "type": "select",
              "validators": [null],
              "defaultValue": "Yes",
              "props": {
                "options": [
                  { "value": "Yes", "name": "Yes" },
                  { "value": "No", "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["availability"]
          },
          {
            "key": "showWhenReceivingFrom",
            "option": {
              "label": "Show text when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Show the text when the device receives a signal from the selected channel"
            },
            "categories": ["availability"]
          },
          {
            "key": "hideWhenReceivingFrom",
            "option": {
              "label": "Hide text when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Hide the text when the device receives a signal from the selected channel"
            },
            "categories": ["availability"]
          }
        ]
      },
      "defaultState": { "text": "", "textColor": "", "visible": true },
      "codeGridSchema": {
        "allowChannelGrids": true,
        "triggers": [{ "type": "wire", "name": "On wire pulse..." }],
        "customBlocks": ["set_billboard_text", "set_text_color"]
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "show", "name": "Show text" },
            { "id": "hide", "name": "Hide text" },
            { "id": "codeGrid", "name": "Run wire pulse block" }
          ]
        }
      },
      "maxOnMap": 400,
      "initialMemoryCost": 60,
      "subsequentMemoryCost": 60
    },
    {
      "id": "trigger",
      "name": "Trigger",
      "description": "Core device to send messages and run events",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "configuration", "name": "Configuration" },
            { "id": "availability", "name": "Availability" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "channelToTrigger",
            "option": {
              "label": "When triggered, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When this trigger is triggered, the device sends a signal on the selected channel"
            },
            "categories": ["featured"]
          },
          {
            "key": "triggerWhenReceivingOnChannel",
            "option": {
              "label": "Trigger when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Trigger this trigger when the device receives a signal from the selected channel"
            },
            "categories": ["featured"]
          },
          {
            "key": "triggerDelay",
            "option": {
              "label": "Trigger Delay",
              "description": "Once triggered, how long (in seconds) does it wait before taking action?",
              "type": "numberInput",
              "validators": [null],
              "props": { "min": 0, "max": 120, "allowEmpty": true }
            },
            "categories": ["featured", "configuration"]
          },
          {
            "key": "visibleInGame",
            "option": {
              "label": "Visible In-Game",
              "type": "select",
              "description": "Is this trigger visible in-game?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "team",
            "option": {
              "label": "Allowed Team",
              "description": "What team is allowed to trigger this device?",
              "type": "select",
              "validators": [null],
              "defaultValue": "__ANY_TEAM__",
              "props": {
                "options": [
                  { "name": "Any Team", "value": "__ANY_TEAM__" },
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["configuration"]
          },
          {
            "key": "maxTriggers",
            "option": {
              "label": "Max Triggers",
              "description": "How many times can this trigger be triggered?",
              "type": "numberInput",
              "validators": [null],
              "props": { "min": 1, "max": 100, "allowEmpty": true }
            },
            "categories": ["configuration"]
          },
          {
            "key": "scope",
            "option": {
              "label": "Max Triggers Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "The count of times triggers is shared by who?",
              "hideIf": [[{ "key": "maxTriggers", "compare": "EQUAL" }]]
            },
            "categories": ["configuration"]
          },
          {
            "key": "allowedModeType",
            "option": {
              "label": "Allowed Mode Type",
              "description": "Will only trigger when the mode type matches",
              "type": "select",
              "validators": [null],
              "defaultValue": "all",
              "props": {
                "options": [
                  { "name": "All", "value": "all" },
                  { "name": "Live Game", "value": "liveGame" },
                  { "name": "Assignment", "value": "assignment" }
                ],
                "allowEmpty": false
              }
            },
            "minimumRoleLevel": 90,
            "categories": ["configuration"]
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Is the trigger active and ready to transmit when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["availability"]
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate this trigger when the device receives a signal from the selected channel"
            },
            "categories": ["availability"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate this trigger when the device receives a signal from the selected channel"
            },
            "categories": ["availability"]
          },
          {
            "key": "activeScope",
            "option": {
              "label": "Active Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When the trigger is activated/deactivated, who does it apply to?"
            },
            "categories": ["availability"]
          },
          {
            "key": "triggeredByPlayerCollision",
            "option": {
              "label": "Trigger By Player Collision",
              "type": "select",
              "description": "Can this trigger be triggered by a player stepping over it?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["configuration"]
          }
        ]
      },
      "defaultState": { "active": true },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [{ "type": "WHEN_TRIGGERED", "name": "When triggered..." }],
        "customBlocks": []
      },
      "wireConfig": {
        "out": { "connections": [{ "id": "triggered", "name": "Triggered" }] },
        "in": {
          "connections": [
            { "id": "trigger", "name": "Trigger" },
            { "id": "activate", "name": "Activate trigger" },
            { "id": "deactivate", "name": "Deactivate trigger" }
          ]
        }
      },
      "initialMemoryCost": 40,
      "subsequentMemoryCost": 40
    },
    {
      "id": "vendingMachine",
      "name": "Vending Machine",
      "description": "Device used to sell items to players",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "Featured", "name": "Featured" },
            { "id": "Grant Item", "name": "Grant Item" },
            { "id": "Transmit On Channel", "name": "Transmit On Channel" },
            { "id": "Appearance", "name": "Appearance" },
            { "id": "Availability", "name": "Availability" },
            { "id": "Adaptive Cost", "name": "Adaptive Cost" },
            { "id": "Stock", "name": "Stock" },
            { "id": "Funding", "name": "Funding" },
            { "id": "Channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "grantAction",
            "option": {
              "label": "Purchase Action",
              "description": "When a player purchases from the vending machine, does the device grant an item or transmit on a channel?",
              "type": "select",
              "validators": [null],
              "defaultValue": "Grant Item",
              "props": {
                "options": [
                  { "value": "Grant Item", "name": "Grant Item" },
                  {
                    "value": "Broadcast On Channel",
                    "name": "Transmit On Channel"
                  }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Featured", "Grant Item", "Transmit On Channel"]
          },
          {
            "key": "requiredItemId",
            "option": {
              "label": "Required Item",
              "description": "The item required for a player to purchase from the vending machine",
              "type": "itemId",
              "validators": [null],
              "props": {}
            },
            "categories": ["Featured"]
          },
          {
            "key": "amountOfRequiredItem",
            "option": {
              "label": "Required Item Amount",
              "description": "How much of the required item a player must have to purchase from the vending machine",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              }
            },
            "categories": ["Featured"]
          },
          {
            "key": "grantedItemId",
            "option": {
              "label": "Granted Item",
              "description": "When a player purchases from the vending machine, what item is granted to them?",
              "type": "itemId",
              "validators": [null],
              "props": {},
              "hideIf": [
                [
                  {
                    "key": "grantAction",
                    "compare": "NOT_EQUAL",
                    "value": "Grant Item"
                  }
                ]
              ]
            },
            "categories": ["Featured", "Grant Item"]
          },
          {
            "key": "amountOfGrantedItem",
            "option": {
              "label": "Granted Item Amount",
              "description": "How much of the granted item is given to the player",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 999999999999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "grantAction",
                    "compare": "NOT_EQUAL",
                    "value": "Grant Item"
                  }
                ]
              ]
            },
            "categories": ["Featured", "Grant Item"]
          },
          {
            "key": "purchaseChannel",
            "option": {
              "label": "When item purchased, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When a player purchases the item from the vending machine, the device sends a signal on the selected channel"
            },
            "categories": ["Featured", "Transmit On Channel", "Channels"]
          },
          {
            "key": "visibleInGame",
            "option": {
              "label": "Visible In-Game",
              "type": "select",
              "description": "Is the body of the Vending Machine present in-game?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Featured", "Appearance"]
          },
          {
            "key": "grantedItemImageUrl",
            "option": {
              "label": "Item Image",
              "description": "Supply an image shown for the item in the vending machine. Custom images are not allowed. Refer to the Gimkit Creative documentation for usage of icon images.",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 64 },
              "hideIf": [
                [
                  {
                    "key": "grantAction",
                    "compare": "NOT_EQUAL",
                    "value": "Broadcast On Channel"
                  }
                ],
                [{ "key": "visibleInGame", "compare": "EQUAL", "value": false }]
              ]
            },
            "categories": ["Transmit On Channel", "Appearance"]
          },
          {
            "key": "grantedItemName",
            "option": {
              "label": "Item Name",
              "description": "The name of the item being purchased from the vending machine. By default, the name of the Granted Item is used.",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 64 }
            },
            "categories": ["Appearance", "Transmit On Channel"]
          },
          {
            "key": "grantedItemDescription",
            "option": {
              "label": "Item Description",
              "description": "An optional description of the item being purchased from the vending machine.",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 128 }
            },
            "categories": ["Appearance", "Transmit On Channel"]
          },
          {
            "key": "deactivateOnPurchase",
            "option": {
              "label": "Deactivate On Purchase",
              "type": "select",
              "description": "If enabled, the vending machine will deactivate after the item is purchased.",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Availability"]
          },
          {
            "key": "useAdaptiveCost",
            "option": {
              "label": "Use Adaptive Cost",
              "type": "select",
              "description": "If enabled, the cost of the item will increase based on the number of players in-game",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Adaptive Cost"]
          },
          {
            "key": "adaptiveCostIncreasePerPlayer",
            "option": {
              "label": "Adaptive Cost Increase Per Player",
              "description": "How much the cost of the item increases per additional player",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 999999999,
                "step": 1,
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "useAdaptiveCost",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["Adaptive Cost"]
          },
          {
            "key": "allowFunding",
            "option": {
              "label": "Allow Funding",
              "type": "select",
              "description": "If enabled, players can fund the vending machine to decrease the cost of the item",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Funding"]
          },
          {
            "key": "fundingScope",
            "option": {
              "label": "Funding Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "For funding, the current price of the item is applied to who?",
              "hideIf": [
                [
                  {
                    "key": "allowFunding",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["Funding"]
          },
          {
            "key": "useLimitedStock",
            "option": {
              "label": "Use Limited Stock",
              "type": "select",
              "description": "If enabled, the vending machine will be out of stock after a certain amount of purchases",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "deactivateOnPurchase",
                    "compare": "EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["Stock"]
          },
          {
            "key": "maxStock",
            "option": {
              "label": "Limited Stock Amount",
              "description": "The maximum amount of purchases that can be made from the vending machine before it goes out of stock",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": { "min": 1, "max": 999, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "useLimitedStock",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ],
                [
                  {
                    "key": "deactivateOnPurchase",
                    "compare": "EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["Stock"]
          },
          {
            "key": "maxStockScope",
            "option": {
              "label": "Limited Stock Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "The current stock of the vending machine is applied to who?",
              "hideIf": [
                [
                  {
                    "key": "useLimitedStock",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ],
                [
                  {
                    "key": "deactivateOnPurchase",
                    "compare": "EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["Stock"]
          },
          {
            "key": "attachCostToNameWhenHidden",
            "option": {
              "label": "Attach Cost To Name",
              "type": "select",
              "description": "When enabled, the cost of the item will be added to the end of the item's name",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "visibleInGame", "compare": "EQUAL", "value": true }]
              ]
            }
          },
          {
            "key": "activeOnStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Is this vending machine available to make purchases from when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Availability"]
          },
          {
            "key": "activeScope",
            "option": {
              "label": "Active Scope",
              "type": "select",
              "defaultValue": "player",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "When activated/deactivated, who does it apply to?"
            },
            "categories": ["Availability"]
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the vending machine when the device receives a signal from the selected channel"
            },
            "categories": ["Availability", "Channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the vending machine when the device receives a signal from the selected channel"
            },
            "categories": ["Availability", "Channels"]
          },
          {
            "key": "allowedPurchaseTeam",
            "option": {
              "label": "Team Allowed To Purchased",
              "description": "Which team is allowed to purchase from the vending machine?",
              "type": "select",
              "validators": [null],
              "defaultValue": "__ANY_TEAM__",
              "props": {
                "options": [
                  { "name": "Any Team", "value": "__ANY_TEAM__" },
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Availability"]
          },
          {
            "key": "attemptToPurchaseChannel",
            "option": {
              "label": "Attempt to purchase when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Attempt to purchase an item from the vending machine when the device receives a signal from the selected channel"
            },
            "categories": ["Channels"]
          },
          {
            "key": "onAttemptedPurchaseFailedChannel",
            "option": {
              "label": "When attempted purchase failed, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When a player attempted to purchase an item from the vending machine, but failed, the device sends a signal on the selected channel"
            },
            "categories": ["Channels"]
          },
          {
            "key": "interactionDuration",
            "option": {
              "label": "Interaction Duration",
              "description": "How long does a player have to interact with the vending machine to make the purchase?",
              "type": "select",
              "validators": [null],
              "defaultValue": 1,
              "props": {
                "options": [
                  { "name": "Instant", "value": 0 },
                  { "name": "1 Second", "value": 1 },
                  { "name": "3 Seconds", "value": 3 },
                  { "name": "5 Seconds", "value": 5 }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Appearance"]
          },
          {
            "key": "matchItemRarity",
            "option": {
              "label": "Match Item Rarity",
              "type": "select",
              "description": "Match the colors of the vending machine to the granted item's rarity",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "grantAction",
                    "compare": "NOT_EQUAL",
                    "value": "Grant Item"
                  }
                ]
              ]
            },
            "categories": ["Appearance"]
          },
          {
            "key": "backgroundColor1",
            "option": {
              "label": "Exterior Color",
              "description": "The color of the vending machine background exterior",
              "type": "color",
              "defaultValue": "#d44224",
              "validators": [null],
              "hideIf": [
                [
                  {
                    "key": "matchItemRarity",
                    "compare": "EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["Appearance"]
          },
          {
            "key": "backgroundColor2",
            "option": {
              "label": "Interior Color",
              "description": "The color of the vending machine background interior",
              "type": "color",
              "defaultValue": "#f7d253",
              "validators": [null],
              "hideIf": [
                [
                  {
                    "key": "matchItemRarity",
                    "compare": "EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["Appearance"]
          },
          {
            "key": "raysColor",
            "option": {
              "label": "Rays Color",
              "description": "The color of the rays rotating on the vending machine",
              "type": "color",
              "defaultValue": "#f7d253",
              "validators": [null],
              "hideIf": [
                [
                  {
                    "key": "matchItemRarity",
                    "compare": "EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["Appearance"]
          },
          {
            "key": "numberOfRays",
            "option": {
              "label": "Number Of Rays",
              "type": "numberInput",
              "defaultValue": 16,
              "validators": [null],
              "props": { "min": 4, "max": 64, "step": 1, "allowEmpty": false }
            },
            "minimumRoleLevel": 90,
            "categories": ["Appearance"]
          },
          {
            "key": "raysWidthFactor",
            "option": {
              "label": "Ray Width Factor",
              "type": "numberInput",
              "defaultValue": 1.25,
              "validators": [null],
              "props": {
                "min": 0.5,
                "max": 3,
                "step": 0.05,
                "allowEmpty": false
              }
            },
            "minimumRoleLevel": 90,
            "categories": ["Appearance"]
          },
          {
            "key": "raysAlpha",
            "option": {
              "label": "Ray Alpha",
              "type": "numberInput",
              "defaultValue": 0.5,
              "validators": [null],
              "props": { "min": 0, "max": 1, "step": 0.01, "allowEmpty": false }
            },
            "minimumRoleLevel": 90,
            "categories": ["Appearance"]
          },
          {
            "key": "raysAdditive",
            "option": {
              "label": "Use Additive Blend Mode",
              "type": "select",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "minimumRoleLevel": 90,
            "categories": ["Appearance"]
          },
          {
            "key": "soundEnabled",
            "option": {
              "label": "Sound Enabled",
              "type": "select",
              "description": "Play a sound effect when the item is purchased",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Appearance"]
          },
          {
            "key": "showShadow",
            "option": {
              "label": "Cast Shadow",
              "type": "select",
              "description": "Does the vending machine cast a shadow?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "value": "visibleInGame",
                    "compare": "EQUAL",
                    "key": "false"
                  }
                ]
              ]
            },
            "categories": ["Appearance"]
          },
          {
            "key": "width",
            "option": {
              "label": "Width",
              "type": "numberInput",
              "defaultValue": 250,
              "validators": [null],
              "props": {
                "min": 250,
                "max": 750,
                "step": 1,
                "allowEmpty": false
              },
              "hidden": true
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Height",
              "type": "numberInput",
              "defaultValue": 250,
              "validators": [null],
              "props": {
                "min": 250,
                "max": 750,
                "step": 1,
                "allowEmpty": false
              },
              "hidden": true
            }
          },
          {
            "key": "radius",
            "option": {
              "label": "InteractionRadius",
              "type": "numberInput",
              "defaultValue": 100,
              "validators": [null],
              "props": {
                "min": 50,
                "max": 200,
                "step": 1,
                "allowEmpty": false
              },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": {
        "active": false,
        "currentStock": 0,
        "fundedAmount": 0,
        "cost": 0
      },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "itemPurchased", "name": "Item purchased" },
            { "id": "activated", "name": "Machine activated" },
            { "id": "deactivated", "name": "Machine deactivated" },
            { "id": "purchasedFailed", "name": "Attempt to purchase fails" }
          ]
        },
        "in": {
          "connections": [
            { "id": "attemptToPurchase", "name": "Attempt to purchase" },
            { "id": "activate", "name": "Activate machine" },
            { "id": "deactivate", "name": "Deactivate machine" }
          ]
        }
      },
      "initialMemoryCost": 125,
      "subsequentMemoryCost": 125
    },
    {
      "id": "voiceLine",
      "name": "Voice Line",
      "description": "Plays Voice Overs",
      "optionSchema": {
        "options": [
          {
            "key": "playBehavior",
            "option": {
              "label": "Play Bahavior",
              "description": "What should happen when the device is triggered and an audio line is already playing?",
              "type": "select",
              "validators": [null],
              "defaultValue": "interrupt",
              "props": {
                "options": [
                  { "name": "Interrupt", "value": "interrupt" },
                  { "name": "Queue", "value": "queue" },
                  { "name": "Cancel", "value": "cancel" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "volume",
            "option": {
              "label": "Volume",
              "description": "The volume of Voice Overs",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": {
                "min": 0,
                "max": 1,
                "step": 0.001,
                "allowEmpty": false
              }
            }
          },
          {
            "key": "playChance",
            "option": {
              "label": "Play Chance",
              "description": "Percentage chance that the voice line will play when triggered",
              "type": "numberInput",
              "defaultValue": 100,
              "validators": [null],
              "props": { "min": 0, "max": 100, "step": 1, "allowEmpty": false }
            }
          },
          {
            "key": "audioUrl1",
            "option": {
              "label": "Audio URL 1",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "audioUrl2",
            "option": {
              "label": "Audio URL 2",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "audioUrl3",
            "option": {
              "label": "Audio URL 3",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "audioUrl4",
            "option": {
              "label": "Audio URL 4",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "audioUrl5",
            "option": {
              "label": "Audio URL 5",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "audioUrl6",
            "option": {
              "label": "Audio URL 6",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "audioUrl7",
            "option": {
              "label": "Audio URL 7",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "audioUrl8",
            "option": {
              "label": "Audio URL 8",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here..." }
            }
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active on game start",
              "type": "select",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "playWhenReceivingOnChannel",
            "option": {
              "label": "Play When Receiving On...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": { "connections": [{ "id": "play", "name": "Play sound" }] }
      },
      "minimumRoleLevel": 90,
      "maxOnMap": 512,
      "initialMemoryCost": 25,
      "subsequentMemoryCost": 25
    },
    {
      "id": "waypoint",
      "name": "Waypoint",
      "description": "Mark a location for players to pay attention to",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "featured", "name": "Featured" },
            { "id": "channels", "name": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "target",
            "option": {
              "label": "Waypoint Target",
              "description": "What is the waypoint tracking?",
              "type": "select",
              "validators": [null],
              "defaultValue": "deviceLocation",
              "props": {
                "options": [
                  { "name": "Location Of Device", "value": "deviceLocation" },
                  { "name": "Location Of Player", "value": "player" },
                  {
                    "name": "Flag",
                    "value": "flag",
                    "supportedMapStyles": ["topDown"]
                  },
                  {
                    "name": "Ball",
                    "value": "ball",
                    "supportedMapStyles": ["topDown"]
                  }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "flagColor",
            "option": {
              "label": "Flag Color",
              "description": "The color of the flag the waypoint will track",
              "type": "select",
              "validators": [null],
              "defaultValue": "black",
              "props": {
                "options": [
                  { "name": "Black", "value": "black" },
                  { "name": "Blue", "value": "blue" },
                  { "name": "Green", "value": "green" },
                  { "name": "Orange", "value": "orange" },
                  { "name": "Purple", "value": "purple" },
                  { "name": "Red", "value": "red" },
                  { "name": "White", "value": "white" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "target", "compare": "NOT_EQUAL", "value": "flag" }]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "ballId",
            "option": {
              "label": "Ball Identifier",
              "description": "Enter the identifier of the Ball you want to track. Make sure to set the identifier on the proper Ball Device as well.",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Enter ID here...",
                "category": "ball-id"
              },
              "hideIf": [
                [{ "key": "target", "compare": "NOT_EQUAL", "value": "ball" }]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "name",
            "option": {
              "label": "Waypoint Name",
              "description": "The display name of the waypoint shown in-game",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Text here...", "maxLength": 32 }
            },
            "categories": ["featured"]
          },
          {
            "key": "useDeactivateWithinRange",
            "option": {
              "label": "Deactivate When Player Within Range",
              "type": "select",
              "description": "Automatically deactivate the waypoint when a player is within range to it",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [
                  {
                    "key": "target",
                    "compare": "NOT_EQUAL",
                    "value": "deviceLocation"
                  }
                ]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "deactivateWithinRange",
            "option": {
              "label": "Automatic Deactivation Range",
              "description": "Distance (in meters) the waypoint will automatically deactivate when a player is within range to it",
              "type": "numberInput",
              "defaultValue": 3,
              "validators": [null],
              "props": { "min": 1, "max": 50, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "target",
                    "compare": "NOT_EQUAL",
                    "value": "deviceLocation"
                  }
                ],
                [
                  {
                    "key": "useDeactivateWithinRange",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["featured"]
          },
          {
            "key": "startFollowingPlayer",
            "option": {
              "label": "Start following player when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Start following the triggering player when the device receives a signal from the selected channel",
              "hideIf": [
                [{ "key": "target", "compare": "NOT_EQUAL", "value": "player" }]
              ]
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "stopFollowingPlayer",
            "option": {
              "label": "Stop following player when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Stop following the currently tracked player when the device receives a signal from the selected channel",
              "hideIf": [
                [{ "key": "target", "compare": "NOT_EQUAL", "value": "player" }]
              ]
            },
            "categories": ["featured", "channels"]
          },
          {
            "key": "hideWhenFlagIsInBase",
            "option": {
              "label": "Hide When Flag Is In Base",
              "type": "select",
              "description": "Hide the waypoint when the flag is in the base",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              },
              "hideIf": [
                [{ "key": "target", "compare": "NOT_EQUAL", "value": "flag" }]
              ]
            }
          },
          {
            "key": "activeOnGameStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "Is the waypoint active & visible when the game starts?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["featured"]
          },
          {
            "key": "color",
            "option": {
              "label": "Waypoint Color",
              "description": "Change the color of the waypoint's UI",
              "type": "color",
              "defaultValue": "#FFFFFF",
              "validators": [null]
            },
            "categories": ["featured"]
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate when the device receives a signal from the selected channel"
            },
            "categories": ["channels"]
          },
          {
            "key": "scope",
            "option": {
              "label": "Activate Scope",
              "type": "select",
              "defaultValue": "global",
              "validators": [null],
              "props": {
                "options": [
                  { "value": "global", "name": "global" },
                  { "value": "player", "name": "player" },
                  { "value": "team", "name": "team" }
                ],
                "allowEmpty": false
              },
              "description": "Activation/deactivation of the waypoint applies to who?"
            }
          }
        ]
      },
      "defaultState": { "active": false },
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate waypoint" },
            { "id": "deactivate", "name": "Deactivate waypoint" }
          ]
        }
      },
      "maxOnMap": 64,
      "initialMemoryCost": 175,
      "subsequentMemoryCost": 175
    },
    {
      "id": "wireRepeater",
      "name": "Wire Repeater",
      "description": "A node to connect wires to/from",
      "optionSchema": {
        "options": [
          {
            "key": "delaySeconds",
            "option": {
              "label": "Delay",
              "description": "When a pulse is received, how long (in seconds) to wait before relaying it",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "min": 0, "max": 60, "step": 0.1, "allowEmpty": false }
            }
          },
          {
            "key": "team",
            "option": {
              "label": "Allowed Team",
              "description": "The wire's pulse will be blocked if the message is not from a player on this team",
              "type": "select",
              "validators": [null],
              "defaultValue": "__ANY_TEAM__",
              "props": {
                "options": [
                  { "name": "Any Team", "value": "__ANY_TEAM__" },
                  { "name": "Team 1", "value": "1" },
                  { "name": "Team 2", "value": "2" },
                  { "name": "Team 3", "value": "3" },
                  { "name": "Team 4", "value": "4" },
                  { "name": "Team 5", "value": "5" },
                  { "name": "Team 6", "value": "6" },
                  { "name": "Team 7", "value": "7" },
                  { "name": "Team 8", "value": "8" },
                  { "name": "Team 9", "value": "9" },
                  { "name": "Team 10", "value": "10" },
                  { "name": "Team 11", "value": "11" },
                  { "name": "Team 12", "value": "12" },
                  { "name": "Team 13", "value": "13" },
                  { "name": "Team 14", "value": "14" },
                  { "name": "Team 15", "value": "15" },
                  { "name": "Team 16", "value": "16" },
                  { "name": "Team 17", "value": "17" },
                  { "name": "Team 18", "value": "18" },
                  { "name": "Team 19", "value": "19" },
                  { "name": "Team 20", "value": "20" },
                  { "name": "Team 21", "value": "21" },
                  { "name": "Team 22", "value": "22" },
                  { "name": "Team 23", "value": "23" },
                  { "name": "Team 24", "value": "24" },
                  { "name": "Team 25", "value": "25" },
                  { "name": "Team 26", "value": "26" },
                  { "name": "Team 27", "value": "27" },
                  { "name": "Team 28", "value": "28" },
                  { "name": "Team 29", "value": "29" },
                  { "name": "Team 30", "value": "30" },
                  { "name": "Team 31", "value": "31" },
                  { "name": "Team 32", "value": "32" },
                  { "name": "Team 33", "value": "33" },
                  { "name": "Team 34", "value": "34" },
                  { "name": "Team 35", "value": "35" },
                  { "name": "Team 36", "value": "36" },
                  { "name": "Team 37", "value": "37" },
                  { "name": "Team 38", "value": "38" },
                  { "name": "Team 39", "value": "39" },
                  { "name": "Team 40", "value": "40" },
                  { "name": "Team 41", "value": "41" },
                  { "name": "Team 42", "value": "42" },
                  { "name": "Team 43", "value": "43" },
                  { "name": "Team 44", "value": "44" },
                  { "name": "Team 45", "value": "45" },
                  { "name": "Team 46", "value": "46" },
                  { "name": "Team 47", "value": "47" },
                  { "name": "Team 48", "value": "48" },
                  { "name": "Team 49", "value": "49" },
                  { "name": "Team 50", "value": "50" },
                  { "name": "Team 51", "value": "51" },
                  { "name": "Team 52", "value": "52" },
                  { "name": "Team 53", "value": "53" },
                  { "name": "Team 54", "value": "54" },
                  { "name": "Team 55", "value": "55" },
                  { "name": "Team 56", "value": "56" },
                  { "name": "Team 57", "value": "57" },
                  { "name": "Team 58", "value": "58" },
                  { "name": "Team 59", "value": "59" },
                  { "name": "Team 60", "value": "60" }
                ],
                "allowEmpty": false
              }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "maxOnMap": 1000,
      "initialMemoryCost": 5,
      "subsequentMemoryCost": 5
    },
    {
      "id": "xp",
      "name": "XP Granter",
      "description": "Grant XP to allow players to level up!",
      "optionSchema": {
        "options": [
          {
            "key": "amount",
            "option": {
              "label": "XP To Grant",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": {
                "min": 1,
                "max": 10000,
                "step": 1,
                "allowEmpty": false
              }
            }
          },
          {
            "key": "reason",
            "option": {
              "label": "Reason",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": { "placeholder": "Achievement accomplished" }
            }
          },
          {
            "key": "grantOnChannel",
            "option": {
              "label": "Grant when receiving on channel...",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              }
            }
          },
          {
            "key": "useIncrementalGrant",
            "option": {
              "label": "Use Incremental Grant",
              "type": "select",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "incrementalGrantCharacterRequirement",
            "option": {
              "label": "Incremental Grant Character Requirement",
              "type": "numberInput",
              "defaultValue": 10,
              "validators": [null],
              "props": { "min": 1, "max": 60, "step": 1, "allowEmpty": false }
            }
          },
          {
            "key": "useMinimumCharacterCount",
            "option": {
              "label": "Use Minimum Character Count",
              "type": "select",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "minimumCharacterCount",
            "option": {
              "label": "Minimum Character Count",
              "type": "numberInput",
              "defaultValue": 6,
              "validators": [null],
              "props": { "min": 1, "max": 60, "step": 1, "allowEmpty": false }
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "in": { "connections": [{ "id": "grant", "name": "Grant XP" }] }
      },
      "minimumRoleLevel": 90
    },
    {
      "id": "zone",
      "name": "Zone",
      "description": "Detect when players enter certain areas, and change characteristics about those areas",
      "optionSchema": {
        "categories": {
          "categories": [
            { "id": "Featured", "name": "Featured" },
            { "id": "Items", "name": "Items" },
            { "name": "Channels", "id": "Channels" }
          ],
          "showAllOptionsAt": "end"
        },
        "options": [
          {
            "key": "playerEntersChannel",
            "option": {
              "label": "When player enters zone, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When player enters the zone, the device sends a signal on the selected channel"
            },
            "categories": ["Featured", "Channels"]
          },
          {
            "key": "playerLeavesChannel",
            "option": {
              "label": "When player leaves zone, transmit on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "When player leaves the zone, the device sends a signal on the selected channel"
            },
            "categories": ["Featured", "Channels"]
          },
          {
            "key": "allowWeaponFire",
            "option": {
              "label": "Allow Gadget Fire",
              "type": "select",
              "description": "Are gadgets allowed to be fired in the zone?",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Featured", "Items"]
          },
          {
            "key": "shape",
            "option": {
              "label": "Zone Shape",
              "description": "Set the shape of the zone",
              "type": "select",
              "validators": [null],
              "defaultValue": "rectangle",
              "props": {
                "options": [
                  { "name": "Rectangle", "value": "rectangle" },
                  { "name": "Circle", "value": "circle" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Featured"]
          },
          {
            "key": "visibleInGame",
            "option": {
              "label": "Visible In Game",
              "type": "select",
              "description": "Is the zone visible to players during the game?",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Featured"]
          },
          {
            "key": "color",
            "option": {
              "label": "Background Color",
              "type": "color",
              "defaultValue": "#FFFFFF",
              "validators": [null]
            }
          },
          {
            "key": "activeOnStart",
            "option": {
              "label": "Active On Game Start",
              "type": "select",
              "description": "If enabled, the zone will be active when the game starts",
              "defaultValue": true,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            }
          },
          {
            "key": "activateChannel",
            "option": {
              "label": "Activate zone when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Activate the zone when the device receives a signal from the selected channel"
            },
            "categories": ["Channels"]
          },
          {
            "key": "deactivateChannel",
            "option": {
              "label": "Deactivate zone when receiving on",
              "type": "textInput",
              "defaultValue": "",
              "validators": [null],
              "props": {
                "placeholder": "Channel name...",
                "category": "channel",
                "maxLength": 100
              },
              "description": "Deactivate the zone when the device receives a signal from the selected channel"
            },
            "categories": ["Channels"]
          },
          {
            "key": "allowWeaponDrop",
            "option": {
              "label": "Allow Gadget Drop",
              "description": "Are players allowed to drop gadgets in the zone?",
              "type": "select",
              "validators": [null],
              "defaultValue": "Do Not Override",
              "props": {
                "options": [
                  { "name": "Do Not Override", "value": "Do Not Override" },
                  { "name": "Yes", "value": "Yes" },
                  { "name": "No", "value": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Items"]
          },
          {
            "key": "allowItemDrop",
            "option": {
              "label": "Allow Usable Drop",
              "description": "Are players allowed to drop usable items in the zone?",
              "type": "select",
              "validators": [null],
              "defaultValue": "Do Not Override",
              "props": {
                "options": [
                  { "name": "Do Not Override", "value": "Do Not Override" },
                  { "name": "Yes", "value": "Yes" },
                  { "name": "No", "value": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Items"]
          },
          {
            "key": "allowResourceDrop",
            "option": {
              "label": "Allow Resource Drop",
              "description": "Are players allowed to drop resources in the zone?",
              "type": "select",
              "validators": [null],
              "defaultValue": "Do Not Override",
              "props": {
                "options": [
                  { "name": "Do Not Override", "value": "Do Not Override" },
                  { "name": "Yes", "value": "Yes" },
                  { "name": "No", "value": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Items"]
          },
          {
            "key": "droppedItemDecayEnabled",
            "option": {
              "label": "Dropped Item Decay Enabled",
              "type": "select",
              "description": "If enabled, items dropped in the zone will automatically disappear after a set amount of time",
              "defaultValue": false,
              "validators": [null],
              "props": {
                "options": [
                  { "value": true, "name": "Yes" },
                  { "value": false, "name": "No" }
                ],
                "allowEmpty": false
              }
            },
            "categories": ["Items"]
          },
          {
            "key": "droppedItemDecay",
            "option": {
              "label": "Dropped Item Decay",
              "description": "How long (in seconds) it takes for items to disappear after being dropped in the zone",
              "type": "numberInput",
              "defaultValue": 1,
              "validators": [null],
              "props": { "min": 1, "max": 600, "step": 1, "allowEmpty": false },
              "hideIf": [
                [
                  {
                    "key": "droppedItemDecayEnabled",
                    "compare": "NOT_EQUAL",
                    "value": true
                  }
                ]
              ]
            },
            "categories": ["Items"]
          },
          {
            "key": "width",
            "option": {
              "label": "Width",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": { "min": 100, "max": 25000, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "height",
            "option": {
              "label": "Height",
              "type": "numberInput",
              "defaultValue": 200,
              "validators": [null],
              "props": { "min": 100, "max": 25000, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "radius",
            "option": {
              "label": "Radius",
              "type": "numberInput",
              "defaultValue": 100,
              "validators": [null],
              "props": { "min": 50, "max": 3500, "allowEmpty": false },
              "hidden": true
            }
          },
          {
            "key": "rotation",
            "option": {
              "label": "Angle",
              "type": "numberInput",
              "defaultValue": 0,
              "validators": [null],
              "props": { "allowEmpty": false },
              "hidden": true
            }
          }
        ]
      },
      "defaultState": {},
      "codeGridSchema": {
        "allowChannelGrids": false,
        "triggers": [],
        "customBlocks": []
      },
      "wireConfig": {
        "out": {
          "connections": [
            { "id": "characterEnters", "name": "Player enters zone" },
            { "id": "characterLeaves", "name": "Player leaves zone" }
          ]
        },
        "in": {
          "connections": [
            { "id": "activate", "name": "Activate zone" },
            { "id": "deactivate", "name": "Deactivate zone" }
          ]
        }
      },
      "maxOnMap": 64,
      "initialMemoryCost": 300,
      "subsequentMemoryCost": 200
    }
  ],
  "itemOptions": [
    {
      "type": "resource",
      "id": "bait",
      "name": "Bait",
      "editorName": "Bait",
      "description": "Catch on!",
      "previewImage": "/assets/map/inventory/resources/bait.png"
    },
    {
      "type": "resource",
      "id": "banana",
      "name": "Banana",
      "editorName": "Banana",
      "description": "Good for potassium",
      "previewImage": "/assets/map/inventory/resources/banana.png"
    },
    {
      "type": "resource",
      "id": "beach-fish",
      "name": "Beach Fish",
      "editorName": "Beach Fish",
      "description": "You catch some waves while I swim in them.",
      "previewImage": "/assets/map/inventory/resources/beach_fish.png"
    },
    {
      "type": "resource",
      "id": "berry-fish",
      "name": "Berry Fish",
      "editorName": "Berry Fish",
      "description": "You're looking berry good.",
      "previewImage": "/assets/map/inventory/resources/berry_fish.png"
    },
    {
      "type": "resource",
      "id": "black-seed",
      "name": "Black Seed",
      "editorName": "Black Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/black_seed.png"
    },
    {
      "type": "resource",
      "id": "blackberry",
      "name": "Blackberry",
      "editorName": "Blackberry",
      "description": "The berry, not the phone.",
      "previewImage": "/assets/map/inventory/resources/blackberry.png"
    },
    {
      "type": "weapon",
      "id": "blaster_common",
      "name": "Blaster",
      "editorName": "Blaster (Common)",
      "description": "Primary gadget used for Blastball",
      "previewImage": "/assets/map/inventory/weapons/blaster.png",
      "rarity": "common",
      "weapon": {
        "type": "bullet",
        "appearance": "blaster",
        "shared": {
          "cooldownBetweenShots": 200,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.9
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "blaster_uncommon",
      "name": "Blaster",
      "editorName": "Blaster (Uncommon)",
      "description": "Primary gadget used for Blastball",
      "previewImage": "/assets/map/inventory/weapons/blaster.png",
      "rarity": "uncommon",
      "weapon": {
        "type": "bullet",
        "appearance": "blaster",
        "shared": {
          "cooldownBetweenShots": 200,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.9
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "blaster_rare",
      "name": "Blaster",
      "editorName": "Blaster (Rare)",
      "description": "Primary gadget used for Blastball",
      "previewImage": "/assets/map/inventory/weapons/blaster.png",
      "rarity": "rare",
      "weapon": {
        "type": "bullet",
        "appearance": "blaster",
        "shared": {
          "cooldownBetweenShots": 200,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.9
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "blaster_epic",
      "name": "Blaster",
      "editorName": "Blaster (Epic)",
      "description": "Primary gadget used for Blastball",
      "previewImage": "/assets/map/inventory/weapons/blaster.png",
      "rarity": "epic",
      "weapon": {
        "type": "bullet",
        "appearance": "blaster",
        "shared": {
          "cooldownBetweenShots": 200,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.9
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "blaster_legendary",
      "name": "Blaster",
      "editorName": "Blaster (Legendary)",
      "description": "Primary gadget used for Blastball",
      "previewImage": "/assets/map/inventory/weapons/blaster.png",
      "rarity": "legendary",
      "weapon": {
        "type": "bullet",
        "appearance": "blaster",
        "shared": {
          "cooldownBetweenShots": 200,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.9
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "resource",
      "id": "blue-fish",
      "name": "Blue Fish",
      "editorName": "Blue Fish",
      "description": "Just blending in...",
      "previewImage": "/assets/map/inventory/resources/blue_fish.png"
    },
    {
      "type": "resource",
      "id": "blue-key",
      "name": "Blue Key",
      "editorName": "Blue Key",
      "description": "What you need to get where you want.",
      "previewImage": "/assets/map/inventory/resources/key_2.png"
    },
    {
      "type": "resource",
      "id": "blue-keycard",
      "name": "Blue Keycard",
      "editorName": "Blue Keycard",
      "description": "Deposit and gain access.",
      "previewImage": "/assets/map/inventory/resources/keycard_blue.png"
    },
    {
      "type": "resource",
      "id": "blue-seed",
      "name": "Blue Seed",
      "editorName": "Blue Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/blue_seed.png"
    },
    {
      "type": "resource",
      "id": "blueberry",
      "name": "Blueberry",
      "editorName": "Blueberry",
      "description": "I really am more purple though, aren't I?",
      "previewImage": "/assets/map/inventory/resources/blueberry.png"
    },
    {
      "type": "resource",
      "id": "bronze-seed",
      "name": "Bronze Seed",
      "editorName": "Bronze Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/bronze_seed.png"
    },
    {
      "type": "resource",
      "id": "brown-seed",
      "name": "Brown Seed",
      "editorName": "Brown Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/brown_seed.png"
    },
    {
      "type": "resource",
      "id": "cash",
      "name": "Cash",
      "editorName": "Cash",
      "description": "Make it rain.",
      "previewImage": "/assets/map/inventory/resources/cash.png"
    },
    {
      "type": "resource",
      "id": "cash-berry",
      "name": "Cash Berry",
      "editorName": "Cash Berry",
      "description": "Money does grow on trees!",
      "previewImage": "/assets/map/inventory/resources/cash_berry.png"
    },
    {
      "type": "resource",
      "id": "chemicals",
      "name": "Chemicals",
      "editorName": "Chemicals",
      "description": "A compound for an important experiment",
      "previewImage": "/assets/map/inventory/resources/chemicals.png",
      "minimumRoleLevel": 90
    },
    {
      "type": "resource",
      "id": "coffee-bean",
      "name": "Coffee Bean",
      "editorName": "Coffee Bean",
      "description": "Roast me!",
      "previewImage": "/assets/map/inventory/resources/coffee_bean.png"
    },
    {
      "type": "resource",
      "id": "coral-seed",
      "name": "Coral Seed",
      "editorName": "Coral Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/coral_seed.png"
    },
    {
      "type": "resource",
      "id": "corn",
      "name": "Corn",
      "editorName": "Corn",
      "description": "Have a corntastic day!",
      "previewImage": "/assets/map/inventory/resources/corn.png"
    },
    {
      "type": "resource",
      "id": "cyan-seed",
      "name": "Cyan Seed",
      "editorName": "Cyan Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/cyan_seed.png"
    },
    {
      "type": "resource",
      "id": "dark-green-seed",
      "name": "Dark Green Seed",
      "editorName": "Dark Green Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/dark_green_seed.png"
    },
    {
      "type": "item",
      "id": "terrain_dynamic_copper",
      "name": "Dynamic Copper",
      "editorName": "Dynamic Copper",
      "description": "Build structures made of copper",
      "previewImage": "/assets/map/inventory/items/terrain_dynamic_copper.png",
      "rarity": "rare",
      "useCommand": "Drop",
      "consumeType": "buildTerrain",
      "terrainId": "Dynamic Copper",
      "maxStackSize": 50
    },
    {
      "type": "item",
      "id": "terrain_dynamic_diamond",
      "name": "Dynamic Diamond",
      "editorName": "Dynamic Diamond",
      "description": "Build structures made of diamond",
      "previewImage": "/assets/map/inventory/items/terrain_dynamic_diamond.png",
      "rarity": "legendary",
      "useCommand": "Drop",
      "consumeType": "buildTerrain",
      "terrainId": "Dynamic Diamond",
      "maxStackSize": 50
    },
    {
      "type": "item",
      "id": "terrain_dynamic_dirt",
      "name": "Dynamic Dirt",
      "editorName": "Dynamic Dirt",
      "description": "Build structures made of dirt",
      "previewImage": "/assets/map/inventory/items/terrain_dynamic_dirt.png",
      "rarity": "common",
      "useCommand": "Drop",
      "consumeType": "buildTerrain",
      "terrainId": "Dynamic Dirt",
      "maxStackSize": 50
    },
    {
      "type": "item",
      "id": "terrain_dynamic_gold",
      "name": "Dynamic Gold",
      "editorName": "Dynamic Gold",
      "description": "Build structures made of gold",
      "previewImage": "/assets/map/inventory/items/terrain_dynamic_gold.png",
      "rarity": "epic",
      "useCommand": "Drop",
      "consumeType": "buildTerrain",
      "terrainId": "Dynamic Gold",
      "maxStackSize": 50
    },
    {
      "type": "item",
      "id": "terrain_dynamic_ruby",
      "name": "Dynamic Ruby",
      "editorName": "Dynamic Ruby",
      "description": "Build structures made of ruby",
      "previewImage": "/assets/map/inventory/items/terrain_dynamic_ruby.png",
      "rarity": "epic",
      "useCommand": "Drop",
      "consumeType": "buildTerrain",
      "terrainId": "Dynamic Ruby",
      "maxStackSize": 50
    },
    {
      "type": "item",
      "id": "terrain_dynamic_sand",
      "name": "Dynamic Sand",
      "editorName": "Dynamic Sand",
      "description": "Build structures made of sand",
      "previewImage": "/assets/map/inventory/items/terrain_dynamic_sand.png",
      "rarity": "uncommon",
      "useCommand": "Drop",
      "consumeType": "buildTerrain",
      "terrainId": "Dynamic Sand",
      "maxStackSize": 50
    },
    {
      "type": "item",
      "id": "terrain_dynamic_silver",
      "name": "Dynamic Silver",
      "editorName": "Dynamic Silver",
      "description": "Build structures made of silver",
      "previewImage": "/assets/map/inventory/items/terrain_dynamic_silver.png",
      "rarity": "rare",
      "useCommand": "Drop",
      "consumeType": "buildTerrain",
      "terrainId": "Dynamic Silver",
      "maxStackSize": 50
    },
    {
      "type": "item",
      "id": "terrain_dynamic_stone",
      "name": "Dynamic Stone",
      "editorName": "Dynamic Stone",
      "description": "Build structures made of stone",
      "previewImage": "/assets/map/inventory/items/terrain_dynamic_stone.png",
      "rarity": "rare",
      "useCommand": "Drop",
      "consumeType": "buildTerrain",
      "terrainId": "Dynamic Stone",
      "maxStackSize": 50
    },
    {
      "type": "resource",
      "id": "energy",
      "name": "Energy",
      "editorName": "Energy",
      "description": "Just keep moving, just keep moving...",
      "previewImage": "/assets/map/inventory/resources/energy.png"
    },
    {
      "type": "resource",
      "id": "energy-bar",
      "name": "Energy Bar",
      "editorName": "Energy Bar",
      "description": "Enough energy to get you through the day.",
      "previewImage": "/assets/map/inventory/resources/energy_bar.png"
    },
    {
      "type": "weapon",
      "id": "evil_eye_common",
      "name": "Evil Eye",
      "editorName": "Evil Eye (Common)",
      "description": "Keep an eye on your target.",
      "previewImage": "/assets/map/inventory/weapons/evil_eye.png",
      "rarity": "common",
      "weapon": {
        "type": "bullet",
        "appearance": "evilEye",
        "shared": {
          "cooldownBetweenShots": 370,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "heavy-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "evil_eye_uncommon",
      "name": "Evil Eye",
      "editorName": "Evil Eye (Uncommon)",
      "description": "Keep an eye on your target.",
      "previewImage": "/assets/map/inventory/weapons/evil_eye.png",
      "rarity": "uncommon",
      "weapon": {
        "type": "bullet",
        "appearance": "evilEye",
        "shared": {
          "cooldownBetweenShots": 370,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "heavy-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "evil_eye_rare",
      "name": "Evil Eye",
      "editorName": "Evil Eye (Rare)",
      "description": "Keep an eye on your target.",
      "previewImage": "/assets/map/inventory/weapons/evil_eye.png",
      "rarity": "rare",
      "weapon": {
        "type": "bullet",
        "appearance": "evilEye",
        "shared": {
          "cooldownBetweenShots": 370,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "heavy-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "evil_eye_epic",
      "name": "Evil Eye",
      "editorName": "Evil Eye (Epic)",
      "description": "Keep an eye on your target.",
      "previewImage": "/assets/map/inventory/weapons/evil_eye.png",
      "rarity": "epic",
      "weapon": {
        "type": "bullet",
        "appearance": "evilEye",
        "shared": {
          "cooldownBetweenShots": 370,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "heavy-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "evil_eye_legendary",
      "name": "Evil Eye",
      "editorName": "Evil Eye (Legendary)",
      "description": "Keep an eye on your target.",
      "previewImage": "/assets/map/inventory/weapons/evil_eye.png",
      "rarity": "legendary",
      "weapon": {
        "type": "bullet",
        "appearance": "evilEye",
        "shared": {
          "cooldownBetweenShots": 370,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "heavy-shards" }
      }
    },
    {
      "type": "item",
      "id": "flag_black",
      "name": "Flag",
      "editorName": "Flag",
      "description": "Claim & capture!",
      "previewImage": "/assets/map/inventory/items/flag_black.png",
      "minimumRoleLevel": 90,
      "rarity": "rare",
      "useCommand": "Drop",
      "maxStackSize": 1
    },
    {
      "type": "item",
      "id": "flag_blue",
      "name": "Flag",
      "editorName": "Flag",
      "description": "Claim & capture!",
      "previewImage": "/assets/map/inventory/items/flag_blue.png",
      "minimumRoleLevel": 90,
      "rarity": "rare",
      "useCommand": "Drop",
      "maxStackSize": 1
    },
    {
      "type": "item",
      "id": "flag_green",
      "name": "Flag",
      "editorName": "Flag",
      "description": "Claim & capture!",
      "previewImage": "/assets/map/inventory/items/flag_green.png",
      "minimumRoleLevel": 90,
      "rarity": "rare",
      "useCommand": "Drop",
      "maxStackSize": 1
    },
    {
      "type": "item",
      "id": "flag_orange",
      "name": "Flag",
      "editorName": "Flag",
      "description": "Claim & capture!",
      "previewImage": "/assets/map/inventory/items/flag_orange.png",
      "minimumRoleLevel": 90,
      "rarity": "rare",
      "useCommand": "Drop",
      "maxStackSize": 1
    },
    {
      "type": "item",
      "id": "flag_purple",
      "name": "Flag",
      "editorName": "Flag",
      "description": "Claim & capture!",
      "previewImage": "/assets/map/inventory/items/flag_purple.png",
      "minimumRoleLevel": 90,
      "rarity": "rare",
      "useCommand": "Drop",
      "maxStackSize": 1
    },
    {
      "type": "item",
      "id": "flag_red",
      "name": "Flag",
      "editorName": "Flag",
      "description": "Claim & capture!",
      "previewImage": "/assets/map/inventory/items/flag_red.png",
      "minimumRoleLevel": 90,
      "rarity": "rare",
      "useCommand": "Drop",
      "maxStackSize": 1
    },
    {
      "type": "item",
      "id": "flag_yellow",
      "name": "Flag",
      "editorName": "Flag",
      "description": "Claim & capture!",
      "previewImage": "/assets/map/inventory/items/flag_yellow.png",
      "minimumRoleLevel": 90,
      "rarity": "rare",
      "useCommand": "Drop",
      "maxStackSize": 1
    },
    {
      "type": "item",
      "id": "flag_white",
      "name": "Flag",
      "editorName": "Flag",
      "description": "Claim & capture!",
      "previewImage": "/assets/map/inventory/items/flag_white.png",
      "minimumRoleLevel": 90,
      "rarity": "rare",
      "useCommand": "Drop",
      "maxStackSize": 1
    },
    {
      "type": "resource",
      "id": "galaxy-fish",
      "name": "Galaxy Fish",
      "editorName": "Galaxy Fish",
      "description": "I swam here from across the Milky Way.",
      "previewImage": "/assets/map/inventory/resources/galaxy_fish.png"
    },
    {
      "type": "resource",
      "id": "gimberry",
      "name": "GimBerry",
      "editorName": "GimBerry",
      "description": "Fancy fruit.",
      "previewImage": "/assets/map/inventory/resources/gimberry.png"
    },
    {
      "type": "resource",
      "id": "gim-fish",
      "name": "GimFish",
      "editorName": "GimFish",
      "description": "You're representing Gimkit...so look sharp.",
      "previewImage": "/assets/map/inventory/resources/gimfish.png"
    },
    {
      "type": "resource",
      "id": "gimgulp",
      "name": "GimGulp",
      "editorName": "GimGulp",
      "description": "Not the healthiest, but for sure the tastiest.",
      "previewImage": "/assets/map/inventory/resources/gimgulp.png",
      "minimumRoleLevel": 90
    },
    {
      "type": "resource",
      "id": "gold",
      "name": "Gold",
      "editorName": "Gold",
      "description": "Ahoy! Get me some gold coins!",
      "previewImage": "/assets/map/inventory/resources/dollar-coin.png",
      "minimumRoleLevel": 90
    },
    {
      "type": "resource",
      "id": "gold-key",
      "name": "Gold Key",
      "editorName": "Gold Key",
      "description": "What you need to get where you want.",
      "previewImage": "/assets/map/inventory/resources/key_4.png"
    },
    {
      "type": "resource",
      "id": "gold-keycard",
      "name": "Gold Keycard",
      "editorName": "Gold Keycard",
      "description": "Deposit and gain access.",
      "previewImage": "/assets/map/inventory/resources/keycard_gold.png"
    },
    {
      "type": "resource",
      "id": "gold-seed",
      "name": "Gold Seed",
      "editorName": "Gold Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/gold_seed.png"
    },
    {
      "type": "resource",
      "id": "grapes",
      "name": "Grapes",
      "editorName": "Grapes",
      "description": "Sour and sweet.",
      "previewImage": "/assets/map/inventory/resources/grapes.png"
    },
    {
      "type": "resource",
      "id": "gray-fish",
      "name": "Gray Fish",
      "editorName": "Gray Fish",
      "description": "A gray(t) catch.",
      "previewImage": "/assets/map/inventory/resources/gray_fish.png"
    },
    {
      "type": "resource",
      "id": "green-fish",
      "name": "Green Fish",
      "editorName": "Green Fish",
      "description": "Just because I'm green, doesn't mean I'm healthy.",
      "previewImage": "/assets/map/inventory/resources/green_fish.png"
    },
    {
      "type": "resource",
      "id": "green-key",
      "name": "Green Key",
      "editorName": "Green Key",
      "description": "What you need to get where you want.",
      "previewImage": "/assets/map/inventory/resources/key_1.png"
    },
    {
      "type": "resource",
      "id": "green-keycard",
      "name": "Green Keycard",
      "editorName": "Green Keycard",
      "description": "Deposit and gain access.",
      "previewImage": "/assets/map/inventory/resources/keycard_green.png"
    },
    {
      "type": "resource",
      "id": "green-pepper",
      "name": "Green Pepper",
      "editorName": "Green Pepper",
      "description": "Still pretty spicy",
      "previewImage": "/assets/map/inventory/resources/green_pepper.png"
    },
    {
      "type": "resource",
      "id": "green-seed",
      "name": "Green Seed",
      "editorName": "Green Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/green_seed.png"
    },
    {
      "type": "resource",
      "id": "heavy-shards",
      "name": "Heavy Shards",
      "editorName": "Heavy Shards",
      "description": "Unique stone used to refill certain gadgets",
      "previewImage": "/assets/map/inventory/resources/heavy_shards.png"
    },
    {
      "type": "resource",
      "id": "light-shards",
      "name": "Light Shards",
      "editorName": "Light Shards",
      "description": "Unique stone used to refill certain gadgets",
      "previewImage": "/assets/map/inventory/resources/light_shards.png"
    },
    {
      "type": "resource",
      "id": "lottery-ticket",
      "name": "Lottery Ticket",
      "editorName": "Lottery Ticket",
      "description": "Is today your lucky day?",
      "previewImage": "/assets/map/inventory/resources/lottery_ticket.png"
    },
    {
      "type": "resource",
      "id": "magenta-seed",
      "name": "Magenta Seed",
      "editorName": "Magenta Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/magenta_seed.png"
    },
    {
      "type": "item",
      "id": "medpack",
      "name": "Med Pack",
      "editorName": "Med Pack",
      "description": "Patch up and get back in the game!",
      "previewImage": "/assets/map/inventory/items/medpack.png",
      "rarity": "uncommon",
      "maxStackSize": 2
    },
    {
      "type": "resource",
      "id": "medium-shards",
      "name": "Medium Shards",
      "editorName": "Medium Shards",
      "description": "Unique stone used to refill certain gadgets",
      "previewImage": "/assets/map/inventory/resources/medium_shards.png"
    },
    {
      "type": "resource",
      "id": "orange",
      "name": "Orange",
      "editorName": "Orange",
      "description": "Orange you glad you found this?",
      "previewImage": "/assets/map/inventory/resources/orange.png"
    },
    {
      "type": "resource",
      "id": "orange-seed",
      "name": "Orange Seed",
      "editorName": "Orange Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/orange_seed.png"
    },
    {
      "type": "weapon",
      "id": "muffin_launcher_common",
      "name": "P.M.L",
      "editorName": "P.M.L (Common)",
      "description": "Bake the competition into shreds.",
      "previewImage": "/assets/map/inventory/weapons/muffin_launcher.png",
      "rarity": "common",
      "weapon": {
        "type": "bullet",
        "appearance": "muffinLauncher",
        "shared": {
          "cooldownBetweenShots": 740,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.97
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "muffin_launcher_uncommon",
      "name": "P.M.L",
      "editorName": "P.M.L (Uncommon)",
      "description": "Bake the competition into shreds.",
      "previewImage": "/assets/map/inventory/weapons/muffin_launcher.png",
      "rarity": "uncommon",
      "weapon": {
        "type": "bullet",
        "appearance": "muffinLauncher",
        "shared": {
          "cooldownBetweenShots": 740,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.97
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "muffin_launcher_rare",
      "name": "P.M.L",
      "editorName": "P.M.L (Rare)",
      "description": "Bake the competition into shreds.",
      "previewImage": "/assets/map/inventory/weapons/muffin_launcher.png",
      "rarity": "rare",
      "weapon": {
        "type": "bullet",
        "appearance": "muffinLauncher",
        "shared": {
          "cooldownBetweenShots": 740,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.97
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "muffin_launcher_epic",
      "name": "P.M.L",
      "editorName": "P.M.L (Epic)",
      "description": "Bake the competition into shreds.",
      "previewImage": "/assets/map/inventory/weapons/muffin_launcher.png",
      "rarity": "epic",
      "weapon": {
        "type": "bullet",
        "appearance": "muffinLauncher",
        "shared": {
          "cooldownBetweenShots": 740,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.97
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "muffin_launcher_legendary",
      "name": "P.M.L",
      "editorName": "P.M.L (Legendary)",
      "description": "Bake the competition into shreds.",
      "previewImage": "/assets/map/inventory/weapons/muffin_launcher.png",
      "rarity": "legendary",
      "weapon": {
        "type": "bullet",
        "appearance": "muffinLauncher",
        "shared": {
          "cooldownBetweenShots": 740,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.97
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "pickaxe_common",
      "name": "Pickaxe",
      "editorName": "Pickaxe (Common)",
      "description": "Dig deep.",
      "previewImage": "/assets/map/inventory/weapons/pickaxe.png",
      "rarity": "common",
      "weapon": {
        "type": "melee",
        "appearance": "pickaxe",
        "shared": {
          "cooldownBetweenShots": 550,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        }
      }
    },
    {
      "type": "weapon",
      "id": "pickaxe_uncommon",
      "name": "Pickaxe",
      "editorName": "Pickaxe (Uncommon)",
      "description": "Dig deep.",
      "previewImage": "/assets/map/inventory/weapons/pickaxe.png",
      "rarity": "uncommon",
      "weapon": {
        "type": "melee",
        "appearance": "pickaxe",
        "shared": {
          "cooldownBetweenShots": 550,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        }
      }
    },
    {
      "type": "weapon",
      "id": "pickaxe_rare",
      "name": "Pickaxe",
      "editorName": "Pickaxe (Rare)",
      "description": "Dig deep.",
      "previewImage": "/assets/map/inventory/weapons/pickaxe.png",
      "rarity": "rare",
      "weapon": {
        "type": "melee",
        "appearance": "pickaxe",
        "shared": {
          "cooldownBetweenShots": 550,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        }
      }
    },
    {
      "type": "weapon",
      "id": "pickaxe_epic",
      "name": "Pickaxe",
      "editorName": "Pickaxe (Epic)",
      "description": "Dig deep.",
      "previewImage": "/assets/map/inventory/weapons/pickaxe.png",
      "rarity": "epic",
      "weapon": {
        "type": "melee",
        "appearance": "pickaxe",
        "shared": {
          "cooldownBetweenShots": 550,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        }
      }
    },
    {
      "type": "weapon",
      "id": "pickaxe_legendary",
      "name": "Pickaxe",
      "editorName": "Pickaxe (Legendary)",
      "description": "Dig deep.",
      "previewImage": "/assets/map/inventory/weapons/pickaxe.png",
      "rarity": "legendary",
      "weapon": {
        "type": "melee",
        "appearance": "pickaxe",
        "shared": {
          "cooldownBetweenShots": 550,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        }
      }
    },
    {
      "type": "resource",
      "id": "pink-seed",
      "name": "Pink Seed",
      "editorName": "Pink Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/pink_seed.png"
    },
    {
      "type": "weapon",
      "id": "pixel_common",
      "name": "Pixelator",
      "editorName": "Pixelator (Common)",
      "description": "Crumbles the competition into...bits.",
      "previewImage": "/assets/map/inventory/weapons/pixel.png",
      "minimumRoleLevel": 90,
      "rarity": "common",
      "weapon": {
        "type": "bullet",
        "appearance": "pixel",
        "shared": {
          "cooldownBetweenShots": 270,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "light-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "pixel_uncommon",
      "name": "Pixelator",
      "editorName": "Pixelator (Uncommon)",
      "description": "Crumbles the competition into...bits.",
      "previewImage": "/assets/map/inventory/weapons/pixel.png",
      "minimumRoleLevel": 90,
      "rarity": "uncommon",
      "weapon": {
        "type": "bullet",
        "appearance": "pixel",
        "shared": {
          "cooldownBetweenShots": 270,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "light-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "pixel_rare",
      "name": "Pixelator",
      "editorName": "Pixelator (Rare)",
      "description": "Crumbles the competition into...bits.",
      "previewImage": "/assets/map/inventory/weapons/pixel.png",
      "minimumRoleLevel": 90,
      "rarity": "rare",
      "weapon": {
        "type": "bullet",
        "appearance": "pixel",
        "shared": {
          "cooldownBetweenShots": 270,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "light-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "pixel_epic",
      "name": "Pixelator",
      "editorName": "Pixelator (Epic)",
      "description": "Crumbles the competition into...bits.",
      "previewImage": "/assets/map/inventory/weapons/pixel.png",
      "minimumRoleLevel": 90,
      "rarity": "epic",
      "weapon": {
        "type": "bullet",
        "appearance": "pixel",
        "shared": {
          "cooldownBetweenShots": 270,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "light-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "pixel_legendary",
      "name": "Pixelator",
      "editorName": "Pixelator (Legendary)",
      "description": "Crumbles the competition into...bits.",
      "previewImage": "/assets/map/inventory/weapons/pixel.png",
      "minimumRoleLevel": 90,
      "rarity": "legendary",
      "weapon": {
        "type": "bullet",
        "appearance": "pixel",
        "shared": {
          "cooldownBetweenShots": 270,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "light-shards" }
      }
    },
    {
      "type": "resource",
      "id": "plastic-bottle",
      "name": "Plastic Bottle",
      "editorName": "Plastic Bottle",
      "description": "When finished, please recycle.",
      "previewImage": "/assets/map/inventory/resources/plastic_bottle.png"
    },
    {
      "type": "resource",
      "id": "potato",
      "name": "Potato",
      "editorName": "Potato",
      "description": "Starchy. Flies around your room.",
      "previewImage": "/assets/map/inventory/resources/potato.png"
    },
    {
      "type": "resource",
      "id": "purple-fish",
      "name": "Purple Fish",
      "editorName": "Purple Fish",
      "description": "Believe it or not, I'm all natural.",
      "previewImage": "/assets/map/inventory/resources/purple_fish.png"
    },
    {
      "type": "resource",
      "id": "purple-key",
      "name": "Purple Key",
      "editorName": "Purple Key",
      "description": "What you need to get where you want.",
      "previewImage": "/assets/map/inventory/resources/key_3.png"
    },
    {
      "type": "resource",
      "id": "purple-keycard",
      "name": "Purple Keycard",
      "editorName": "Purple Keycard",
      "description": "Deposit and gain access.",
      "previewImage": "/assets/map/inventory/resources/keycard_purple.png"
    },
    {
      "type": "resource",
      "id": "purple-seed",
      "name": "Purple Seed",
      "editorName": "Purple Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/purple_seed.png"
    },
    {
      "type": "weapon",
      "id": "quantum_portal_common",
      "name": "Quantum Portal",
      "editorName": "Quantum Portal (Common)",
      "description": "Blast the competition into a new dimension.",
      "previewImage": "/assets/map/inventory/weapons/quantum_portal.png",
      "rarity": "common",
      "weapon": {
        "type": "bullet",
        "appearance": "quantumPortal",
        "shared": {
          "cooldownBetweenShots": 0,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.6
        },
        "bullet": { "ammoItemId": "heavy-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "quantum_portal_uncommon",
      "name": "Quantum Portal",
      "editorName": "Quantum Portal (Uncommon)",
      "description": "Blast the competition into a new dimension.",
      "previewImage": "/assets/map/inventory/weapons/quantum_portal.png",
      "rarity": "uncommon",
      "weapon": {
        "type": "bullet",
        "appearance": "quantumPortal",
        "shared": {
          "cooldownBetweenShots": 0,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.6
        },
        "bullet": { "ammoItemId": "heavy-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "quantum_portal_rare",
      "name": "Quantum Portal",
      "editorName": "Quantum Portal (Rare)",
      "description": "Blast the competition into a new dimension.",
      "previewImage": "/assets/map/inventory/weapons/quantum_portal.png",
      "rarity": "rare",
      "weapon": {
        "type": "bullet",
        "appearance": "quantumPortal",
        "shared": {
          "cooldownBetweenShots": 0,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.6
        },
        "bullet": { "ammoItemId": "heavy-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "quantum_portal_epic",
      "name": "Quantum Portal",
      "editorName": "Quantum Portal (Epic)",
      "description": "Blast the competition into a new dimension.",
      "previewImage": "/assets/map/inventory/weapons/quantum_portal.png",
      "rarity": "epic",
      "weapon": {
        "type": "bullet",
        "appearance": "quantumPortal",
        "shared": {
          "cooldownBetweenShots": 0,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.6
        },
        "bullet": { "ammoItemId": "heavy-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "quantum_portal_legendary",
      "name": "Quantum Portal",
      "editorName": "Quantum Portal (Legendary)",
      "description": "Blast the competition into a new dimension.",
      "previewImage": "/assets/map/inventory/weapons/quantum_portal.png",
      "rarity": "legendary",
      "weapon": {
        "type": "bullet",
        "appearance": "quantumPortal",
        "shared": {
          "cooldownBetweenShots": 0,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.6
        },
        "bullet": { "ammoItemId": "heavy-shards" }
      }
    },
    {
      "type": "resource",
      "id": "raspberry",
      "name": "Raspberry",
      "editorName": "Raspberry",
      "description": "Sour, not sweet.",
      "previewImage": "/assets/map/inventory/resources/raspberry.png"
    },
    {
      "type": "resource",
      "id": "red-fish",
      "name": "Red Fish",
      "editorName": "Red Fish",
      "description": "Yes, I'm angry. No, I don't want to talk about it.",
      "previewImage": "/assets/map/inventory/resources/red_fish.png"
    },
    {
      "type": "resource",
      "id": "red-pepper",
      "name": "Red Pepper",
      "editorName": "Red Pepper",
      "description": "Spicy!!!",
      "previewImage": "/assets/map/inventory/resources/red_pepper.png"
    },
    {
      "type": "resource",
      "id": "red-seed",
      "name": "Red Seed",
      "editorName": "Red Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/red_seed.png"
    },
    {
      "type": "resource",
      "id": "research",
      "name": "Research",
      "editorName": "Research",
      "description": "What you need to uncover the next breakthrough",
      "previewImage": "/assets/map/inventory/resources/research.png"
    },
    {
      "type": "item",
      "id": "shield-can",
      "name": "Shield Can",
      "editorName": "Shield Can",
      "description": "Drink up and restore your shield!",
      "previewImage": "/assets/map/inventory/items/shield_can.png",
      "rarity": "uncommon",
      "maxStackSize": 4
    },
    {
      "type": "resource",
      "id": "silver-ore",
      "name": "Silver Ore",
      "editorName": "Silver Ore",
      "description": "A rare & valuable metal",
      "previewImage": "/assets/map/inventory/resources/silver_ore.png",
      "minimumRoleLevel": 90
    },
    {
      "type": "resource",
      "id": "silver-seed",
      "name": "Silver Seed",
      "editorName": "Silver Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/silver_seed.png"
    },
    {
      "type": "weapon",
      "id": "slingshot_common",
      "name": "Slingshot",
      "editorName": "Slingshot (Common)",
      "description": "Fling the competition away.",
      "previewImage": "/assets/map/inventory/weapons/slingshot.png",
      "rarity": "common",
      "weapon": {
        "type": "bullet",
        "appearance": "slingshot",
        "shared": {
          "cooldownBetweenShots": 645,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "slingshot_uncommon",
      "name": "Slingshot",
      "editorName": "Slingshot (Uncommon)",
      "description": "Fling the competition away.",
      "previewImage": "/assets/map/inventory/weapons/slingshot.png",
      "rarity": "uncommon",
      "weapon": {
        "type": "bullet",
        "appearance": "slingshot",
        "shared": {
          "cooldownBetweenShots": 645,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "slingshot_rare",
      "name": "Slingshot",
      "editorName": "Slingshot (Rare)",
      "description": "Fling the competition away.",
      "previewImage": "/assets/map/inventory/weapons/slingshot.png",
      "rarity": "rare",
      "weapon": {
        "type": "bullet",
        "appearance": "slingshot",
        "shared": {
          "cooldownBetweenShots": 645,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "slingshot_epic",
      "name": "Slingshot",
      "editorName": "Slingshot (Epic)",
      "description": "Fling the competition away.",
      "previewImage": "/assets/map/inventory/weapons/slingshot.png",
      "rarity": "epic",
      "weapon": {
        "type": "bullet",
        "appearance": "slingshot",
        "shared": {
          "cooldownBetweenShots": 645,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "slingshot_legendary",
      "name": "Slingshot",
      "editorName": "Slingshot (Legendary)",
      "description": "Fling the competition away.",
      "previewImage": "/assets/map/inventory/weapons/slingshot.png",
      "rarity": "legendary",
      "weapon": {
        "type": "bullet",
        "appearance": "slingshot",
        "shared": {
          "cooldownBetweenShots": 645,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "resource",
      "id": "snowballs",
      "name": "Snowball",
      "editorName": "Snowball",
      "description": "Tightly compacted for maximum aerodynamic efficiency",
      "previewImage": "/assets/map/inventory/resources/snowball.png"
    },
    {
      "type": "weapon",
      "id": "snowball_launcher_common",
      "name": "Snowball Launcher",
      "editorName": "Snowball Launcher (Common)",
      "description": "Bestow your enemies with the gift of snow!",
      "previewImage": "/assets/map/inventory/weapons/snowball_launcher.png",
      "rarity": "common",
      "weapon": {
        "type": "bullet",
        "appearance": "snowball",
        "shared": {
          "cooldownBetweenShots": 160,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.95
        },
        "bullet": { "ammoItemId": "snowballs" }
      }
    },
    {
      "type": "weapon",
      "id": "snowball_launcher_uncommon",
      "name": "Snowball Launcher",
      "editorName": "Snowball Launcher (Uncommon)",
      "description": "Bestow your enemies with the gift of snow!",
      "previewImage": "/assets/map/inventory/weapons/snowball_launcher.png",
      "rarity": "uncommon",
      "weapon": {
        "type": "bullet",
        "appearance": "snowball",
        "shared": {
          "cooldownBetweenShots": 160,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.95
        },
        "bullet": { "ammoItemId": "snowballs" }
      }
    },
    {
      "type": "weapon",
      "id": "snowball_launcher_rare",
      "name": "Snowball Launcher",
      "editorName": "Snowball Launcher (Rare)",
      "description": "Bestow your enemies with the gift of snow!",
      "previewImage": "/assets/map/inventory/weapons/snowball_launcher.png",
      "rarity": "rare",
      "weapon": {
        "type": "bullet",
        "appearance": "snowball",
        "shared": {
          "cooldownBetweenShots": 160,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.95
        },
        "bullet": { "ammoItemId": "snowballs" }
      }
    },
    {
      "type": "weapon",
      "id": "snowball_launcher_epic",
      "name": "Snowball Launcher",
      "editorName": "Snowball Launcher (Epic)",
      "description": "Bestow your enemies with the gift of snow!",
      "previewImage": "/assets/map/inventory/weapons/snowball_launcher.png",
      "rarity": "epic",
      "weapon": {
        "type": "bullet",
        "appearance": "snowball",
        "shared": {
          "cooldownBetweenShots": 160,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.95
        },
        "bullet": { "ammoItemId": "snowballs" }
      }
    },
    {
      "type": "weapon",
      "id": "snowball_launcher_legendary",
      "name": "Snowball Launcher",
      "editorName": "Snowball Launcher (Legendary)",
      "description": "Bestow your enemies with the gift of snow!",
      "previewImage": "/assets/map/inventory/weapons/snowball_launcher.png",
      "rarity": "legendary",
      "weapon": {
        "type": "bullet",
        "appearance": "snowball",
        "shared": {
          "cooldownBetweenShots": 160,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.95
        },
        "bullet": { "ammoItemId": "snowballs" }
      }
    },
    {
      "type": "resource",
      "id": "star-fish",
      "name": "Starfish",
      "editorName": "Starfish",
      "description": "I'm the star of my own show.",
      "previewImage": "/assets/map/inventory/resources/star_fish.png"
    },
    {
      "type": "resource",
      "id": "strawberry",
      "name": "Strawberry",
      "editorName": "Strawberry",
      "description": "Not the thing you put in your cup, that's just a straw.",
      "previewImage": "/assets/map/inventory/resources/strawberry.png"
    },
    {
      "type": "resource",
      "id": "tan-seed",
      "name": "Tan Seed",
      "editorName": "Tan Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/tan_seed.png"
    },
    {
      "type": "resource",
      "id": "teal-seed",
      "name": "Teal Seed",
      "editorName": "Teal Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/teal_seed.png"
    },
    {
      "type": "resource",
      "id": "ticket",
      "name": "Ticket",
      "editorName": "Ticket",
      "description": "Redeem for a reward!",
      "previewImage": "/assets/map/inventory/resources/ticket.png"
    },
    {
      "type": "resource",
      "id": "water",
      "name": "Water",
      "editorName": "Water",
      "description": "H20 to go",
      "previewImage": "/assets/map/inventory/resources/water.png"
    },
    {
      "type": "resource",
      "id": "watermelon",
      "name": "Watermelon",
      "editorName": "Watermelon",
      "description": "Perfect for a hot summer day",
      "previewImage": "/assets/map/inventory/resources/watermelon.png"
    },
    {
      "type": "resource",
      "id": "wheat",
      "name": "Wheat",
      "editorName": "Wheat",
      "description": "An essential grain for your favorite foods",
      "previewImage": "/assets/map/inventory/resources/wheat.png"
    },
    {
      "type": "resource",
      "id": "white-seed",
      "name": "White Seed",
      "editorName": "White Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/white_seed.png"
    },
    {
      "type": "weapon",
      "id": "wooden_wand_common",
      "name": "Wooden Wand",
      "editorName": "Wooden Wand (Common)",
      "description": "Cast a botanical spell.",
      "previewImage": "/assets/map/inventory/weapons/wooden_wand.png",
      "rarity": "common",
      "weapon": {
        "type": "bullet",
        "appearance": "woodenWand",
        "shared": {
          "cooldownBetweenShots": 375,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.9
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "wooden_wand_uncommon",
      "name": "Wooden Wand",
      "editorName": "Wooden Wand (Uncommon)",
      "description": "Cast a botanical spell.",
      "previewImage": "/assets/map/inventory/weapons/wooden_wand.png",
      "rarity": "uncommon",
      "weapon": {
        "type": "bullet",
        "appearance": "woodenWand",
        "shared": {
          "cooldownBetweenShots": 375,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.9
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "wooden_wand_rare",
      "name": "Wooden Wand",
      "editorName": "Wooden Wand (Rare)",
      "description": "Cast a botanical spell.",
      "previewImage": "/assets/map/inventory/weapons/wooden_wand.png",
      "rarity": "rare",
      "weapon": {
        "type": "bullet",
        "appearance": "woodenWand",
        "shared": {
          "cooldownBetweenShots": 375,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.9
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "wooden_wand_epic",
      "name": "Wooden Wand",
      "editorName": "Wooden Wand (Epic)",
      "description": "Cast a botanical spell.",
      "previewImage": "/assets/map/inventory/weapons/wooden_wand.png",
      "rarity": "epic",
      "weapon": {
        "type": "bullet",
        "appearance": "woodenWand",
        "shared": {
          "cooldownBetweenShots": 375,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.9
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "wooden_wand_legendary",
      "name": "Wooden Wand",
      "editorName": "Wooden Wand (Legendary)",
      "description": "Cast a botanical spell.",
      "previewImage": "/assets/map/inventory/weapons/wooden_wand.png",
      "rarity": "legendary",
      "weapon": {
        "type": "bullet",
        "appearance": "woodenWand",
        "shared": {
          "cooldownBetweenShots": 375,
          "allowAutoFire": false,
          "startingProjectileDistanceFromCharacter": 0.9
        },
        "bullet": { "ammoItemId": "medium-shards" }
      }
    },
    {
      "type": "resource",
      "id": "yellow-seed",
      "name": "Yellow Seed",
      "editorName": "Yellow Seed",
      "description": "Grow something special.",
      "previewImage": "/assets/map/inventory/resources/yellow_seed.png"
    },
    {
      "type": "weapon",
      "id": "zapper_common",
      "name": "Zapper",
      "editorName": "Zapper (Common)",
      "description": "Zap the enemies away!",
      "previewImage": "/assets/map/inventory/weapons/zapper.png",
      "rarity": "common",
      "weapon": {
        "type": "bullet",
        "appearance": "zapper",
        "shared": {
          "cooldownBetweenShots": 160,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "light-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "zapper_uncommon",
      "name": "Zapper",
      "editorName": "Zapper (Uncommon)",
      "description": "Zap the enemies away!",
      "previewImage": "/assets/map/inventory/weapons/zapper.png",
      "rarity": "uncommon",
      "weapon": {
        "type": "bullet",
        "appearance": "zapper",
        "shared": {
          "cooldownBetweenShots": 160,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "light-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "zapper_rare",
      "name": "Zapper",
      "editorName": "Zapper (Rare)",
      "description": "Zap the enemies away!",
      "previewImage": "/assets/map/inventory/weapons/zapper.png",
      "rarity": "rare",
      "weapon": {
        "type": "bullet",
        "appearance": "zapper",
        "shared": {
          "cooldownBetweenShots": 160,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "light-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "zapper_epic",
      "name": "Zapper",
      "editorName": "Zapper (Epic)",
      "description": "Zap the enemies away!",
      "previewImage": "/assets/map/inventory/weapons/zapper.png",
      "rarity": "epic",
      "weapon": {
        "type": "bullet",
        "appearance": "zapper",
        "shared": {
          "cooldownBetweenShots": 160,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "light-shards" }
      }
    },
    {
      "type": "weapon",
      "id": "zapper_legendary",
      "name": "Zapper",
      "editorName": "Zapper (Legendary)",
      "description": "Zap the enemies away!",
      "previewImage": "/assets/map/inventory/weapons/zapper.png",
      "rarity": "legendary",
      "weapon": {
        "type": "bullet",
        "appearance": "zapper",
        "shared": {
          "cooldownBetweenShots": 160,
          "allowAutoFire": true,
          "startingProjectileDistanceFromCharacter": 0.8
        },
        "bullet": { "ammoItemId": "light-shards" }
      }
    }
  ],
  "requestedAllProps": true,
  "hasAllProps": true,
  "codeGrids": {
    "blockCategories": "[{\"name\":\"Essentials\",\"color\":\"#283593\",\"blocks\":[{\"type\":\"message_broadcaster\"},{\"type\":\"set_property\"},{\"type\":\"get_property\"},{\"type\":\"current_character_name\"},{\"type\":\"add_activity_feed_item_for_everyone\"},{\"type\":\"add_activity_feed_item_for_triggering_player\"},{\"type\":\"add_activity_feed_item_for_game_host\"},{\"type\":\"current_character_team_number\"},{\"type\":\"triggering_player_score\"},{\"type\":\"get_team_score\"},{\"type\":\"is_a_live_game\"},{\"type\":\"is_an_assignment\"},{\"type\":\"seconds_into_game\"}]},{\"name\":\"Logic\",\"color\":\"#5C81A6\",\"blocks\":[{\"type\":\"controls_if\"},{\"type\":\"logic_compare\"},{\"type\":\"logic_operation\"},{\"type\":\"logic_boolean\"}]},{\"name\":\"Math\",\"color\":\"#5CA65C\",\"blocks\":[{\"type\":\"math_number\"},{\"type\":\"math_arithmetic\"},{\"type\":\"math_single\"},{\"type\":\"math_trig\"},{\"type\":\"math_number_property\"},{\"type\":\"math_round\"},{\"type\":\"math_random_int\"}]},{\"name\":\"Text\",\"color\":\"#5ba58c\",\"blocks\":[{\"type\":\"text\"},{\"type\":\"text_join\"},{\"type\":\"text_length\"},{\"type\":\"number_with_commas\"},{\"type\":\"text_getSubstring\"},{\"type\":\"text_charAt\"},{\"type\":\"text_indexOf\"}]},{\"name\":\"Variables\",\"color\":\"#a55b80\",\"custom\":\"VARIABLE\",\"blocks\":[]}]",
    "customBlocks": "[{\"type\":\"message_broadcaster\",\"message0\":\"Broadcast Message On Channel %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"broadcast_message_on_channel\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"set_property\",\"message0\":\"Set Property %1 Value %2 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"set_property\",\"check\":\"String\",\"align\":\"RIGHT\"},{\"type\":\"input_value\",\"name\":\"value\",\"check\":[\"String\",\"Number\",\"Boolean\"],\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"get_property\",\"message0\":\"Get Property %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"get_property\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":[\"String\",\"Number\",\"Boolean\"]},{\"type\":\"current_character_name\",\"message0\":\"Triggering Player's Name\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"String\"},{\"type\":\"add_activity_feed_item_for_everyone\",\"message0\":\"Add Activity Feed Item For Everyone %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"add_activity_feed_item_for_everyone\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"add_activity_feed_item_for_triggering_player\",\"message0\":\"Add Activity Feed Item For Triggering Player %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"add_activity_feed_item_for_triggering_player\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"add_activity_feed_item_for_game_host\",\"message0\":\"Add Activity Feed Item For Game Host %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"add_activity_feed_item_for_game_host\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"current_character_team_number\",\"message0\":\"Triggering Player's Team Number\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"Number\"},{\"type\":\"triggering_player_score\",\"message0\":\"Triggering Player's Score\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"Number\"},{\"type\":\"get_team_score\",\"message0\":\"Get Score Of Team %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"get_score_of_team\",\"check\":\"Number\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"Number\"},{\"type\":\"is_a_live_game\",\"message0\":\"Is A Live Game\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"Boolean\"},{\"type\":\"is_an_assignment\",\"message0\":\"Is An Assignment\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"Boolean\"},{\"type\":\"seconds_into_game\",\"message0\":\"Seconds Into Game\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"Number\"},{\"type\":\"set_assignment_objective\",\"message0\":\"Set Objective To %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"set_objective_to\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"set_percentage_complete\",\"message0\":\"Set Percentage Complete To %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"set_percentage_complete_to\",\"check\":\"Number\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"increment_percentage_complete\",\"message0\":\"Increment Percentage Complete By %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"increment_percentage_complete_by\",\"check\":\"Number\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"send_custom_notification\",\"message0\":\"Send Notification %1 Title %2 Content %3 \",\"args0\":[{\"type\":\"input_dummy\"},{\"type\":\"input_value\",\"name\":\"title\",\"check\":\"String\",\"align\":\"RIGHT\"},{\"type\":\"input_value\",\"name\":\"content\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"other_character_name\",\"message0\":\"Other Player's Name\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"String\"},{\"type\":\"other_character_team_number\",\"message0\":\"Other Player's Team Number\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"Number\"},{\"type\":\"other_character_get_property\",\"message0\":\"Get Property As Other Player %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"get_property_as_other_player\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":[\"String\",\"Number\",\"Boolean\"]},{\"type\":\"other_character_set_property\",\"message0\":\"Set Property (As Other Player) %1 Value %2 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"set_property_as_other_player\",\"check\":\"String\",\"align\":\"RIGHT\"},{\"type\":\"input_value\",\"name\":\"value\",\"check\":[\"String\",\"Number\",\"Boolean\"],\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"other_character_message_broadcaster\",\"message0\":\"Broadcast Message (As Other Player) On Channel %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"broadcast_message_as_other_player_on_channel\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"grant\",\"message0\":\"Grant Player Selected Item\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"grant_custom\",\"message0\":\"Grant Player Selected Item (Custom Amount) %1 Amount %2 \",\"args0\":[{\"type\":\"input_dummy\"},{\"type\":\"input_value\",\"name\":\"amount\",\"check\":\"Number\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"set_billboard_text\",\"message0\":\"Set Text %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"set_text\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"set_text_color\",\"message0\":\"Set Text Color To %1 \",\"args0\":[{\"type\":\"field_colour\",\"name\":\"set_text_color_to\",\"colour\":\"#ff0000\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"set_image\",\"message0\":\"Set Image URL %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"set_image_url\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"set_frame_color\",\"message0\":\"Set Frame Color To %1 \",\"args0\":[{\"type\":\"field_colour\",\"name\":\"set_frame_color_to\",\"colour\":\"#ff0000\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"question_answering_streak\",\"message0\":\"Questions Answered Correctly In A Row\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"Number\"},{\"type\":\"message_correct_answer\",\"message0\":\"Set Message Shown When Player Answers Correctly %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"set_message_shown_when_player_answers_correctly\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"message_incorrect_answer\",\"message0\":\"Set Message Shown When Player Answers Incorrectly %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"set_message_shown_when_player_answers_incorrectly\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"set_header\",\"message0\":\"Set Header %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"set_header\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"set_content\",\"message0\":\"Set Content %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"set_content\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"get_amount\",\"message0\":\"Get Amount Of Current Item %1 \",\"args0\":[{\"type\":\"input_dummy\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":[\"Number\"]},{\"type\":\"set_gui_text\",\"message0\":\"Set Text %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"set_text\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"get_minutes\",\"message0\":\"Get Minutes %1 \",\"args0\":[{\"type\":\"input_dummy\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":[\"Number\"]},{\"type\":\"get_seconds\",\"message0\":\"Get Seconds %1 \",\"args0\":[{\"type\":\"input_dummy\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":[\"Number\"]},{\"type\":\"get_time_left_formatted\",\"message0\":\"Get Time Left Formatted %1 \",\"args0\":[{\"type\":\"input_dummy\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":[\"String\"]},{\"type\":\"get_player_count\",\"message0\":\"Number Of Players On Team %1 \",\"args0\":[{\"type\":\"input_dummy\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":[\"Number\"]},{\"type\":\"knockout_manager_other_character_name\",\"message0\":\"Knocked Player's Name\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"String\"},{\"type\":\"knockout_manager_other_character_team_number\",\"message0\":\"Knocked Player's Team Number\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"Number\"},{\"type\":\"knockout_manager_other_character_get_property\",\"message0\":\"Get Property As Knocked Out Player %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"get_property_as_knocked_out_player\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":[\"String\",\"Number\",\"Boolean\"]},{\"type\":\"knockout_manager_other_character_set_property\",\"message0\":\"Set Property (As Knocked Out Player) %1 Value %2 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"set_property_as_knocked_out_player\",\"check\":\"String\",\"align\":\"RIGHT\"},{\"type\":\"input_value\",\"name\":\"value\",\"check\":[\"String\",\"Number\",\"Boolean\"],\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"knockout_manager_other_character_message_broadcaster\",\"message0\":\"Broadcast Message (As Knocked Out Player) On Channel %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"broadcast_message_as_knocked_out_player_on_channel\",\"check\":\"String\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"tag_zone_other_character_name\",\"message0\":\"Other Player's Name\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"String\"},{\"type\":\"tag_zone_other_character_team_number\",\"message0\":\"Other Player's Team Number\",\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"Number\"},{\"type\":\"player_position_detector_player_x_position\",\"message0\":\"Player's X Position %1 \",\"args0\":[{\"type\":\"input_dummy\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":[\"Number\"]},{\"type\":\"player_position_detector_player_y_position\",\"message0\":\"Player's Y Position %1 \",\"args0\":[{\"type\":\"input_dummy\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":[\"Number\"]},{\"type\":\"damage_custom\",\"message0\":\"Damage Player (Custom Amount) %1 Amount %2 \",\"args0\":[{\"type\":\"input_dummy\"},{\"type\":\"input_value\",\"name\":\"amount\",\"check\":\"Number\",\"align\":\"RIGHT\"}],\"colour\":230,\"tooltip\":\"\",\"helpUrl\":\"\",\"previousStatement\":null,\"nextStatement\":null},{\"type\":\"number_with_commas\",\"message0\":\"Convert Number To Text (With Commas) %1 \",\"args0\":[{\"type\":\"input_value\",\"name\":\"convert_number_to_text_with_commas\",\"check\":\"Number\",\"align\":\"RIGHT\"}],\"colour\":159.7,\"tooltip\":\"\",\"helpUrl\":\"\",\"output\":\"String\"}]",
    "customBlocksParsed": [
      {
        "type": "message_broadcaster",
        "message0": "Broadcast Message On Channel %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "broadcast_message_on_channel",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "set_property",
        "message0": "Set Property %1 Value %2 ",
        "args0": [
          {
            "type": "input_value",
            "name": "set_property",
            "check": "String",
            "align": "RIGHT"
          },
          {
            "type": "input_value",
            "name": "value",
            "check": ["String", "Number", "Boolean"],
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "get_property",
        "message0": "Get Property %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "get_property",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": ["String", "Number", "Boolean"]
      },
      {
        "type": "current_character_name",
        "message0": "Triggering Player's Name",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "String"
      },
      {
        "type": "add_activity_feed_item_for_everyone",
        "message0": "Add Activity Feed Item For Everyone %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "add_activity_feed_item_for_everyone",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "add_activity_feed_item_for_triggering_player",
        "message0": "Add Activity Feed Item For Triggering Player %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "add_activity_feed_item_for_triggering_player",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "add_activity_feed_item_for_game_host",
        "message0": "Add Activity Feed Item For Game Host %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "add_activity_feed_item_for_game_host",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "current_character_team_number",
        "message0": "Triggering Player's Team Number",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "Number"
      },
      {
        "type": "triggering_player_score",
        "message0": "Triggering Player's Score",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "Number"
      },
      {
        "type": "get_team_score",
        "message0": "Get Score Of Team %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "get_score_of_team",
            "check": "Number",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "Number"
      },
      {
        "type": "is_a_live_game",
        "message0": "Is A Live Game",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "Boolean"
      },
      {
        "type": "is_an_assignment",
        "message0": "Is An Assignment",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "Boolean"
      },
      {
        "type": "seconds_into_game",
        "message0": "Seconds Into Game",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "Number"
      },
      {
        "type": "set_assignment_objective",
        "message0": "Set Objective To %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "set_objective_to",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "set_percentage_complete",
        "message0": "Set Percentage Complete To %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "set_percentage_complete_to",
            "check": "Number",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "increment_percentage_complete",
        "message0": "Increment Percentage Complete By %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "increment_percentage_complete_by",
            "check": "Number",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "send_custom_notification",
        "message0": "Send Notification %1 Title %2 Content %3 ",
        "args0": [
          { "type": "input_dummy" },
          {
            "type": "input_value",
            "name": "title",
            "check": "String",
            "align": "RIGHT"
          },
          {
            "type": "input_value",
            "name": "content",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "other_character_name",
        "message0": "Other Player's Name",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "String"
      },
      {
        "type": "other_character_team_number",
        "message0": "Other Player's Team Number",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "Number"
      },
      {
        "type": "other_character_get_property",
        "message0": "Get Property As Other Player %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "get_property_as_other_player",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": ["String", "Number", "Boolean"]
      },
      {
        "type": "other_character_set_property",
        "message0": "Set Property (As Other Player) %1 Value %2 ",
        "args0": [
          {
            "type": "input_value",
            "name": "set_property_as_other_player",
            "check": "String",
            "align": "RIGHT"
          },
          {
            "type": "input_value",
            "name": "value",
            "check": ["String", "Number", "Boolean"],
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "other_character_message_broadcaster",
        "message0": "Broadcast Message (As Other Player) On Channel %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "broadcast_message_as_other_player_on_channel",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "grant",
        "message0": "Grant Player Selected Item",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "grant_custom",
        "message0": "Grant Player Selected Item (Custom Amount) %1 Amount %2 ",
        "args0": [
          { "type": "input_dummy" },
          {
            "type": "input_value",
            "name": "amount",
            "check": "Number",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "set_billboard_text",
        "message0": "Set Text %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "set_text",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "set_text_color",
        "message0": "Set Text Color To %1 ",
        "args0": [
          {
            "type": "field_colour",
            "name": "set_text_color_to",
            "colour": "#ff0000"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "set_image",
        "message0": "Set Image URL %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "set_image_url",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "set_frame_color",
        "message0": "Set Frame Color To %1 ",
        "args0": [
          {
            "type": "field_colour",
            "name": "set_frame_color_to",
            "colour": "#ff0000"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "question_answering_streak",
        "message0": "Questions Answered Correctly In A Row",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "Number"
      },
      {
        "type": "message_correct_answer",
        "message0": "Set Message Shown When Player Answers Correctly %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "set_message_shown_when_player_answers_correctly",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "message_incorrect_answer",
        "message0": "Set Message Shown When Player Answers Incorrectly %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "set_message_shown_when_player_answers_incorrectly",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "set_header",
        "message0": "Set Header %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "set_header",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "set_content",
        "message0": "Set Content %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "set_content",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "get_amount",
        "message0": "Get Amount Of Current Item %1 ",
        "args0": [{ "type": "input_dummy" }],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": ["Number"]
      },
      {
        "type": "set_gui_text",
        "message0": "Set Text %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "set_text",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "get_minutes",
        "message0": "Get Minutes %1 ",
        "args0": [{ "type": "input_dummy" }],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": ["Number"]
      },
      {
        "type": "get_seconds",
        "message0": "Get Seconds %1 ",
        "args0": [{ "type": "input_dummy" }],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": ["Number"]
      },
      {
        "type": "get_time_left_formatted",
        "message0": "Get Time Left Formatted %1 ",
        "args0": [{ "type": "input_dummy" }],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": ["String"]
      },
      {
        "type": "get_player_count",
        "message0": "Number Of Players On Team %1 ",
        "args0": [{ "type": "input_dummy" }],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": ["Number"]
      },
      {
        "type": "knockout_manager_other_character_name",
        "message0": "Knocked Player's Name",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "String"
      },
      {
        "type": "knockout_manager_other_character_team_number",
        "message0": "Knocked Player's Team Number",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "Number"
      },
      {
        "type": "knockout_manager_other_character_get_property",
        "message0": "Get Property As Knocked Out Player %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "get_property_as_knocked_out_player",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": ["String", "Number", "Boolean"]
      },
      {
        "type": "knockout_manager_other_character_set_property",
        "message0": "Set Property (As Knocked Out Player) %1 Value %2 ",
        "args0": [
          {
            "type": "input_value",
            "name": "set_property_as_knocked_out_player",
            "check": "String",
            "align": "RIGHT"
          },
          {
            "type": "input_value",
            "name": "value",
            "check": ["String", "Number", "Boolean"],
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "knockout_manager_other_character_message_broadcaster",
        "message0": "Broadcast Message (As Knocked Out Player) On Channel %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "broadcast_message_as_knocked_out_player_on_channel",
            "check": "String",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "tag_zone_other_character_name",
        "message0": "Other Player's Name",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "String"
      },
      {
        "type": "tag_zone_other_character_team_number",
        "message0": "Other Player's Team Number",
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": "Number"
      },
      {
        "type": "player_position_detector_player_x_position",
        "message0": "Player's X Position %1 ",
        "args0": [{ "type": "input_dummy" }],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": ["Number"]
      },
      {
        "type": "player_position_detector_player_y_position",
        "message0": "Player's Y Position %1 ",
        "args0": [{ "type": "input_dummy" }],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "output": ["Number"]
      },
      {
        "type": "damage_custom",
        "message0": "Damage Player (Custom Amount) %1 Amount %2 ",
        "args0": [
          { "type": "input_dummy" },
          {
            "type": "input_value",
            "name": "amount",
            "check": "Number",
            "align": "RIGHT"
          }
        ],
        "colour": 230,
        "tooltip": "",
        "helpUrl": "",
        "previousStatement": null,
        "nextStatement": null
      },
      {
        "type": "number_with_commas",
        "message0": "Convert Number To Text (With Commas) %1 ",
        "args0": [
          {
            "type": "input_value",
            "name": "convert_number_to_text_with_commas",
            "check": "Number",
            "align": "RIGHT"
          }
        ],
        "colour": 159.7,
        "tooltip": "",
        "helpUrl": "",
        "output": "String"
      }
    ]
  }
}
